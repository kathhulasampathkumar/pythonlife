# Generated by Django 5.0.1 on 2024-02-01 05:05

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Abc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("catid", models.IntegerField()),
                ("change_cat", models.CharField(max_length=500)),
                ("reasonofchange", models.CharField(max_length=100)),
                ("typeofchange", models.CharField(max_length=100)),
                ("conclusionbyme", models.CharField(max_length=500)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "abc",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AcceptanceCriteria",
            fields=[
                (
                    "docno",
                    models.PositiveBigIntegerField(primary_key=True, serialize=False),
                ),
                ("sfcode", models.CharField(blank=True, max_length=20, null=True)),
                ("slno", models.CharField(blank=True, max_length=4, null=True)),
                ("ac1", models.CharField(blank=True, max_length=20, null=True)),
                ("ac2", models.CharField(blank=True, max_length=20, null=True)),
                ("ac3", models.CharField(blank=True, max_length=20, null=True)),
                ("ac4", models.CharField(blank=True, max_length=20, null=True)),
                ("ac5", models.CharField(blank=True, max_length=20, null=True)),
                ("remarks", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("delete_by", models.IntegerField(blank=True, null=True)),
                ("dalete_date", models.CharField(blank=True, max_length=20, null=True)),
                ("delete_reason", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "acceptance_criteria",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AccTrackCategoryMaster",
            fields=[
                ("cat_id", models.SmallAutoField(primary_key=True, serialize=False)),
                ("cat_name", models.CharField(max_length=30)),
                ("type", models.CharField(max_length=15)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "acc_track_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AccTrackHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("comments", models.TextField()),
                ("date", models.DateField()),
                ("status", models.IntegerField()),
                ("updated", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_reason", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "acc_track_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AccTrackNtry",
            fields=[
                ("slno", models.SmallAutoField(primary_key=True, serialize=False)),
                ("description", models.TextField()),
                ("date", models.DateField()),
                ("req", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("loc", models.CharField(max_length=4)),
                ("cat_id", models.SmallIntegerField()),
                ("sub_cat_id", models.SmallIntegerField()),
                ("status", models.SmallIntegerField()),
                ("responsibility", models.CharField(max_length=150)),
                ("other_emp", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "acc_track_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AccTrackStatusMaster",
            fields=[
                ("status", models.SmallAutoField(primary_key=True, serialize=False)),
                ("status_name", models.CharField(max_length=30)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "acc_track_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AccTrackSubCategoryMaster",
            fields=[
                ("cat_id", models.SmallIntegerField()),
                (
                    "sub_cat_id",
                    models.SmallAutoField(primary_key=True, serialize=False),
                ),
                ("sub_cat_name", models.CharField(max_length=150)),
                ("responsibility", models.CharField(max_length=150)),
                ("type", models.CharField(max_length=15)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "acc_track_sub_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AeGallery",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ext", models.CharField(max_length=50)),
                ("title", models.CharField(max_length=100)),
                ("data", models.CharField(max_length=150)),
                ("image_time", models.DateTimeField()),
                ("html_enty_text", models.CharField(max_length=500)),
                ("html_spl_chars", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "ae_gallery",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AlternateMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reqid", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("code", models.CharField(blank=True, max_length=30, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "alternate_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AlternateMaster1",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reqid", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("code", models.CharField(max_length=30)),
                ("remarks", models.TextField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "alternate_master1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AlternateMaterialCodeNew",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("m_code", models.CharField(max_length=15)),
                ("m_category", models.CharField(max_length=50)),
                ("e_code", models.CharField(max_length=50)),
                ("delete1", models.CharField(max_length=2)),
            ],
            options={
                "db_table": "alternate_material_code_new",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AmcDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sno", models.IntegerField(blank=True, null=True)),
                ("coach_no", models.IntegerField(blank=True, null=True)),
                ("coach_type", models.CharField(blank=True, max_length=10, null=True)),
                ("inv_type", models.CharField(blank=True, max_length=10, null=True)),
                ("zone", models.CharField(blank=True, max_length=40, null=True)),
                ("shed", models.CharField(blank=True, max_length=40, null=True)),
                ("us_no", models.IntegerField(blank=True, null=True)),
                ("cu_no", models.IntegerField(blank=True, null=True)),
                ("createdby", models.SmallIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "amc_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ApplSwDg",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dgid", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("project", models.IntegerField()),
                ("takentime", models.FloatField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "appl_sw_dg",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ApplSwProj",
            fields=[
                ("projid", models.AutoField(primary_key=True, serialize=False)),
                ("project", models.CharField(blank=True, max_length=100, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "appl_sw_proj",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AprslHeaderMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("form_name", models.CharField(max_length=1)),
                ("header_no", models.IntegerField()),
                ("header_name", models.CharField(max_length=50)),
                ("p", models.IntegerField()),
                ("a", models.IntegerField()),
                ("g", models.IntegerField()),
                ("e", models.IntegerField()),
                ("max_marks", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "aprsl_header_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AprslItemMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("form_name", models.CharField(max_length=1)),
                ("header_no", models.IntegerField()),
                ("item_no", models.IntegerField()),
                ("item_name", models.CharField(max_length=50)),
                ("p", models.IntegerField()),
                ("a", models.IntegerField()),
                ("g", models.IntegerField()),
                ("e", models.IntegerField()),
                ("max_marks", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "aprsl_item_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Arose",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=25)),
                ("age", models.IntegerField()),
                ("class_field", models.IntegerField(db_column="class")),
            ],
            options={
                "db_table": "arose",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AssemblyTypeMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("assembly_name", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "assembly_type_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AssocFamily",
            fields=[
                ("fid", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("sap_no", models.CharField(max_length=5)),
                ("fname", models.CharField(blank=True, max_length=50, null=True)),
                ("frel", models.CharField(blank=True, max_length=15, null=True)),
                ("fgender", models.IntegerField(blank=True, null=True)),
                ("fdob", models.DateField()),
                ("fage", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("act_sts", models.IntegerField()),
            ],
            options={
                "db_table": "assoc_family",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Atest",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("gr", models.CharField(max_length=150)),
                ("display", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "atest",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AttendedAt",
            fields=[
                ("at_no", models.AutoField(primary_key=True, serialize=False)),
                ("at_name", models.CharField(max_length=50)),
                ("createdby", models.SmallIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "attended_at",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditAuditorAction",
            fields=[
                ("uniq_slno", models.IntegerField()),
                ("nc_no", models.IntegerField(primary_key=True, serialize=False)),
                ("audi_date", models.DateField()),
                ("category", models.IntegerField()),
                ("agtstd", models.CharField(blank=True, max_length=500, null=True)),
                ("nc_detils", models.CharField(blank=True, max_length=50, null=True)),
                ("cls_audit", models.CharField(blank=True, max_length=50, null=True)),
                ("docs", models.CharField(blank=True, max_length=50, null=True)),
                ("ofi_sts", models.IntegerField()),
                (
                    "ofi_details",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
                ("act_taken", models.CharField(blank=True, max_length=50, null=True)),
                ("nc_ref", models.IntegerField()),
                ("verified", models.CharField(blank=True, max_length=50, null=True)),
                ("complied", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "not_complied",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "veri_corr_act",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "veri_siml_act",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "eff_ver_audit",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("nc_sts", models.IntegerField()),
                (
                    "nc_sts_commnet",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("nc_close_date", models.DateField()),
                ("pd_stg", models.CharField(blank=True, max_length=150, null=True)),
                ("grade", models.CharField(blank=True, max_length=25, null=True)),
                ("rating", models.CharField(blank=True, max_length=25, null=True)),
                (
                    "requirement",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("failure", models.CharField(blank=True, max_length=1000, null=True)),
                ("evidence", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "cancell_nc",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("cancel_by", models.IntegerField()),
                ("cancel_time", models.DateTimeField()),
                ("repeat_nc", models.IntegerField()),
                ("auditee_acc", models.IntegerField()),
                ("nc_not_reason", models.TextField(blank=True, null=True)),
                ("followup_auditor", models.IntegerField()),
                (
                    "followup_date",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("first_mail_count", models.IntegerField()),
                ("attachment", models.CharField(blank=True, max_length=500, null=True)),
                ("pro_ext", models.CharField(blank=True, max_length=100, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "audit_auditor_action",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditAuditorAction22092022",
            fields=[
                ("uniq_slno", models.IntegerField()),
                ("nc_no", models.IntegerField(primary_key=True, serialize=False)),
                ("audi_date", models.DateField()),
                ("category", models.IntegerField()),
                ("agtstd", models.CharField(blank=True, max_length=500, null=True)),
                ("nc_detils", models.CharField(blank=True, max_length=50, null=True)),
                ("cls_audit", models.CharField(blank=True, max_length=50, null=True)),
                ("docs", models.CharField(blank=True, max_length=50, null=True)),
                ("ofi_sts", models.IntegerField()),
                (
                    "ofi_details",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
                ("act_taken", models.CharField(blank=True, max_length=50, null=True)),
                ("nc_ref", models.IntegerField()),
                ("verified", models.CharField(blank=True, max_length=50, null=True)),
                ("complied", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "not_complied",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "veri_corr_act",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "veri_siml_act",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "eff_ver_audit",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("nc_sts", models.IntegerField()),
                (
                    "nc_sts_commnet",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("nc_close_date", models.DateField()),
                ("pd_stg", models.CharField(blank=True, max_length=150, null=True)),
                ("grade", models.CharField(blank=True, max_length=25, null=True)),
                ("rating", models.CharField(blank=True, max_length=25, null=True)),
                (
                    "requirement",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("failure", models.CharField(blank=True, max_length=1000, null=True)),
                ("evidence", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "cancell_nc",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("cancel_by", models.IntegerField()),
                ("cancel_time", models.DateTimeField()),
                ("repeat_nc", models.IntegerField()),
                ("auditee_acc", models.IntegerField()),
                ("nc_not_reason", models.TextField(blank=True, null=True)),
                ("followup_auditor", models.IntegerField()),
                (
                    "followup_date",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("first_mail_count", models.IntegerField()),
                ("attachment", models.CharField(blank=True, max_length=500, null=True)),
                ("pro_ext", models.CharField(blank=True, max_length=100, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "audit_auditor_action_22-09-2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditAuditorList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("department", models.IntegerField()),
                ("loc", models.CharField(blank=True, max_length=50, null=True)),
                ("audit_emp_sts", models.IntegerField()),
                ("auditor_qua_date", models.DateField()),
                ("auditor_disqua_date", models.DateField()),
                ("crnt_sts", models.IntegerField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("audit_scope", models.TextField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "audit_auditor_list",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditAuditorList22092022",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("department", models.IntegerField()),
                ("loc", models.CharField(blank=True, max_length=50, null=True)),
                ("audit_emp_sts", models.IntegerField()),
                ("auditor_qua_date", models.DateField()),
                ("auditor_disqua_date", models.DateField()),
                ("crnt_sts", models.IntegerField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("audit_scope", models.TextField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "audit_auditor_list_22-09-2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditBmpsMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250)),
                ("short_name", models.CharField(max_length=25)),
                ("loc", models.CharField(max_length=20)),
                ("rev_no", models.IntegerField()),
                ("type", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "audit_bmps_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditBmpsMaster22092022",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=250)),
                ("short_name", models.CharField(max_length=25)),
                ("loc", models.CharField(max_length=20)),
                ("rev_no", models.IntegerField()),
                ("type", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "audit_bmps_master_22-09-2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditDeligateAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("nc_no", models.IntegerField()),
                ("category", models.IntegerField()),
                ("audit_id", models.CharField(blank=True, max_length=50, null=True)),
                ("pro_date_comp", models.DateField()),
                (
                    "root_cause",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "corr_detail",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "pro_corr_act",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "detl_corr_act",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("act_com_date", models.DateField()),
                (
                    "veri_corr_act",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "veri_siml_act",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "eff_ver_audit",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "ofi_action",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("attachment", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "ofi_attachment",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("submit_val", models.CharField(blank=True, max_length=250, null=True)),
                ("auditee_acc", models.IntegerField()),
                ("nc_not_reason", models.TextField(blank=True, null=True)),
                ("cancel_by", models.IntegerField()),
                ("cancel_time", models.DateTimeField()),
                ("doc_id", models.CharField(blank=True, max_length=100, null=True)),
                ("delete1", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "audit_deligate_action",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditDeligateAction22092022",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("nc_no", models.IntegerField()),
                ("category", models.IntegerField()),
                ("audit_id", models.CharField(blank=True, max_length=50, null=True)),
                ("pro_date_comp", models.DateField()),
                (
                    "root_cause",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "corr_detail",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "pro_corr_act",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "detl_corr_act",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("act_com_date", models.DateField()),
                (
                    "veri_corr_act",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "veri_siml_act",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "eff_ver_audit",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "ofi_action",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("attachment", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "ofi_attachment",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("submit_val", models.CharField(blank=True, max_length=250, null=True)),
                ("auditee_acc", models.IntegerField()),
                ("nc_not_reason", models.TextField(blank=True, null=True)),
                ("cancel_by", models.IntegerField()),
                ("cancel_time", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "audit_deligate_action_22-09-2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditFeedback",
            fields=[
                ("fb_id", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.CharField(blank=True, max_length=11, null=True)),
                (
                    "audit_masterid",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                ("rating", models.CharField(blank=True, max_length=100, null=True)),
                ("auditor_empcode", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "audit_feedback",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditPlan",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("audit_id", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "audit_loccode",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                ("audit_dept", models.IntegerField()),
                ("auditor_empcode", models.IntegerField()),
                ("bmps_id", models.CharField(blank=True, max_length=100, null=True)),
                ("plan_date", models.DateField()),
                ("plan_ftime_hh", models.CharField(max_length=25)),
                ("plan_ftime_mm", models.CharField(max_length=25)),
                ("plan_totime_hh", models.CharField(max_length=25)),
                ("plan_totime_mm", models.CharField(max_length=25)),
                ("plan_to_date", models.DateField()),
                ("audit_type_id", models.IntegerField()),
                ("type_seq_no", models.IntegerField()),
                ("approve_type", models.IntegerField()),
                ("approval_sts", models.IntegerField()),
                ("approved_by", models.IntegerField()),
                ("approved_date", models.DateField()),
                ("release_sts", models.IntegerField()),
                ("auditee_by", models.IntegerField()),
                ("auditee_sts", models.IntegerField(blank=True, null=True)),
                ("auditee_approved_date", models.DateField()),
                ("deligate", models.IntegerField()),
                ("audit_act_date", models.DateField()),
                (
                    "audit_act_time",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                ("ncs", models.IntegerField()),
                ("audit_sts", models.IntegerField()),
                ("secondary", models.IntegerField()),
                ("remarks", models.CharField(blank=True, max_length=2000, null=True)),
                ("fncs", models.IntegerField()),
                ("audit_obs", models.TextField(blank=True, null=True)),
                ("multi_slno", models.IntegerField()),
                ("first_mail_count", models.IntegerField()),
                ("release_to", models.CharField(blank=True, max_length=10, null=True)),
                ("cross_dept", models.IntegerField()),
                ("cmm_mail", models.CharField(blank=True, max_length=500, null=True)),
                ("fileddate", models.DateField()),
                ("dept_hod_code", models.IntegerField()),
                ("active_ids", models.IntegerField()),
                ("final_submit", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.CharField(max_length=7)),
                ("deleted_timestamp", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "audit_plan",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditPlan22092022",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("audit_id", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "audit_loccode",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                ("audit_dept", models.IntegerField()),
                ("auditor_empcode", models.IntegerField()),
                ("bmps_id", models.CharField(blank=True, max_length=100, null=True)),
                ("plan_date", models.DateField()),
                ("plan_ftime_hh", models.CharField(max_length=25)),
                ("plan_ftime_mm", models.CharField(max_length=25)),
                ("plan_totime_hh", models.CharField(max_length=25)),
                ("plan_totime_mm", models.CharField(max_length=25)),
                ("plan_to_date", models.DateField()),
                ("audit_type_id", models.IntegerField()),
                ("type_seq_no", models.IntegerField()),
                ("approve_type", models.IntegerField()),
                ("approval_sts", models.IntegerField()),
                ("approved_by", models.IntegerField()),
                ("approved_date", models.DateField()),
                ("release_sts", models.IntegerField()),
                ("auditee_by", models.IntegerField()),
                ("auditee_sts", models.IntegerField(blank=True, null=True)),
                ("auditee_approved_date", models.DateField()),
                ("deligate", models.IntegerField()),
                ("audit_act_date", models.DateField()),
                (
                    "audit_act_time",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                ("ncs", models.IntegerField()),
                ("audit_sts", models.IntegerField()),
                ("secondary", models.IntegerField()),
                ("remarks", models.CharField(blank=True, max_length=2000, null=True)),
                ("fncs", models.IntegerField()),
                ("audit_obs", models.TextField(blank=True, null=True)),
                ("multi_slno", models.IntegerField()),
                ("first_mail_count", models.IntegerField()),
                ("release_to", models.CharField(blank=True, max_length=10, null=True)),
                ("cross_dept", models.IntegerField()),
                ("cmm_mail", models.CharField(blank=True, max_length=500, null=True)),
                ("fileddate", models.DateField()),
                ("dept_hod_code", models.IntegerField()),
                ("active_ids", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.CharField(max_length=7)),
                ("deleted_timestamp", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
                ("final_submit", models.IntegerField()),
            ],
            options={
                "db_table": "audit_plan_22-09-2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditRatingmaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("desc", models.CharField(blank=True, max_length=100, null=True)),
                ("input_type", models.CharField(blank=True, max_length=20, null=True)),
                ("rat_id", models.CharField(blank=True, max_length=20, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "audit_ratingmaster",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditTypeMaster",
            fields=[
                ("type_id", models.AutoField(primary_key=True, serialize=False)),
                ("type_name", models.CharField(max_length=250)),
                ("short_name", models.CharField(max_length=250)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "audit_type_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuditTypeMaster22092022",
            fields=[
                ("type_id", models.AutoField(primary_key=True, serialize=False)),
                ("type_name", models.CharField(max_length=250)),
                ("short_name", models.CharField(max_length=250)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "audit_type_master_22-09-2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150, unique=True)),
            ],
            options={
                "db_table": "auth_group",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthGroupPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_group_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthPermission",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("codename", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "auth_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("is_superuser", models.IntegerField()),
                ("username", models.CharField(max_length=150, unique=True)),
                ("first_name", models.CharField(max_length=150)),
                ("last_name", models.CharField(max_length=150)),
                ("email", models.CharField(max_length=254)),
                ("is_staff", models.IntegerField()),
                ("is_active", models.IntegerField()),
                ("date_joined", models.DateTimeField()),
            ],
            options={
                "db_table": "auth_user",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserGroups",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_groups",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AuthUserUserPermissions",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "auth_user_user_permissions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="AutoLogout",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("time", models.IntegerField()),
                ("msg", models.CharField(max_length=10)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.IntegerField()),
            ],
            options={
                "db_table": "auto_logout",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BankMaster",
            fields=[
                ("bank_slno", models.AutoField(primary_key=True, serialize=False)),
                (
                    "companycode",
                    models.IntegerField(blank=True, db_column="Companycode", null=True),
                ),
                (
                    "bank_key",
                    models.CharField(
                        blank=True, db_column="Bank_Key", max_length=5, null=True
                    ),
                ),
                (
                    "acc_no",
                    models.CharField(
                        blank=True, db_column="Acc_no", max_length=15, null=True
                    ),
                ),
                ("acc_name", models.CharField(blank=True, max_length=23, null=True)),
                ("bank_limit", models.BigIntegerField(blank=True, null=True)),
                ("cc_limit", models.IntegerField(blank=True, null=True)),
                ("lc_limit", models.IntegerField(blank=True, null=True)),
                ("street", models.CharField(blank=True, max_length=29, null=True)),
                ("city", models.CharField(blank=True, max_length=16, null=True)),
                (
                    "branch_name",
                    models.CharField(
                        blank=True, db_column="Branch_name", max_length=30, null=True
                    ),
                ),
                ("ifsc_code", models.CharField(blank=True, max_length=10, null=True)),
                ("from_date", models.CharField(blank=True, max_length=10, null=True)),
                ("to_date", models.CharField(blank=True, max_length=10, null=True)),
                ("tax_no", models.CharField(blank=True, max_length=15, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "bank_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BankMasterOld",
            fields=[
                ("bank_slno", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.IntegerField(db_column="Company code")),
                ("bank_key", models.CharField(db_column="Bank Key", max_length=5)),
                (
                    "acc_no",
                    models.CharField(
                        blank=True, db_column="Acc_no", max_length=18, null=True
                    ),
                ),
                ("acc_name", models.CharField(blank=True, max_length=50, null=True)),
                ("bank_limit", models.IntegerField()),
                ("cc_limit", models.CharField(max_length=16)),
                ("lc_limit", models.CharField(max_length=16)),
                ("street", models.CharField(blank=True, max_length=100, null=True)),
                ("city", models.CharField(max_length=25)),
                (
                    "branch_name",
                    models.CharField(
                        blank=True, db_column="Branch_name", max_length=18, null=True
                    ),
                ),
                ("ifsc_code", models.IntegerField()),
                ("from_date", models.DateField()),
                ("to_date", models.DateField()),
                ("tax_no", models.CharField(blank=True, max_length=16, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "bank_master_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Barcode",
            fields=[
                ("barcode_name", models.CharField(max_length=50)),
                ("ip", models.CharField(max_length=20)),
                ("sys_name", models.CharField(max_length=50)),
                ("matnr", models.CharField(max_length=11)),
                ("batch", models.CharField(max_length=11)),
                ("start", models.IntegerField()),
                ("end", models.IntegerField()),
                ("matnr_status", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("refresh", models.IntegerField()),
                ("refresh_by", models.IntegerField()),
                ("refresh_reason", models.CharField(max_length=300)),
                ("refresh_timestamp", models.CharField(max_length=20)),
                ("pcb_slno", models.IntegerField()),
                ("order_no", models.IntegerField()),
            ],
            options={
                "db_table": "barcode",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BarcodeBayMaster",
            fields=[
                ("bay_no", models.AutoField(primary_key=True, serialize=False)),
                ("bay_name", models.CharField(max_length=50)),
                ("bay_resp_code", models.IntegerField()),
                ("ip", models.CharField(max_length=25)),
                ("sys_name", models.CharField(max_length=25)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "barcode_bay_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BarcodeDeptMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deptcode", models.IntegerField()),
                ("deptname", models.CharField(max_length=25)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("loc", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "barcode_dept_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BarcodeSlno",
            fields=[
                ("seq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("barcode_name", models.CharField(max_length=50)),
                ("ip", models.CharField(max_length=50)),
                ("sys_name", models.CharField(max_length=50)),
                ("slno", models.CharField(max_length=10)),
                ("status", models.IntegerField()),
                ("status_update_timestamp", models.CharField(max_length=20)),
                ("createdby", models.IntegerField()),
                ("refresh", models.IntegerField()),
                ("refresh_by", models.IntegerField()),
                ("refresh_reason", models.CharField(max_length=300)),
                ("refresh_timestamp", models.CharField(max_length=20)),
                ("order_no", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "barcode_slno",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BgFdMain",
            fields=[
                ("fd_slno", models.AutoField(primary_key=True, serialize=False)),
                ("fd_no", models.CharField(max_length=20)),
                ("bank_slno", models.IntegerField()),
                (
                    "bank_key",
                    models.CharField(
                        blank=True, db_column="Bank_Key", max_length=10, null=True
                    ),
                ),
                ("amount", models.BigIntegerField()),
                ("roi", models.FloatField()),
                ("fd_open_date", models.DateField()),
                ("maturity_date", models.DateField()),
                ("status", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "bg_fd_main",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BgFdSub",
            fields=[
                ("fd_bg_slno", models.AutoField(primary_key=True, serialize=False)),
                ("fd_slno", models.IntegerField()),
                ("bg_no", models.CharField(blank=True, max_length=100, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "bg_fd_sub",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BgIomApproval",
            fields=[
                ("app_id", models.AutoField(primary_key=True, serialize=False)),
                ("iom_no", models.IntegerField()),
                ("empcode", models.CharField(max_length=6)),
                ("status", models.IntegerField()),
                ("comments", models.CharField(blank=True, max_length=250, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "bg_iom_approval",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BgIomAttachments",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("iom_no", models.IntegerField()),
                ("type", models.IntegerField()),
                ("attach_name", models.TextField(blank=True, null=True)),
                ("empcode", models.CharField(blank=True, max_length=8, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "bg_iom_attachments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BgIomEntry",
            fields=[
                ("empcode", models.CharField(blank=True, max_length=7, null=True)),
                ("iom_no", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.IntegerField()),
                ("iom_type", models.IntegerField()),
                ("bg_type", models.IntegerField()),
                (
                    "railways",
                    models.TextField(blank=True, db_column="Railways", null=True),
                ),
                (
                    "contract_through",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                (
                    "contract_no",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("contract_date", models.DateField()),
                ("contract_todate", models.DateField()),
                ("contract_value", models.BigIntegerField()),
                ("customer_id", models.IntegerField()),
                ("contract_desc", models.TextField(blank=True, null=True)),
                ("bg_favour", models.TextField(blank=True, null=True)),
                ("address", models.CharField(blank=True, max_length=250, null=True)),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("pincode", models.IntegerField()),
                ("bgno", models.CharField(blank=True, max_length=18, null=True)),
                ("bgdate", models.DateField()),
                ("ext_bg_no", models.CharField(blank=True, max_length=18, null=True)),
                ("bg_benficiary", models.TextField(blank=True, null=True)),
                ("bg_amt", models.BigIntegerField()),
                ("bg_vailddate", models.DateField()),
                ("bg_exirydate", models.DateField(db_column="Bg_exirydate")),
                ("bg_closedate", models.DateField()),
                ("amc_extend_upto", models.IntegerField()),
                ("amc_extend_value", models.IntegerField()),
                ("completed_value", models.IntegerField()),
                ("bank_slno", models.IntegerField()),
                (
                    "bank_key",
                    models.CharField(
                        blank=True, db_column="Bank_Key", max_length=6, null=True
                    ),
                ),
                ("extn_reason", models.TextField(blank=True, null=True)),
                ("status", models.IntegerField()),
                ("bg_active", models.IntegerField()),
                ("stamp", models.TextField(blank=True, null=True)),
                ("hod_code", models.CharField(blank=True, max_length=6, null=True)),
                ("hod_sts", models.IntegerField()),
                ("hod_app_time", models.DateTimeField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "bg_iom_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BgIomHistory",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("iom_no", models.IntegerField()),
                ("status", models.IntegerField()),
                ("comments", models.TextField(blank=True, null=True)),
                ("empcode", models.CharField(blank=True, max_length=7, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "bg_iom_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BgIomStatusMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.IntegerField()),
                ("sts_des", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "bg_iom_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BgIomType",
            fields=[
                ("iom_no", models.AutoField(primary_key=True, serialize=False)),
                ("iom_name", models.CharField(blank=True, max_length=30, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "bg_iom_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BgMain",
            fields=[
                ("bg_slno", models.AutoField(primary_key=True, serialize=False)),
                ("iom_no", models.IntegerField()),
                ("company_code", models.IntegerField()),
                ("empcode", models.CharField(blank=True, max_length=7, null=True)),
                ("bg_type", models.IntegerField()),
                ("iom_type", models.IntegerField()),
                (
                    "contract_no",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("contract_date", models.DateField()),
                ("contract_todate", models.DateField()),
                ("contract_value", models.BigIntegerField()),
                ("customer_id", models.IntegerField()),
                ("contract_desc", models.TextField(blank=True, null=True)),
                ("address", models.CharField(blank=True, max_length=250, null=True)),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("pincode", models.IntegerField()),
                ("bg_favour", models.TextField(blank=True, null=True)),
                ("bgno", models.CharField(blank=True, max_length=18, null=True)),
                ("bgdate", models.DateField()),
                ("ext_bg_no", models.CharField(blank=True, max_length=18, null=True)),
                ("bg_benficiary", models.TextField(blank=True, null=True)),
                ("bg_amt", models.BigIntegerField()),
                ("bg_vailddate", models.DateField()),
                ("bg_amt_old", models.BigIntegerField()),
                ("bg_vailddate_old", models.DateField()),
                ("status", models.IntegerField()),
                ("bank_slno", models.IntegerField()),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "bg_main",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BgType",
            fields=[
                ("type_slno", models.AutoField(primary_key=True, serialize=False)),
                ("type_name", models.CharField(blank=True, max_length=100, null=True)),
                ("type_extn", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "bg_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Bookreimburse",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("category", models.IntegerField()),
                ("totalamount", models.IntegerField()),
                ("requestdate", models.DateField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "bookreimburse",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Bookreimbursesubdata",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("ref_no", models.IntegerField()),
                ("bill_no", models.IntegerField()),
                ("bill_date", models.DateField()),
                ("bill_amount", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "bookreimbursesubdata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BusDetails",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("vec_type", models.CharField(max_length=10)),
                ("vanname", models.CharField(max_length=200)),
                ("endtime", models.CharField(max_length=6)),
                ("extn", models.IntegerField(blank=True, null=True)),
                ("loccode", models.CharField(max_length=20)),
                ("source", models.CharField(max_length=200)),
                ("destination", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "bus_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BusMembers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("empname", models.CharField(max_length=100)),
                ("route", models.CharField(max_length=50)),
                ("mobile", models.CharField(max_length=50)),
                ("group", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "bus_members",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="BusRoutes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("place", models.CharField(max_length=200)),
                ("timings", models.CharField(max_length=6)),
                ("delete", models.IntegerField()),
            ],
            options={
                "db_table": "bus_routes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Cal5",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cal_for", models.CharField(max_length=20)),
                ("order_no", models.CharField(max_length=20)),
                ("mat_code", models.CharField(max_length=20)),
                ("sl_no", models.CharField(max_length=20)),
                ("unit_sl", models.CharField(max_length=10)),
                ("mvstb", models.CharField(max_length=10)),
                ("mip_voltage", models.CharField(max_length=10)),
                ("cal_op_curr", models.CharField(max_length=10)),
                ("mop_current", models.CharField(max_length=10)),
                ("error", models.CharField(max_length=10)),
                ("ins_id", models.CharField(max_length=100)),
                ("results", models.CharField(max_length=10)),
                ("createdby", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("no", models.IntegerField()),
                ("enter_date", models.DateField()),
            ],
            options={
                "db_table": "cal_5",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Cal6",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cal_for", models.CharField(max_length=20)),
                ("order_no", models.CharField(max_length=20)),
                ("mat_code", models.CharField(max_length=20)),
                ("sl_no", models.IntegerField()),
                ("unit_sl", models.CharField(max_length=10)),
                ("mvstb", models.CharField(max_length=10)),
                ("mip_voltage", models.CharField(max_length=10)),
                ("cal_op_curr", models.CharField(max_length=10)),
                ("mop_current", models.CharField(max_length=10)),
                ("cop_current", models.CharField(max_length=20)),
                ("error", models.CharField(max_length=10)),
                ("ins_id", models.CharField(max_length=100)),
                ("results", models.CharField(max_length=10)),
                ("createdby", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("no", models.IntegerField()),
                ("enter_date", models.DateField()),
            ],
            options={
                "db_table": "cal_6",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalerderMstr",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("week", models.CharField(max_length=20)),
                ("rmrks", models.CharField(max_length=50)),
                ("type", models.CharField(max_length=15)),
            ],
            options={
                "db_table": "calerder_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibAttachements",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rqst_no", models.IntegerField()),
                ("name", models.CharField(max_length=50)),
                ("type", models.CharField(max_length=40)),
                ("size", models.CharField(max_length=20)),
                ("data", models.TextField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "calib_attachements",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("response", models.IntegerField()),
            ],
            options={
                "db_table": "calib_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibDetails",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("medha_slno", models.CharField(blank=True, max_length=50, null=True)),
                ("inst_type", models.IntegerField()),
                ("make", models.CharField(blank=True, max_length=20, null=True)),
                ("model", models.CharField(blank=True, max_length=20, null=True)),
                ("rec_date", models.DateField()),
                ("cal_type", models.CharField(blank=True, max_length=20, null=True)),
                ("desc", models.TextField()),
                ("asset_no", models.CharField(blank=True, max_length=20, null=True)),
                ("manuf_slno", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "specifications",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("po", models.CharField(blank=True, max_length=100, null=True)),
                ("warranty", models.CharField(blank=True, max_length=11, null=True)),
                ("adj_pro", models.CharField(blank=True, max_length=20, null=True)),
                ("certifi", models.CharField(blank=True, max_length=20, null=True)),
                ("user_manul", models.CharField(blank=True, max_length=20, null=True)),
                ("ser_manul", models.CharField(blank=True, max_length=20, null=True)),
                ("accessor", models.CharField(blank=True, max_length=20, null=True)),
                ("gauge_type", models.IntegerField()),
                ("period", models.IntegerField()),
                ("response", models.IntegerField()),
                ("cal_date", models.DateField()),
                ("phy_ava", models.CharField(blank=True, max_length=20, null=True)),
                ("calib_date", models.DateField()),
                ("cal_pr_no", models.CharField(blank=True, max_length=30, null=True)),
                ("cal_pr_no_rev", models.IntegerField()),
                ("sfno", models.CharField(blank=True, max_length=15, null=True)),
                ("sfno_rev", models.IntegerField()),
                ("created_by", models.CharField(max_length=6)),
                ("ntry_date", models.DateField()),
                ("cal_due_date", models.DateField()),
                ("shuffle_not", models.IntegerField()),
                ("response_date", models.DateField()),
                ("usr_reason", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "calib_reason",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("address", models.CharField(blank=True, max_length=20, null=True)),
                ("timestamp", models.DateTimeField()),
                ("received", models.IntegerField()),
                ("scrap_comm", models.CharField(blank=True, max_length=200, null=True)),
                ("delete1", models.IntegerField()),
                ("company", models.IntegerField()),
                (
                    "calib_attachment",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
                ("maindate", models.DateField()),
                ("assign_to", models.CharField(blank=True, max_length=6, null=True)),
                ("stand_time", models.IntegerField()),
                ("comments", models.TextField(blank=True, null=True)),
                (
                    "calib_attachment_pre",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("external_status", models.IntegerField()),
                ("ext2int_data_transfer", models.IntegerField()),
                ("grno", models.CharField(blank=True, max_length=30, null=True)),
                ("grn_date", models.CharField(blank=True, max_length=15, null=True)),
                ("supplier", models.CharField(blank=True, max_length=40, null=True)),
                ("range", models.CharField(blank=True, max_length=70, null=True)),
                ("resolution", models.CharField(blank=True, max_length=50, null=True)),
                ("accuracy", models.CharField(blank=True, max_length=10, null=True)),
                ("attachments", models.CharField(blank=True, max_length=30, null=True)),
                ("crimptool", models.CharField(blank=True, max_length=500, null=True)),
                ("cost", models.IntegerField(blank=True, null=True)),
                ("loc", models.CharField(blank=True, max_length=5, null=True)),
                ("yell_txt_sts", models.IntegerField()),
                ("standard", models.IntegerField()),
            ],
            options={
                "db_table": "calib_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibDetailsExt",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("medha_slno", models.CharField(max_length=30)),
                ("make", models.CharField(max_length=10)),
                ("model", models.CharField(max_length=11)),
                ("desc", models.TextField()),
                ("cal_type", models.CharField(max_length=20)),
                ("specifications", models.CharField(max_length=100)),
                ("response", models.IntegerField()),
                ("cal_date", models.DateField()),
                ("phy_ava", models.CharField(max_length=20)),
                ("cal_due_date", models.DateField()),
                ("external_status", models.IntegerField()),
                ("external_user", models.CharField(max_length=7)),
                ("ext2int_data_transfer", models.IntegerField()),
                ("dailymailstatus", models.IntegerField()),
                ("childref", models.IntegerField()),
                ("external_comment", models.TextField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "calib_details_ext",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibDetailsHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("cal_date", models.DateField()),
                ("cal_due_date_old", models.DateField()),
                ("cal_due_date_new", models.DateField()),
                ("cer_no", models.CharField(blank=True, max_length=100, null=True)),
                ("sts", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "calib_reason",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("ntry_by", models.CharField(blank=True, max_length=6, null=True)),
                ("yell_txt", models.CharField(blank=True, max_length=200, null=True)),
                ("calibby", models.CharField(blank=True, max_length=50, null=True)),
                ("impact_sts", models.IntegerField()),
                ("impact_assoc", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("sf_308_sts", models.IntegerField()),
            ],
            options={
                "db_table": "calib_details_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibDetailsOld",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("medha_slno", models.CharField(blank=True, max_length=50, null=True)),
                ("inst_type", models.IntegerField()),
                ("make", models.CharField(blank=True, max_length=10, null=True)),
                ("model", models.CharField(blank=True, max_length=11, null=True)),
                ("rec_date", models.DateField()),
                ("cal_type", models.CharField(blank=True, max_length=20, null=True)),
                ("desc", models.TextField()),
                ("asset_no", models.CharField(blank=True, max_length=20, null=True)),
                ("manuf_slno", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "specifications",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("po", models.CharField(blank=True, max_length=100, null=True)),
                ("warranty", models.CharField(blank=True, max_length=11, null=True)),
                ("adj_pro", models.CharField(blank=True, max_length=20, null=True)),
                ("certifi", models.CharField(blank=True, max_length=20, null=True)),
                ("user_manul", models.CharField(blank=True, max_length=20, null=True)),
                ("ser_manul", models.CharField(blank=True, max_length=20, null=True)),
                ("accessor", models.CharField(blank=True, max_length=20, null=True)),
                ("gauge_type", models.IntegerField()),
                ("period", models.IntegerField()),
                ("response", models.IntegerField()),
                ("cal_date", models.DateField()),
                ("phy_ava", models.CharField(blank=True, max_length=20, null=True)),
                ("calib_date", models.DateField()),
                ("cal_pr_no", models.CharField(blank=True, max_length=30, null=True)),
                ("cal_pr_no_rev", models.IntegerField()),
                ("sfno", models.CharField(blank=True, max_length=12, null=True)),
                ("sfno_rev", models.IntegerField()),
                ("created_by", models.CharField(max_length=6)),
                ("ntry_date", models.DateField()),
                ("cal_due_date", models.DateField()),
                ("shuffle_not", models.IntegerField()),
                ("response_date", models.DateField()),
                ("usr_reason", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "calib_reason",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("address", models.CharField(blank=True, max_length=20, null=True)),
                ("timestamp", models.DateTimeField()),
                ("received", models.IntegerField()),
                ("scrap_comm", models.CharField(blank=True, max_length=200, null=True)),
                ("delete1", models.IntegerField()),
                ("company", models.IntegerField()),
                (
                    "calib_attachment",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
                ("maindate", models.DateField()),
                ("assign_to", models.CharField(blank=True, max_length=6, null=True)),
                ("stand_time", models.IntegerField()),
                (
                    "calib_attachment_pre",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("external_status", models.IntegerField()),
                ("ext2int_data_transfer", models.IntegerField()),
                ("grno", models.CharField(blank=True, max_length=30, null=True)),
                ("grn_date", models.CharField(blank=True, max_length=15, null=True)),
                ("supplier", models.CharField(blank=True, max_length=40, null=True)),
                ("range", models.CharField(blank=True, max_length=15, null=True)),
                ("resolution", models.CharField(blank=True, max_length=20, null=True)),
                ("accuracy", models.CharField(blank=True, max_length=10, null=True)),
                ("attachments", models.CharField(blank=True, max_length=30, null=True)),
                ("crimptool", models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                "db_table": "calib_details_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibGaugeMaster",
            fields=[
                ("gua_id", models.AutoField(primary_key=True, serialize=False)),
                ("guage", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "calib_gauge_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibGuageDetails",
            fields=[
                ("guid", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("guage_type", models.CharField(blank=True, max_length=30, null=True)),
                ("guage_desc", models.CharField(blank=True, max_length=17, null=True)),
                ("createdby", models.CharField(blank=True, max_length=6, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "calib_guage_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibImpact",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("impact_stage", models.IntegerField()),
                ("impa_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("action", models.CharField(blank=True, max_length=50, null=True)),
                ("correct", models.CharField(blank=True, max_length=50, null=True)),
                ("respon", models.IntegerField()),
                ("target_date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("hod", models.IntegerField()),
                ("hod_sts", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "calib_impact",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibInstrMstr",
            fields=[
                ("ins_id", models.AutoField(primary_key=True, serialize=False)),
                ("instrument", models.CharField(max_length=100)),
                ("company", models.IntegerField()),
                ("loc", models.CharField(blank=True, max_length=5, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "calib_instr_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibMailRespMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("dept", models.CharField(max_length=20)),
                ("empcode", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "calib_mail_resp_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibMedhaslnoMaster",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("medha_slno", models.CharField(max_length=50)),
                ("desc", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "calib_medhaslno_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibPhyMaster",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("phy_ava", models.CharField(max_length=30)),
                ("show", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "calib_phy_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibPspmEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pspmno", models.CharField(blank=True, max_length=50, null=True)),
                ("manufacture", models.CharField(blank=True, max_length=50, null=True)),
                ("rangeval", models.IntegerField(blank=True, null=True)),
                ("make", models.IntegerField(blank=True, null=True)),
                ("model", models.CharField(blank=True, max_length=50, null=True)),
                ("response", models.IntegerField(blank=True, null=True)),
                ("userloc", models.CharField(blank=True, max_length=50, null=True)),
                ("verified_date", models.DateField()),
                ("nxt_review_date", models.DateField()),
                ("observations", models.TextField(blank=True, null=True)),
                ("comments", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "calib_pspm_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibPspmHistory",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("response", models.IntegerField(blank=True, null=True)),
                ("userloc", models.CharField(blank=True, max_length=50, null=True)),
                ("verified_date", models.DateField()),
                ("nxt_review_date", models.DateField()),
                ("observations", models.TextField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "calib_pspm_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibPspmMakesMstr",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("make", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "calib_pspm_makes_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibPspmRangesMstr",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rangeval", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "calib_pspm_ranges_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibReasonForReturn",
            fields=[
                ("rqst_no", models.IntegerField()),
                (
                    "desc_of_problem",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("slno", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "calib_reason_for_return",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibRepairHis",
            fields=[
                ("his_id", models.AutoField(primary_key=True, serialize=False)),
                ("rep_id", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("his_comm", models.CharField(blank=True, max_length=500, null=True)),
                ("status", models.IntegerField()),
                ("cate_r_s", models.CharField(max_length=6)),
                ("app_hod", models.IntegerField()),
                ("his_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("scrap_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("scrap_date", models.DateField()),
                ("scrap_by", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "calib_repair_his",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibRepairNtry",
            fields=[
                ("rep_id", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("rep_rsn", models.CharField(blank=True, max_length=500, null=True)),
                ("make", models.CharField(blank=True, max_length=50, null=True)),
                ("model", models.CharField(blank=True, max_length=50, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                ("rep_type", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("ntry_by", models.IntegerField()),
                ("rmks", models.CharField(blank=True, max_length=300, null=True)),
                ("repair_cost", models.IntegerField()),
                ("repair_time", models.IntegerField()),
                ("status", models.IntegerField()),
                ("repair_by", models.IntegerField()),
                ("repair_date", models.DateField()),
                ("int_ext", models.CharField(blank=True, max_length=10, null=True)),
                ("cmpl_days", models.IntegerField()),
                ("caldeptacc", models.CharField(blank=True, max_length=30, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "calib_repair_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibRepairNtry31102022",
            fields=[
                ("rep_id", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("rep_rsn", models.CharField(blank=True, max_length=500, null=True)),
                ("make", models.CharField(blank=True, max_length=10, null=True)),
                ("model", models.CharField(blank=True, max_length=11, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                ("rep_type", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("ntry_by", models.IntegerField()),
                ("rmks", models.CharField(blank=True, max_length=300, null=True)),
                ("repair_cost", models.IntegerField()),
                ("repair_time", models.IntegerField()),
                ("status", models.IntegerField()),
                ("repair_by", models.IntegerField()),
                ("repair_date", models.DateField()),
                ("int_ext", models.CharField(blank=True, max_length=10, null=True)),
                ("cmpl_days", models.IntegerField()),
                (
                    "caldept_acceptance",
                    models.CharField(db_column="Caldept_Acceptance", max_length=50),
                ),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "calib_repair_ntry_31_10_2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CalibUsrNtry",
            fields=[
                ("rqst_no", models.AutoField(primary_key=True, serialize=False)),
                ("rqstd", models.IntegerField()),
                ("rqstd_date", models.DateField()),
                ("dept", models.IntegerField()),
                ("uniq_slno_medha", models.IntegerField()),
                ("any_accessories", models.CharField(max_length=1000)),
                ("rqst_type", models.CharField(max_length=1)),
                ("rqst_no_old", models.IntegerField()),
                ("hod_sts", models.IntegerField()),
                ("is_inst", models.CharField(max_length=1)),
                ("hod_date", models.DateField()),
                ("hod", models.IntegerField()),
                ("hod_rej_rsn", models.CharField(max_length=500)),
                ("service_charges", models.FloatField()),
                ("parts_cost", models.FloatField()),
                ("calib_cost", models.FloatField()),
                ("remarks_by_calib", models.CharField(max_length=500)),
                ("pay_rs", models.FloatField()),
                ("pay_emp", models.IntegerField()),
                ("calib_ntryby", models.IntegerField()),
                ("calib_ntrydate", models.DateField()),
                ("paid_sts", models.CharField(max_length=10)),
                ("paid_by", models.IntegerField()),
                ("paid_date", models.DateField()),
                ("inst_sts", models.CharField(max_length=10)),
                ("inst_hndover", models.IntegerField()),
                ("inst_hndover_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("attachment_name", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField()),
                ("comments", models.CharField(max_length=100)),
                ("cal_type", models.IntegerField()),
                ("cal_extranal", models.IntegerField()),
                ("gl_tl", models.CharField(max_length=6)),
            ],
            options={
                "db_table": "calib_usr_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CanteenMembers",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empname", models.CharField(max_length=60)),
                ("desg", models.CharField(max_length=60)),
                ("dept", models.CharField(max_length=50)),
                ("add", models.CharField(max_length=20)),
                ("loc", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("empcode", models.IntegerField()),
            ],
            options={
                "db_table": "canteen_members",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CardLevelEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "from_field",
                    models.CharField(
                        blank=True, db_column="from", max_length=10, null=True
                    ),
                ),
                ("to", models.CharField(blank=True, max_length=11, null=True)),
                ("reference", models.CharField(blank=True, max_length=11, null=True)),
                (
                    "product_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("subproject", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("shorttext", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "ecrdata",
                    models.CharField(
                        blank=True, db_column="ecrData", max_length=50, null=True
                    ),
                ),
                (
                    "refsubcategory",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "modificationdetails",
                    models.TextField(
                        blank=True, db_column="modificationDetails", null=True
                    ),
                ),
                (
                    "stickerdetails",
                    models.TextField(blank=True, db_column="stickerDetails", null=True),
                ),
                ("details", models.TextField(blank=True, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("date", models.DateField()),
                ("scope", models.CharField(blank=True, max_length=50, null=True)),
                ("software", models.CharField(max_length=100)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("mailids", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "resonmodification",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "campatability",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "mutipleproducts",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("unitlevel", models.CharField(blank=True, max_length=150, null=True)),
                ("attachment", models.CharField(blank=True, max_length=150, null=True)),
                ("revno", models.CharField(blank=True, max_length=11, null=True)),
                ("moved_internet", models.IntegerField()),
            ],
            options={
                "db_table": "card_level_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CatMaster",
            fields=[
                ("cat_code", models.AutoField(primary_key=True, serialize=False)),
                ("cat_desc", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "cat_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CcatMaster",
            fields=[
                ("ccat_no", models.AutoField(primary_key=True, serialize=False)),
                ("ccat_name", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "ccat_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CertCategoryMaster",
            fields=[
                ("cat_id", models.AutoField(primary_key=True, serialize=False)),
                ("cat_name", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "cert_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ChatMsgData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sender", models.IntegerField()),
                ("receiver", models.CharField(max_length=11)),
                ("msg", models.TextField()),
                ("date", models.DateField()),
                ("sender_ip", models.CharField(max_length=15)),
                ("reciever_ip", models.CharField(max_length=15)),
                ("time", models.TimeField()),
                ("type", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "chat_msg_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ChatUserLogin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                ("cookie_id", models.CharField(max_length=50)),
                ("ip", models.CharField(max_length=15)),
                ("server_name", models.CharField(max_length=30)),
                ("status", models.IntegerField()),
                ("login_time", models.TimeField()),
                ("logout_time", models.TimeField()),
                ("xtra_field", models.IntegerField()),
            ],
            options={
                "db_table": "chat_user_login",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CipRegistration",
            fields=[
                ("regid", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("loc", models.CharField(max_length=10)),
                ("title", models.TextField(blank=True, null=True)),
                ("improvement", models.TextField(blank=True, null=True)),
                ("justification", models.TextField(blank=True, null=True)),
                ("regdate", models.DateTimeField()),
                ("startdate", models.DateField()),
                ("targetdate", models.DateField()),
                ("delete1", models.IntegerField()),
                (
                    "improvement_category",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("final_date", models.CharField(blank=True, max_length=20, null=True)),
                ("hodapproved", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("horizantal", models.CharField(max_length=1)),
                ("cip_ppt", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "cip_ppt_name",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("comment", models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                "db_table": "cip_registration",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CipTeamMom",
            fields=[
                ("cip_id", models.AutoField(primary_key=True, serialize=False)),
                ("regid", models.CharField(max_length=4)),
                ("cip_empcode", models.CharField(max_length=10)),
                ("cip_atta", models.CharField(max_length=100)),
                ("cip_type", models.CharField(max_length=4)),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "cip_team_mom",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CiSessions",
            fields=[
                (
                    "session_id",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("ip_address", models.CharField(max_length=45)),
                ("user_agent", models.CharField(max_length=120)),
                ("last_activity", models.PositiveIntegerField()),
                ("user_data", models.TextField()),
            ],
            options={
                "db_table": "ci_sessions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CncNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("machine_name", models.IntegerField()),
                ("pcb_name", models.CharField(max_length=500)),
                ("material_number", models.CharField(max_length=12)),
                ("project", models.CharField(max_length=50)),
                ("program_name", models.CharField(max_length=500)),
                ("revision_date", models.CharField(max_length=200)),
                ("created", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "cnc_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ColorCodesMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("color_name", models.CharField(max_length=20)),
                ("color_code", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "color_codes_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CommonExtnMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=50)),
                ("num", models.CharField(max_length=30)),
                ("loc", models.CharField(max_length=4)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "common_extn_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CompanycodeMaster",
            fields=[
                ("code", models.IntegerField(primary_key=True, serialize=False)),
                ("companyname", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "companycode_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CourierMaster",
            fields=[
                ("cid", models.AutoField(primary_key=True, serialize=False)),
                ("courier_name", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "courier_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CronjobAuth",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("cid", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "cronjob_auth",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CronjobMaster",
            fields=[
                ("cid", models.AutoField(primary_key=True, serialize=False)),
                (
                    "description",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("url", models.CharField(blank=True, max_length=200, null=True)),
                ("deptcode", models.CharField(blank=True, max_length=10, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "cronjob_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "cust_code",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("cust_name", models.CharField(max_length=35)),
                ("city", models.CharField(max_length=35)),
                ("createdby", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "customer",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerAttch",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("customer_id", models.IntegerField()),
                ("attachments", models.TextField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "customer_attch",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CustomerOrders",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("register_date", models.DateField()),
                (
                    "ship_to_party",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "material_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "shipping_center",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                ("serial_num", models.IntegerField()),
                ("inc_ncr", models.CharField(blank=True, max_length=35, null=True)),
                ("warranty", models.IntegerField()),
                ("inc_ncr_date", models.DateField()),
                ("quantity", models.IntegerField()),
                ("uom", models.CharField(blank=True, max_length=50, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("remarks", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "sale_order_num",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("sale_order_sts", models.CharField(max_length=1)),
                ("raised_by", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("dob_test", models.DateField()),
            ],
            options={
                "db_table": "customer_orders",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DeptForms",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("formname", models.CharField(max_length=50)),
                ("deptname", models.CharField(max_length=40)),
            ],
            options={
                "db_table": "dept_forms",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DeptHighpriorityMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dept_code", models.CharField(max_length=10)),
                ("quota_year", models.IntegerField()),
                ("final_quota", models.IntegerField()),
                ("dept_head_code", models.IntegerField()),
                ("created_date", models.DateField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "dept_highpriority_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DeptMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deptcode", models.IntegerField()),
                ("deptname", models.CharField(blank=True, max_length=50, null=True)),
                ("dept_mail", models.CharField(blank=True, max_length=100, null=True)),
                ("sap_dept_code", models.IntegerField(blank=True, null=True)),
                ("hod", models.IntegerField()),
                (
                    "dept_nickname",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("production_type", models.CharField(max_length=1)),
                ("loc", models.CharField(blank=True, max_length=4, null=True)),
                ("company_id", models.IntegerField()),
                (
                    "identification_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("createdby", models.CharField(blank=True, max_length=40, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("max_priority_tags", models.IntegerField()),
            ],
            options={
                "db_table": "dept_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DeptMaster27092022",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deptcode", models.IntegerField()),
                ("deptname", models.CharField(blank=True, max_length=50, null=True)),
                ("dept_mail", models.CharField(blank=True, max_length=100, null=True)),
                ("sap_dept_code", models.IntegerField(blank=True, null=True)),
                ("hod", models.IntegerField()),
                (
                    "dept_nickname",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("production_type", models.CharField(max_length=1)),
                ("loc", models.CharField(blank=True, max_length=4, null=True)),
                ("company_id", models.IntegerField()),
                (
                    "identification_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("createdby", models.CharField(blank=True, max_length=40, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("max_priority_tags", models.IntegerField()),
            ],
            options={
                "db_table": "dept_master_27_09_2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DeptMasterOld",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deptcode", models.IntegerField()),
                ("deptname", models.CharField(blank=True, max_length=50, null=True)),
                ("dept_mail", models.CharField(max_length=100)),
                ("sap_dept_code", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("dept_nickname", models.CharField(max_length=15)),
                ("production_type", models.CharField(max_length=1)),
                ("loc", models.CharField(max_length=4)),
                ("company_id", models.IntegerField()),
                ("identification_code", models.CharField(max_length=10)),
                ("createdby", models.CharField(blank=True, max_length=40, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("max_priority_tags", models.IntegerField()),
            ],
            options={
                "db_table": "dept_master_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Designation",
            fields=[
                (
                    "designation_code",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("designation_name", models.CharField(max_length=50)),
                ("createdby", models.CharField(blank=True, max_length=40, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "designation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Designation23223",
            fields=[
                (
                    "designation_code",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("designation_name", models.CharField(max_length=50)),
                ("createdby", models.CharField(blank=True, max_length=40, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "designation_23_2_23",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Designation27092022",
            fields=[
                (
                    "designation_code",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("designation_name", models.CharField(max_length=50)),
                ("createdby", models.CharField(blank=True, max_length=40, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "designation_27_09_2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DesignationOld",
            fields=[
                (
                    "designation_code",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("designation_name", models.CharField(max_length=50)),
                ("createdby", models.CharField(blank=True, max_length=40, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "designation_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Detailedfcheck",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("docno", models.CharField(max_length=20)),
                ("sfcode", models.CharField(blank=True, max_length=30, null=True)),
                ("specified", models.CharField(blank=True, max_length=200, null=True)),
                ("observed", models.CharField(blank=True, max_length=200, null=True)),
                ("qtyinspected", models.FloatField(blank=True, null=True)),
                ("qtyaccepted", models.FloatField(blank=True, null=True)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("qtyrejected", models.FloatField()),
                ("materialcode", models.CharField(max_length=20)),
                ("docbtch", models.IntegerField()),
            ],
            options={
                "db_table": "detailedfcheck",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DetailedInspection",
            fields=[
                ("docno", models.CharField(max_length=20)),
                ("postingdate", models.DateField(blank=True, null=True)),
                ("qtyreceived", models.PositiveIntegerField(blank=True, null=True)),
                ("vendor", models.CharField(blank=True, max_length=8, null=True)),
                ("docbatchno", models.IntegerField(primary_key=True, serialize=False)),
                ("materialcode", models.CharField(max_length=20)),
                ("potext", models.CharField(max_length=500)),
                ("upld_date", models.DateField()),
                ("reqpackage", models.CharField(blank=True, max_length=50, null=True)),
                ("receivedmpn", models.CharField(blank=True, max_length=30, null=True)),
                ("rcdmfr", models.CharField(blank=True, max_length=30, null=True)),
                ("rcdpackage", models.CharField(blank=True, max_length=50, null=True)),
                ("appmfr", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "receivedmfr",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("batchno", models.CharField(blank=True, max_length=50, null=True)),
                ("datecode", models.CharField(max_length=100)),
                ("rpercentage", models.FloatField()),
                ("make", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "passiveburnin",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("date", models.DateField(blank=True, null=True)),
                ("sign", models.CharField(blank=True, max_length=50, null=True)),
                ("refigi", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "qualityofpart",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("esdpacking", models.CharField(blank=True, max_length=5, null=True)),
                ("instslno", models.CharField(max_length=150)),
                ("qtyaccepted", models.CharField(blank=True, max_length=8, null=True)),
                ("qtyrejected", models.CharField(blank=True, max_length=8, null=True)),
                ("inspectedby", models.CharField(blank=True, max_length=40, null=True)),
                ("approvedby", models.CharField(blank=True, max_length=40, null=True)),
                ("inspecteddate", models.DateField(blank=True, null=True)),
                ("approveddate", models.DateField(blank=True, null=True)),
                ("finalsave", models.CharField(max_length=5)),
                ("start_time", models.CharField(max_length=100)),
                ("end_time", models.CharField(max_length=10)),
                ("createdby", models.BigIntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("note", models.CharField(max_length=500)),
            ],
            options={
                "db_table": "detailed_inspection",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Detailedpcheck",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("docno", models.CharField(blank=True, max_length=20, null=True)),
                ("sfcode", models.CharField(blank=True, max_length=30, null=True)),
                ("specified", models.CharField(blank=True, max_length=200, null=True)),
                ("observed", models.CharField(blank=True, max_length=200, null=True)),
                ("qtyinspected", models.FloatField(blank=True, null=True)),
                ("qtyaccepted", models.FloatField(blank=True, null=True)),
                ("qtyrejected", models.FloatField(blank=True, null=True)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("materialcode", models.CharField(max_length=20)),
                ("docbtch", models.IntegerField()),
            ],
            options={
                "db_table": "detailedpcheck",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DigitalSignDocs",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("signed_empcode", models.IntegerField()),
                ("signed_flname", models.CharField(max_length=500)),
                ("signed_by", models.CharField(max_length=500)),
                ("module_name", models.CharField(max_length=100)),
                ("date", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "digital_sign_docs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DisposalActionMaster",
            fields=[
                ("dsp_no", models.AutoField(primary_key=True, serialize=False)),
                ("dsp_name", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "disposal_action_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoAdminLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("action_time", models.DateTimeField()),
                ("object_id", models.TextField(blank=True, null=True)),
                ("object_repr", models.CharField(max_length=200)),
                ("action_flag", models.PositiveSmallIntegerField()),
                ("change_message", models.TextField()),
            ],
            options={
                "db_table": "django_admin_log",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoContentType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("app_label", models.CharField(max_length=100)),
                ("model", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "django_content_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoMigrations",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("app", models.CharField(max_length=255)),
                ("name", models.CharField(max_length=255)),
                ("applied", models.DateTimeField()),
            ],
            options={
                "db_table": "django_migrations",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DjangoSession",
            fields=[
                (
                    "session_key",
                    models.CharField(max_length=40, primary_key=True, serialize=False),
                ),
                ("session_data", models.TextField()),
                ("expire_date", models.DateTimeField()),
            ],
            options={
                "db_table": "django_session",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DocsDispatchGroupMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("loccode", models.CharField(max_length=20)),
                ("empcode", models.IntegerField()),
                ("active", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "docs_dispatch_group_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DocsDispatchMailTimeMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("time", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.IntegerField()),
            ],
            options={
                "db_table": "docs_dispatch_mail_time_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DocsDispatchModTransMaster",
            fields=[
                ("trans_mod_no", models.AutoField(primary_key=True, serialize=False)),
                ("trans_mod_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.IntegerField()),
            ],
            options={
                "db_table": "docs_dispatch_mod_trans_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DocsDispatchNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("doc_slno", models.CharField(max_length=20)),
                ("date", models.DateField()),
                ("sender", models.IntegerField()),
                ("desc", models.CharField(max_length=500)),
                ("pack_no", models.IntegerField()),
                ("trans_mod_no", models.IntegerField()),
                ("mod_code_name", models.IntegerField()),
                ("recipient_rcvd_timestamp", models.CharField(max_length=20)),
                ("originate", models.CharField(max_length=15)),
                ("destination", models.CharField(max_length=15)),
                ("status", models.IntegerField()),
                ("timestamp", models.CharField(max_length=25)),
                ("van_sender", models.IntegerField()),
                ("van_time", models.IntegerField()),
                ("van_time_actu_send", models.CharField(max_length=20)),
                ("trip_type", models.CharField(max_length=1)),
                ("trip_slno", models.IntegerField()),
                ("van_recip_sts", models.IntegerField()),
                ("van_recipient", models.IntegerField()),
                ("van_time_actu_recipient", models.CharField(max_length=20)),
                ("van_send2_actu_recipient", models.CharField(max_length=20)),
                ("van_docs_rcvd_sts", models.IntegerField()),
                ("van_docs_rcvd_timestamp", models.CharField(max_length=20)),
                ("van_docs_rcvd_by", models.IntegerField()),
                ("van_docs_rcvd_sts2", models.IntegerField()),
                ("van_docs_rcvd_timestamp2", models.CharField(max_length=20)),
                ("van_docs_rcvd_by2", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "docs_dispatch_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DocsDispatchPackingMaster",
            fields=[
                ("pack_no", models.AutoField(primary_key=True, serialize=False)),
                ("pack_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.IntegerField()),
            ],
            options={
                "db_table": "docs_dispatch_packing_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DocsDispatchStatusMaster",
            fields=[
                ("status", models.AutoField(primary_key=True, serialize=False)),
                ("status_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "docs_dispatch_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingCategory",
            fields=[
                ("category", models.AutoField(primary_key=True, serialize=False)),
                ("categoryname", models.CharField(max_length=150)),
                ("code", models.CharField(max_length=10)),
                ("type", models.IntegerField()),
                ("userid", models.IntegerField()),
                ("delete", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_category",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingComments",
            fields=[
                ("comment_id", models.AutoField(primary_key=True, serialize=False)),
                ("drawingid", models.IntegerField()),
                ("dwg_doc_id", models.IntegerField()),
                ("dwg_received", models.IntegerField()),
                ("creater", models.CharField(max_length=50)),
                ("checker", models.CharField(max_length=10)),
                ("approver", models.CharField(max_length=10)),
                ("comment", models.CharField(max_length=100)),
                ("date", models.DateTimeField()),
                ("empcode", models.IntegerField()),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("cmnts_extra_status", models.IntegerField()),
                ("cmnts_extra_dnwldtime", models.DateTimeField()),
                ("moved_toexternal", models.IntegerField()),
                ("moved_to_datetime", models.DateTimeField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.CharField(max_length=2)),
            ],
            options={
                "db_table": "drawing_comments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingComments02122020",
            fields=[
                ("comment_id", models.IntegerField(primary_key=True, serialize=False)),
                ("drawingid", models.IntegerField()),
                ("dwg_doc_id", models.IntegerField()),
                ("dwg_received", models.IntegerField()),
                ("creater", models.CharField(max_length=50)),
                ("checker", models.CharField(max_length=10)),
                ("approver", models.CharField(max_length=10)),
                ("comment", models.CharField(max_length=100)),
                ("date", models.DateTimeField()),
                ("empcode", models.IntegerField()),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("cmnts_extra_status", models.IntegerField()),
                ("cmnts_extra_dnwldtime", models.DateTimeField()),
                ("moved_toexternal", models.IntegerField()),
                ("moved_to_datetime", models.DateTimeField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.CharField(max_length=2)),
            ],
            options={
                "db_table": "drawing_comments_02_12_2020",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingComments30122020",
            fields=[
                ("comment_id", models.AutoField(primary_key=True, serialize=False)),
                ("drawingid", models.IntegerField()),
                ("dwg_doc_id", models.IntegerField()),
                ("dwg_received", models.IntegerField()),
                ("creater", models.CharField(max_length=50)),
                ("checker", models.CharField(max_length=10)),
                ("approver", models.CharField(max_length=10)),
                ("comment", models.CharField(max_length=100)),
                ("date", models.DateTimeField()),
                ("empcode", models.IntegerField()),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("cmnts_extra_status", models.IntegerField()),
                ("cmnts_extra_dnwldtime", models.DateTimeField()),
                ("moved_toexternal", models.IntegerField()),
                ("moved_to_datetime", models.DateTimeField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.CharField(max_length=2)),
            ],
            options={
                "db_table": "drawing_comments_30_12_2020",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingCommentsDuro",
            fields=[
                ("comment_id", models.AutoField(primary_key=True, serialize=False)),
                ("drawingid", models.IntegerField()),
                ("dwg_doc_id", models.IntegerField()),
                ("dwg_received", models.IntegerField()),
                ("creater", models.CharField(max_length=50)),
                ("checker", models.CharField(max_length=10)),
                ("approver", models.CharField(max_length=10)),
                ("comment", models.CharField(max_length=100)),
                ("date", models.DateTimeField()),
                ("empcode", models.IntegerField()),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("cmnts_extra_status", models.IntegerField()),
                ("cmnts_extra_dnwldtime", models.DateTimeField()),
                ("moved_toexternal", models.IntegerField()),
                ("moved_to_datetime", models.DateTimeField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.CharField(max_length=2)),
            ],
            options={
                "db_table": "drawing_comments_duro",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingDcd",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dwg_dept", models.CharField(max_length=25)),
                ("dwg_type", models.IntegerField()),
                ("dwg_empcode", models.IntegerField()),
                ("dwg_mailid", models.CharField(max_length=50)),
                ("dwg_shortcut", models.CharField(max_length=5)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_dcd",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingDcdbulk",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.CharField(max_length=7)),
                ("drawingid", models.CharField(max_length=8)),
            ],
            options={
                "db_table": "drawing_dcdbulk",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingDeletedCmnts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ref_id", models.CharField(blank=True, max_length=50, null=True)),
                ("cmnts", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "drawing_deleted_cmnts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingDoc",
            fields=[
                ("dwg_doc", models.AutoField(primary_key=True, serialize=False)),
                ("dwg_totid", models.IntegerField()),
                ("drawingid", models.IntegerField()),
                ("dwg_doc_id", models.IntegerField()),
                ("doc_required", models.IntegerField()),
                ("dwg_review", models.IntegerField()),
                ("dwg_path", models.CharField(max_length=150)),
                ("dwg_review_code", models.IntegerField()),
                ("dwg_release", models.IntegerField()),
                ("dwg_verifier", models.IntegerField()),
                ("dwg_verifier_code", models.IntegerField()),
                ("dwg_approval", models.IntegerField()),
                ("dwg_approval_empcode", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("emp_come1", models.CharField(max_length=10)),
                ("deleted_by", models.IntegerField()),
                ("softcopy_type", models.IntegerField()),
                ("recevied_veri_date", models.DateField()),
                ("download_sts", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_doc",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingEntry",
            fields=[
                ("drawingid", models.IntegerField(primary_key=True, serialize=False)),
                ("unit_no", models.IntegerField()),
                ("drawingname", models.CharField(max_length=40)),
                ("projectid", models.IntegerField()),
                ("projectname", models.CharField(max_length=100)),
                ("sizetype", models.CharField(max_length=10)),
                ("size", models.CharField(max_length=10)),
                ("stdpart", models.CharField(max_length=10)),
                ("sapcode", models.CharField(max_length=10)),
                ("dept", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("sendto", models.IntegerField()),
                ("checkercode", models.IntegerField()),
                ("approvercode", models.IntegerField()),
                ("date", models.DateTimeField()),
                ("saveddate", models.CharField(max_length=20)),
                ("createrstatus", models.IntegerField()),
                ("checkerstatus", models.IntegerField()),
                ("approverstatus", models.IntegerField()),
                ("ecr_no", models.CharField(max_length=20)),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("totstatus", models.IntegerField()),
                ("finallinkone", models.CharField(max_length=100)),
                ("finallinktwo", models.CharField(max_length=100)),
                ("finallinkdd", models.CharField(max_length=100)),
                ("finallinkthree", models.CharField(max_length=100)),
                ("final", models.CharField(max_length=50)),
                ("sapfinal", models.CharField(max_length=20)),
                ("uploadeduser", models.IntegerField()),
                ("category", models.IntegerField()),
                ("comment", models.CharField(max_length=100)),
                ("me_list", models.CharField(max_length=1)),
                ("pre", models.CharField(max_length=3)),
                ("pri", models.CharField(max_length=3)),
                ("top", models.CharField(max_length=3)),
                ("extra_status", models.IntegerField()),
                ("extra_dnwldtime", models.DateTimeField()),
                ("ip_type", models.IntegerField()),
                ("moved_toexternal", models.IntegerField()),
                ("moved_to_datetime", models.DateTimeField()),
                ("attch_toexternal", models.IntegerField()),
                ("attch_dttime_toexternal", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingEntry07112020",
            fields=[
                ("drawingid", models.AutoField(primary_key=True, serialize=False)),
                ("unit_no", models.IntegerField()),
                ("drawingname", models.CharField(max_length=40)),
                ("projectid", models.IntegerField()),
                ("projectname", models.CharField(max_length=100)),
                ("sizetype", models.CharField(max_length=10)),
                ("size", models.CharField(max_length=10)),
                ("stdpart", models.CharField(max_length=10)),
                ("sapcode", models.CharField(max_length=10)),
                ("dept", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("sendto", models.IntegerField()),
                ("checkercode", models.IntegerField()),
                ("approvercode", models.IntegerField()),
                ("date", models.DateTimeField()),
                ("saveddate", models.CharField(max_length=20)),
                ("createrstatus", models.IntegerField()),
                ("checkerstatus", models.IntegerField()),
                ("approverstatus", models.IntegerField()),
                ("ecr_no", models.CharField(max_length=20)),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("totstatus", models.IntegerField()),
                ("finallinkone", models.CharField(max_length=100)),
                ("finallinktwo", models.CharField(max_length=100)),
                ("finallinkdd", models.CharField(max_length=100)),
                ("finallinkthree", models.CharField(max_length=100)),
                ("final", models.CharField(max_length=50)),
                ("sapfinal", models.CharField(max_length=20)),
                ("uploadeduser", models.IntegerField()),
                ("category", models.IntegerField()),
                ("comment", models.CharField(max_length=100)),
                ("me_list", models.CharField(max_length=1)),
                ("pre", models.CharField(max_length=3)),
                ("pri", models.CharField(max_length=3)),
                ("top", models.CharField(max_length=3)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_entry_07_11_2020",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingEntry13112020",
            fields=[
                ("drawingid", models.AutoField(primary_key=True, serialize=False)),
                ("unit_no", models.IntegerField()),
                ("drawingname", models.CharField(max_length=40)),
                ("projectid", models.IntegerField()),
                ("projectname", models.CharField(max_length=100)),
                ("sizetype", models.CharField(max_length=10)),
                ("size", models.CharField(max_length=10)),
                ("stdpart", models.CharField(max_length=10)),
                ("sapcode", models.CharField(max_length=10)),
                ("dept", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("sendto", models.IntegerField()),
                ("checkercode", models.IntegerField()),
                ("approvercode", models.IntegerField()),
                ("date", models.DateTimeField()),
                ("saveddate", models.CharField(max_length=20)),
                ("createrstatus", models.IntegerField()),
                ("checkerstatus", models.IntegerField()),
                ("approverstatus", models.IntegerField()),
                ("ecr_no", models.CharField(max_length=20)),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("totstatus", models.IntegerField()),
                ("finallinkone", models.CharField(max_length=100)),
                ("finallinktwo", models.CharField(max_length=100)),
                ("finallinkdd", models.CharField(max_length=100)),
                ("finallinkthree", models.CharField(max_length=100)),
                ("final", models.CharField(max_length=50)),
                ("sapfinal", models.CharField(max_length=20)),
                ("uploadeduser", models.IntegerField()),
                ("category", models.IntegerField()),
                ("comment", models.CharField(max_length=100)),
                ("me_list", models.CharField(max_length=1)),
                ("pre", models.CharField(max_length=3)),
                ("pri", models.CharField(max_length=3)),
                ("top", models.CharField(max_length=3)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_entry_13112020",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingEntryDuro",
            fields=[
                ("drawingid", models.AutoField(primary_key=True, serialize=False)),
                ("unit_no", models.IntegerField()),
                ("drawingname", models.CharField(max_length=40)),
                ("projectid", models.IntegerField()),
                ("projectname", models.CharField(max_length=100)),
                ("sizetype", models.CharField(max_length=10)),
                ("size", models.CharField(max_length=10)),
                ("stdpart", models.CharField(max_length=10)),
                ("sapcode", models.CharField(max_length=10)),
                ("dept", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("sendto", models.IntegerField()),
                ("checkercode", models.IntegerField()),
                ("approvercode", models.IntegerField()),
                ("date", models.DateTimeField()),
                ("saveddate", models.CharField(max_length=20)),
                ("createrstatus", models.IntegerField()),
                ("checkerstatus", models.IntegerField()),
                ("approverstatus", models.IntegerField()),
                ("ecr_no", models.CharField(max_length=20)),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("totstatus", models.IntegerField()),
                ("finallinkone", models.CharField(max_length=100)),
                ("finallinktwo", models.CharField(max_length=100)),
                ("finallinkdd", models.CharField(max_length=100)),
                ("finallinkthree", models.CharField(max_length=100)),
                ("final", models.CharField(max_length=50)),
                ("sapfinal", models.CharField(max_length=20)),
                ("uploadeduser", models.IntegerField()),
                ("category", models.IntegerField()),
                ("comment", models.CharField(max_length=100)),
                ("me_list", models.CharField(max_length=1)),
                ("pre", models.CharField(max_length=3)),
                ("pri", models.CharField(max_length=3)),
                ("top", models.CharField(max_length=3)),
                ("extra_status", models.IntegerField()),
                ("extra_dnwldtime", models.DateTimeField()),
                ("ip_type", models.IntegerField()),
                ("moved_toexternal", models.IntegerField()),
                ("moved_to_datetime", models.DateTimeField()),
                ("attch_toexternal", models.IntegerField()),
                ("attch_dttime_toexternal", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_entry_duro",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingIndexCategorys",
            fields=[
                (
                    "dwg_category_id",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("dwg_mcode_id", models.IntegerField()),
                ("active", models.CharField(max_length=1)),
                ("dwg_category_sub", models.CharField(max_length=3)),
                ("dwg_category_value", models.CharField(max_length=50)),
                ("dwg_status", models.CharField(max_length=7)),
                ("dwg_response", models.IntegerField()),
                ("dwg_targetdate", models.DateField()),
                ("dwg_remarks", models.TextField(blank=True, null=True)),
                ("dwg_revno", models.IntegerField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "drawing_index_categorys",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingIndexCodes",
            fields=[
                ("dwg_mcode_id", models.AutoField(primary_key=True, serialize=False)),
                ("dwg_tot_id", models.IntegerField()),
                ("dwg_mcode", models.CharField(max_length=50)),
                (
                    "dwg_category",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("qty", models.IntegerField()),
                ("mqty", models.IntegerField()),
                ("dwg_mcode_ref", models.CharField(max_length=11)),
                ("new_reuse", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_index_codes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingReviewEntry",
            fields=[
                ("dwg_review_id", models.AutoField(primary_key=True, serialize=False)),
                ("dwg_tot_id", models.IntegerField()),
                ("project_cft", models.IntegerField()),
                ("cft_type", models.IntegerField()),
                ("dwg_date", models.DateField()),
                ("dwg_from", models.CharField(max_length=6)),
                ("dwg_to", models.CharField(max_length=6)),
                ("dwg_title", models.TextField(blank=True, null=True)),
                ("dwg_agenda", models.TextField(blank=True, null=True)),
                ("dwg_venu", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_review_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTot",
            fields=[
                ("dwg_totid", models.AutoField(primary_key=True, serialize=False)),
                ("drawingid", models.IntegerField()),
                ("release_no", models.CharField(max_length=3)),
                ("dwg_doc_id", models.IntegerField()),
                ("dwg_approvded", models.IntegerField()),
                ("dwg_verfication", models.IntegerField()),
                ("dwg_scaned", models.IntegerField()),
                ("dwg_issued", models.IntegerField()),
                ("dwg_received", models.IntegerField()),
                ("dwg_completed", models.IntegerField()),
                ("dwg_timestamp", models.DateTimeField()),
                ("drw_verificationtime", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "drawing_tot",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTot0612",
            fields=[
                ("dwg_totid", models.AutoField(primary_key=True, serialize=False)),
                ("drawingid", models.IntegerField()),
                ("release_no", models.CharField(max_length=3)),
                ("dwg_doc_id", models.IntegerField()),
                ("dwg_approvded", models.IntegerField()),
                ("dwg_verfication", models.IntegerField()),
                ("dwg_scaned", models.IntegerField()),
                ("dwg_issued", models.IntegerField()),
                ("dwg_received", models.IntegerField()),
                ("dwg_completed", models.IntegerField()),
                ("dwg_timestamp", models.DateTimeField()),
                ("drw_verificationtime", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "drawing_tot_0612",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotAnew",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("drawing_no", models.IntegerField()),
                ("doc", models.IntegerField()),
                ("old", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_anew",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotArchitecture",
            fields=[
                ("dwg_acr_id", models.AutoField(primary_key=True, serialize=False)),
                ("dwg_tot_id", models.IntegerField()),
                ("dwg_acr_desc", models.TextField(blank=True, null=True)),
                ("dwg_acr_model", models.IntegerField()),
                ("dwg_engineer_e", models.CharField(max_length=7)),
                ("dwg_engineer_m", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_architecture",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotAttendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dwg_tot_id", models.IntegerField()),
                ("dwg_empcode", models.CharField(max_length=7)),
                ("attendance", models.CharField(max_length=4)),
                ("dwg_type", models.CharField(max_length=4)),
                ("project_cft", models.IntegerField()),
                ("cft_type", models.CharField(max_length=4)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_attendance",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotBom",
            fields=[
                ("drawing_bom_id", models.AutoField(primary_key=True, serialize=False)),
                ("drawing_bom_project", models.CharField(max_length=4)),
                ("drawing_bom_main_code", models.CharField(max_length=15)),
                ("assm_drawing", models.CharField(max_length=20)),
                ("me_empcode", models.CharField(max_length=100)),
                ("me_empcode_release", models.CharField(max_length=7)),
                ("drawing_bom_creater", models.CharField(max_length=7)),
                ("mev1", models.CharField(max_length=7)),
                ("mev2", models.CharField(max_length=7)),
                ("drawing_bom_date", models.DateTimeField()),
                ("drawing_bom_status", models.CharField(max_length=3)),
                ("drawing_bom_percentage", models.CharField(max_length=2)),
                ("main_loc", models.CharField(max_length=2)),
                ("drawing_tot_bom_latestattachment", models.CharField(max_length=100)),
                ("bomreleaseattachment", models.CharField(max_length=50)),
                ("bom_notes", models.TextField()),
                ("bomtargetdate", models.DateField()),
                ("iteration", models.IntegerField()),
                ("delete1", models.CharField(max_length=1)),
                ("tvar", models.CharField(max_length=1)),
                ("bom_ntry_date", models.DateField()),
            ],
            options={
                "db_table": "drawing_tot_bom",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotBomFinal",
            fields=[
                (
                    "drawing_bom_fid",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("ack_no", models.IntegerField()),
                ("drawing_bom_id", models.CharField(max_length=100)),
                ("drawing_bom_project", models.CharField(max_length=50)),
                ("drawing_bom_project_dummy", models.CharField(max_length=50)),
                ("type", models.IntegerField()),
                ("drawing_bom_main_code", models.CharField(max_length=50)),
                ("drawing_bom_main_desc", models.CharField(max_length=200)),
                ("assm_drawing", models.CharField(max_length=20)),
                ("drawing_bom_items", models.CharField(max_length=100)),
                ("bom_items_draft", models.CharField(max_length=50)),
                ("bom_testcopies", models.CharField(max_length=100)),
                ("bom_items_attachment", models.CharField(max_length=100)),
                ("drawing_bom_created", models.CharField(max_length=6)),
                ("drawing_bom_verifier", models.CharField(max_length=7)),
                ("drawing_bom_verifier1", models.CharField(max_length=7)),
                ("drawing_bom_approval", models.CharField(max_length=7)),
                ("drawing_bom_status", models.CharField(max_length=2)),
                ("drawing_bom_rev", models.CharField(max_length=50)),
                ("drawing_bom_ecr", models.CharField(max_length=50)),
                ("typeecr", models.IntegerField()),
                ("drawing_bom_finalpdf", models.CharField(max_length=100)),
                ("drawing_bom_timestamp", models.DateTimeField()),
                ("bom_verificationtime", models.DateTimeField()),
                ("timestampupdate", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
                ("tvar", models.CharField(max_length=1)),
                ("cnote", models.TextField(blank=True, null=True)),
                ("rchange", models.TextField(blank=True, null=True)),
                ("futuredate", models.DateField(db_column="futureDate")),
                ("datetype", models.CharField(db_column="dateType", max_length=50)),
                ("typesupp", models.CharField(max_length=100)),
                ("bomtype", models.IntegerField()),
                ("bomrefno", models.IntegerField()),
                ("enabledoc", models.IntegerField()),
                ("print_type", models.IntegerField()),
                ("doc_no", models.CharField(max_length=100)),
                ("masterdata", models.IntegerField()),
                ("documentownership", models.CharField(max_length=50)),
                ("doc_revert", models.IntegerField()),
                ("backgrnd_data", models.IntegerField()),
                ("backgrnd_data_datetime", models.DateTimeField()),
                ("response", models.CharField(max_length=50)),
                ("remarks", models.CharField(max_length=50)),
                ("attachment", models.CharField(max_length=50)),
                ("me_review", models.IntegerField()),
                ("review_persons", models.CharField(max_length=500)),
                ("intra_drawing_bom_fid", models.IntegerField()),
                ("internet_move", models.IntegerField()),
                ("internet_pdfmove", models.IntegerField()),
                ("internet_softmove", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_bom_final",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotBomFinal041021",
            fields=[
                (
                    "drawing_bom_fid",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("ack_no", models.IntegerField()),
                ("drawing_bom_id", models.CharField(max_length=100)),
                ("drawing_bom_project", models.CharField(max_length=50)),
                ("drawing_bom_project_dummy", models.CharField(max_length=50)),
                ("type", models.IntegerField()),
                ("drawing_bom_main_code", models.CharField(max_length=50)),
                ("drawing_bom_main_desc", models.CharField(max_length=200)),
                ("assm_drawing", models.CharField(max_length=20)),
                ("drawing_bom_items", models.CharField(max_length=100)),
                ("bom_items_draft", models.CharField(max_length=50)),
                ("bom_testcopies", models.CharField(max_length=100)),
                ("bom_items_attachment", models.CharField(max_length=100)),
                ("drawing_bom_created", models.CharField(max_length=6)),
                ("drawing_bom_verifier", models.CharField(max_length=7)),
                ("drawing_bom_verifier1", models.CharField(max_length=7)),
                ("drawing_bom_approval", models.CharField(max_length=7)),
                ("drawing_bom_status", models.CharField(max_length=2)),
                ("drawing_bom_rev", models.CharField(max_length=10)),
                ("drawing_bom_ecr", models.CharField(max_length=50)),
                ("typeecr", models.IntegerField()),
                ("drawing_bom_finalpdf", models.CharField(max_length=100)),
                ("drawing_bom_timestamp", models.DateTimeField()),
                ("bom_verificationtime", models.DateTimeField()),
                ("timestampupdate", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
                ("tvar", models.CharField(max_length=1)),
                ("cnote", models.TextField(blank=True, null=True)),
                ("rchange", models.TextField(blank=True, null=True)),
                ("futuredate", models.DateField(db_column="futureDate")),
                ("datetype", models.CharField(db_column="dateType", max_length=50)),
                ("typesupp", models.CharField(max_length=100)),
                ("bomtype", models.IntegerField()),
                ("bomrefno", models.IntegerField()),
                ("enabledoc", models.IntegerField()),
                ("print_type", models.IntegerField()),
                ("doc_no", models.CharField(max_length=100)),
                ("masterdata", models.IntegerField()),
                ("documentownership", models.CharField(max_length=50)),
                ("doc_revert", models.IntegerField()),
                ("backgrnd_data", models.IntegerField()),
                ("backgrnd_data_datetime", models.DateTimeField()),
                ("response", models.CharField(max_length=50)),
                ("remarks", models.CharField(max_length=50)),
                ("attachment", models.CharField(max_length=50)),
                ("me_review", models.IntegerField()),
                ("review_persons", models.CharField(max_length=500)),
                ("intra_drawing_bom_fid", models.IntegerField()),
                ("internet_move", models.IntegerField()),
                ("internet_pdfmove", models.IntegerField()),
                ("internet_softmove", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_bom_final_04_10_21",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotBomFinal0612",
            fields=[
                (
                    "drawing_bom_fid",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("ack_no", models.IntegerField()),
                ("drawing_bom_id", models.CharField(max_length=100)),
                ("drawing_bom_project", models.CharField(max_length=50)),
                ("drawing_bom_project_dummy", models.CharField(max_length=50)),
                ("type", models.IntegerField()),
                ("drawing_bom_main_code", models.CharField(max_length=50)),
                ("drawing_bom_main_desc", models.CharField(max_length=200)),
                ("assm_drawing", models.CharField(max_length=20)),
                ("drawing_bom_items", models.CharField(max_length=100)),
                ("bom_items_draft", models.CharField(max_length=50)),
                ("bom_testcopies", models.CharField(max_length=100)),
                ("bom_items_attachment", models.CharField(max_length=100)),
                ("drawing_bom_created", models.CharField(max_length=7)),
                ("drawing_bom_verifier", models.CharField(max_length=7)),
                ("drawing_bom_verifier1", models.CharField(max_length=7)),
                ("drawing_bom_approval", models.CharField(max_length=7)),
                ("drawing_bom_status", models.CharField(max_length=2)),
                ("drawing_bom_rev", models.CharField(max_length=10)),
                ("drawing_bom_ecr", models.CharField(max_length=50)),
                ("typeecr", models.IntegerField()),
                ("drawing_bom_finalpdf", models.CharField(max_length=100)),
                ("drawing_bom_timestamp", models.DateTimeField()),
                ("bom_verificationtime", models.DateTimeField()),
                ("timestampupdate", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
                ("tvar", models.CharField(max_length=1)),
                ("cnote", models.TextField()),
                ("rchange", models.TextField()),
                ("futuredate", models.DateField(db_column="futureDate")),
                ("datetype", models.CharField(db_column="dateType", max_length=50)),
                ("typesupp", models.CharField(max_length=100)),
                ("bomtype", models.IntegerField()),
                ("bomrefno", models.IntegerField()),
                ("enabledoc", models.IntegerField()),
                ("print_type", models.IntegerField()),
                ("doc_no", models.CharField(max_length=100)),
                ("masterdata", models.IntegerField()),
                ("documentownership", models.CharField(max_length=50)),
                ("doc_revert", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_bom_final_06_12",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotBomFinal2210",
            fields=[
                (
                    "drawing_bom_fid",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("ack_no", models.IntegerField()),
                ("drawing_bom_id", models.CharField(max_length=100)),
                ("drawing_bom_project", models.CharField(max_length=50)),
                ("drawing_bom_project_dummy", models.CharField(max_length=50)),
                ("type", models.IntegerField()),
                ("drawing_bom_main_code", models.CharField(max_length=50)),
                ("drawing_bom_main_desc", models.CharField(max_length=200)),
                ("assm_drawing", models.CharField(max_length=20)),
                ("drawing_bom_items", models.CharField(max_length=100)),
                ("bom_items_draft", models.CharField(max_length=50)),
                ("bom_testcopies", models.CharField(max_length=100)),
                ("bom_items_attachment", models.CharField(max_length=100)),
                ("drawing_bom_created", models.CharField(max_length=6)),
                ("drawing_bom_verifier", models.CharField(max_length=7)),
                ("drawing_bom_verifier1", models.CharField(max_length=7)),
                ("drawing_bom_approval", models.CharField(max_length=7)),
                ("drawing_bom_status", models.CharField(max_length=2)),
                ("drawing_bom_rev", models.CharField(max_length=50)),
                ("drawing_bom_ecr", models.CharField(max_length=50)),
                ("typeecr", models.IntegerField()),
                ("drawing_bom_finalpdf", models.CharField(max_length=100)),
                ("drawing_bom_timestamp", models.DateTimeField()),
                ("bom_verificationtime", models.DateTimeField()),
                ("timestampupdate", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
                ("tvar", models.CharField(max_length=1)),
                ("cnote", models.TextField(blank=True, null=True)),
                ("rchange", models.TextField(blank=True, null=True)),
                ("futuredate", models.DateField(db_column="futureDate")),
                ("datetype", models.CharField(db_column="dateType", max_length=50)),
                ("typesupp", models.CharField(max_length=100)),
                ("bomtype", models.IntegerField()),
                ("bomrefno", models.IntegerField()),
                ("enabledoc", models.IntegerField()),
                ("print_type", models.IntegerField()),
                ("doc_no", models.CharField(max_length=100)),
                ("masterdata", models.IntegerField()),
                ("documentownership", models.CharField(max_length=50)),
                ("doc_revert", models.IntegerField()),
                ("backgrnd_data", models.IntegerField()),
                ("backgrnd_data_datetime", models.DateTimeField()),
                ("response", models.CharField(max_length=50)),
                ("remarks", models.CharField(max_length=50)),
                ("attachment", models.CharField(max_length=50)),
                ("me_review", models.IntegerField()),
                ("review_persons", models.CharField(max_length=500)),
                ("intra_drawing_bom_fid", models.IntegerField()),
                ("internet_move", models.IntegerField()),
                ("internet_pdfmove", models.IntegerField()),
                ("internet_softmove", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_bom_final_22_10",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotBomHistory",
            fields=[
                ("bom_history_id", models.AutoField(primary_key=True, serialize=False)),
                ("drawing_bom_id", models.IntegerField()),
                ("bom_status", models.CharField(max_length=5)),
                ("bom_type", models.CharField(max_length=5)),
                ("bom_version", models.CharField(max_length=50)),
                ("noofcopys", models.IntegerField()),
                ("bom_associate", models.CharField(max_length=15)),
                ("type_soft_hard", models.IntegerField()),
                ("no_of_copies", models.IntegerField()),
                ("soft_copy_req", models.IntegerField()),
                ("bom_comment", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("doc_input_remarks", models.TextField(blank=True, null=True)),
                ("masterdata", models.IntegerField()),
                ("reqid", models.IntegerField()),
                ("qap_attach", models.CharField(max_length=100)),
                ("associate_init", models.IntegerField()),
                ("accepsts", models.IntegerField()),
                ("replied", models.IntegerField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "drawing_tot_bom_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotBomHistory041021",
            fields=[
                ("bom_history_id", models.AutoField(primary_key=True, serialize=False)),
                ("drawing_bom_id", models.IntegerField()),
                ("bom_status", models.CharField(max_length=5)),
                ("bom_type", models.CharField(max_length=5)),
                ("bom_version", models.CharField(max_length=50)),
                ("noofcopys", models.IntegerField()),
                ("bom_associate", models.CharField(max_length=15)),
                ("type_soft_hard", models.IntegerField()),
                ("no_of_copies", models.IntegerField()),
                ("soft_copy_req", models.IntegerField()),
                ("bom_comment", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("doc_input_remarks", models.TextField(blank=True, null=True)),
                ("masterdata", models.IntegerField()),
                ("reqid", models.IntegerField()),
                ("qap_attach", models.CharField(max_length=100)),
                ("associate_init", models.IntegerField()),
                ("accepsts", models.IntegerField()),
                ("replied", models.IntegerField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "drawing_tot_bom_history_04_10_21",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotBomHistory0712",
            fields=[
                ("bom_history_id", models.AutoField(primary_key=True, serialize=False)),
                ("drawing_bom_id", models.IntegerField()),
                ("bom_status", models.CharField(max_length=3)),
                ("bom_type", models.CharField(max_length=1)),
                ("bom_version", models.CharField(max_length=50)),
                ("noofcopys", models.IntegerField()),
                ("bom_associate", models.CharField(max_length=7)),
                ("bom_comment", models.TextField()),
                ("timestamp", models.DateTimeField()),
                ("masterdata", models.IntegerField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "drawing_tot_bom_history_0712",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotBomHistory2210",
            fields=[
                ("bom_history_id", models.AutoField(primary_key=True, serialize=False)),
                ("drawing_bom_id", models.IntegerField()),
                ("bom_status", models.CharField(max_length=5)),
                ("bom_type", models.CharField(max_length=5)),
                ("bom_version", models.CharField(max_length=50)),
                ("noofcopys", models.IntegerField()),
                ("bom_associate", models.CharField(max_length=15)),
                ("type_soft_hard", models.IntegerField()),
                ("no_of_copies", models.IntegerField()),
                ("soft_copy_req", models.IntegerField()),
                ("bom_comment", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("doc_input_remarks", models.TextField(blank=True, null=True)),
                ("masterdata", models.IntegerField()),
                ("reqid", models.IntegerField()),
                ("qap_attach", models.CharField(max_length=100)),
                ("associate_init", models.IntegerField()),
                ("accepsts", models.IntegerField()),
                ("replied", models.IntegerField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "drawing_tot_bom_history_22_10",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotBomItems",
            fields=[
                (
                    "drawing_tot_bom_itemid",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("drawing_bom_id", models.IntegerField()),
                ("drawing_tot_bom_code", models.CharField(max_length=15)),
                ("drawing_tot_bom_uom", models.CharField(max_length=10)),
                (
                    "drawing_tot_bom_qty",
                    models.DecimalField(decimal_places=3, max_digits=10),
                ),
                (
                    "drawing_tot_bom_qty_old",
                    models.DecimalField(decimal_places=3, max_digits=10),
                ),
                ("drawing_tot_bom_category", models.CharField(max_length=3)),
                ("drawing_tot_bom_nro", models.CharField(max_length=3)),
                ("drawing_tot_bom_cmt", models.CharField(max_length=100)),
                ("drawing_tot_bom_loc", models.TextField()),
                ("timestamp", models.DateTimeField()),
                ("iteration", models.CharField(max_length=3)),
                ("newchanges", models.IntegerField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "drawing_tot_bom_items",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotBomMaterial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("productcode", models.CharField(max_length=15)),
                ("empcode", models.CharField(max_length=7)),
            ],
            options={
                "db_table": "drawing_tot_bom_material",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotCft",
            fields=[
                ("historyid", models.AutoField(primary_key=True, serialize=False)),
                ("dwg_mom_id", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("doc_details", models.TextField(blank=True, null=True)),
                ("ecr", models.TextField(blank=True, null=True)),
                ("status", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "drawing_tot_cft",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotCftGroupmailid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("group_mailid", models.CharField(max_length=100)),
                ("type", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_cft_groupmailid",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotCopyMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("docid", models.IntegerField(blank=True, null=True)),
                ("deptid", models.IntegerField()),
                ("type", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_copy_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotCpaChecklist",
            fields=[
                ("param_id", models.AutoField(primary_key=True, serialize=False)),
                ("parameter", models.TextField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_cpa_checklist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotCpaChecksave",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("drawing_bom_fid", models.IntegerField()),
                ("param_id", models.IntegerField()),
                ("check_val", models.IntegerField()),
                ("remarks", models.CharField(max_length=500)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_cpa_checksave",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotDocInputs",
            fields=[
                ("reqid", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.CharField(max_length=6)),
                ("ntry_date", models.DateField()),
                ("doc_type", models.IntegerField()),
                ("doc_cate", models.IntegerField()),
                ("responsibility", models.CharField(max_length=100)),
                ("project", models.CharField(max_length=200)),
                ("revno", models.IntegerField()),
                ("documentownership", models.CharField(max_length=10)),
                ("main_code", models.CharField(max_length=100)),
                ("main_desc", models.CharField(max_length=200)),
                ("remarks", models.TextField()),
                ("req_attach", models.CharField(max_length=60)),
                ("bom_history_id", models.IntegerField()),
                ("stuatus", models.IntegerField()),
                ("response", models.IntegerField()),
                ("assign_date", models.DateField()),
                ("released_through", models.IntegerField()),
                ("revertto_user", models.IntegerField()),
                ("me_code", models.IntegerField()),
                ("me_remarks", models.TextField(blank=True, null=True)),
                ("product_new_old", models.IntegerField()),
                ("prod_specf", models.CharField(max_length=150)),
                ("specfattach", models.CharField(max_length=100)),
                ("reasn_req", models.IntegerField()),
                ("dirctrate", models.IntegerField()),
                ("strselec", models.CharField(max_length=10)),
                ("strattch", models.CharField(max_length=50)),
                ("concern_asso", models.IntegerField()),
                ("formattext", models.TextField(blank=True, null=True)),
                ("formatattch", models.CharField(max_length=50)),
                ("type_of_manual", models.IntegerField()),
                ("contact_persn", models.IntegerField()),
                ("reviewer", models.IntegerField()),
                ("needed_bydate", models.DateField()),
                ("hod_fucnl", models.IntegerField()),
                ("hodcmmnts", models.CharField(max_length=300)),
                ("qap_initicmmnts", models.CharField(max_length=500)),
                ("qap_file_initi", models.CharField(max_length=100)),
                ("tar_date", models.DateField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "drawing_tot_doc_inputs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotDocInputs041021",
            fields=[
                ("reqid", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.CharField(max_length=6)),
                ("ntry_date", models.DateField()),
                ("doc_type", models.IntegerField()),
                ("doc_cate", models.IntegerField()),
                ("responsibility", models.CharField(max_length=100)),
                ("project", models.CharField(max_length=200)),
                ("revno", models.IntegerField()),
                ("documentownership", models.CharField(max_length=10)),
                ("main_code", models.CharField(max_length=100)),
                ("main_desc", models.CharField(max_length=200)),
                ("remarks", models.TextField()),
                ("req_attach", models.CharField(max_length=60)),
                ("bom_history_id", models.IntegerField()),
                ("stuatus", models.IntegerField()),
                ("response", models.IntegerField()),
                ("assign_date", models.DateField()),
                ("released_through", models.IntegerField()),
                ("revertto_user", models.IntegerField()),
                ("me_code", models.IntegerField()),
                ("me_remarks", models.TextField(blank=True, null=True)),
                ("product_new_old", models.IntegerField()),
                ("prod_specf", models.CharField(max_length=150)),
                ("specfattach", models.CharField(max_length=100)),
                ("reasn_req", models.IntegerField()),
                ("dirctrate", models.IntegerField()),
                ("strselec", models.CharField(max_length=10)),
                ("strattch", models.CharField(max_length=50)),
                ("concern_asso", models.IntegerField()),
                ("formattext", models.TextField(blank=True, null=True)),
                ("formatattch", models.CharField(max_length=50)),
                ("type_of_manual", models.IntegerField()),
                ("contact_persn", models.IntegerField()),
                ("reviewer", models.IntegerField()),
                ("needed_bydate", models.DateField()),
                ("hod_fucnl", models.IntegerField()),
                ("hodcmmnts", models.CharField(max_length=300)),
                ("qap_initicmmnts", models.CharField(max_length=500)),
                ("qap_file_initi", models.CharField(max_length=100)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "drawing_tot_doc_inputs_04_10_21",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotDocInputs2210",
            fields=[
                ("reqid", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.CharField(max_length=6)),
                ("ntry_date", models.DateField()),
                ("doc_type", models.IntegerField()),
                ("doc_cate", models.IntegerField()),
                ("responsibility", models.CharField(max_length=100)),
                ("project", models.CharField(max_length=200)),
                ("revno", models.IntegerField()),
                ("documentownership", models.CharField(max_length=10)),
                ("main_code", models.CharField(max_length=100)),
                ("main_desc", models.CharField(max_length=200)),
                ("remarks", models.TextField()),
                ("req_attach", models.CharField(max_length=60)),
                ("bom_history_id", models.IntegerField()),
                ("stuatus", models.IntegerField()),
                ("response", models.IntegerField()),
                ("assign_date", models.DateField()),
                ("released_through", models.IntegerField()),
                ("revertto_user", models.IntegerField()),
                ("me_code", models.IntegerField()),
                ("me_remarks", models.TextField(blank=True, null=True)),
                ("product_new_old", models.IntegerField()),
                ("prod_specf", models.CharField(max_length=150)),
                ("specfattach", models.CharField(max_length=100)),
                ("reasn_req", models.IntegerField()),
                ("dirctrate", models.IntegerField()),
                ("strselec", models.CharField(max_length=10)),
                ("strattch", models.CharField(max_length=50)),
                ("concern_asso", models.IntegerField()),
                ("formattext", models.TextField(blank=True, null=True)),
                ("formatattch", models.CharField(max_length=50)),
                ("type_of_manual", models.IntegerField()),
                ("contact_persn", models.IntegerField()),
                ("reviewer", models.IntegerField()),
                ("needed_bydate", models.DateField()),
                ("hod_fucnl", models.IntegerField()),
                ("hodcmmnts", models.CharField(max_length=300)),
                ("qap_initicmmnts", models.CharField(max_length=500)),
                ("qap_file_initi", models.CharField(max_length=100)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "drawing_tot_doc_inputs_22_10",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotEntry",
            fields=[
                ("dwg_tot_id", models.AutoField(primary_key=True, serialize=False)),
                ("dwg_project", models.IntegerField()),
                ("ecode", models.CharField(max_length=50)),
                (
                    "dwg_revrver",
                    models.CharField(db_column="dwg_revRver", max_length=4),
                ),
                ("dwg_date", models.DateField()),
                ("dwg_from", models.CharField(max_length=6)),
                ("dwg_to", models.CharField(max_length=6)),
                ("dwg_title", models.TextField(blank=True, null=True)),
                ("dwg_agenda", models.TextField(blank=True, null=True)),
                ("dwg_venu", models.IntegerField()),
                ("dwg_project_e", models.IntegerField()),
                ("dwg_project_m", models.IntegerField()),
                ("spec_code", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotIssueDataRequest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("main_code", models.CharField(max_length=50)),
                ("attachment", models.CharField(max_length=100)),
                ("requirement", models.IntegerField()),
                ("type", models.IntegerField()),
                ("reason", models.TextField()),
                ("no_of_copys", models.IntegerField()),
                ("soft_copy_req", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("status", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("todepartment", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_issue_data_request",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotManual",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("type", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_manual",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotManualChcklist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reqid", models.IntegerField()),
                ("topic", models.IntegerField()),
                ("availability_sts", models.CharField(max_length=200)),
                ("reference_doc", models.CharField(max_length=100)),
                ("provider", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_manual_chcklist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotMnualChcklistTopics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("topic", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_mnual_chcklist_topics",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotMom",
            fields=[
                ("dwg_mom_id", models.AutoField(primary_key=True, serialize=False)),
                ("dwg_tot_id", models.IntegerField()),
                ("project_cft", models.IntegerField()),
                ("dwg_type", models.CharField(max_length=1)),
                ("dwg_mcode", models.CharField(max_length=15)),
                ("dwg_points", models.TextField(blank=True, null=True)),
                ("dwg_rootcause", models.TextField(blank=True, null=True)),
                ("dwg_priority", models.TextField(blank=True, null=True)),
                ("dwg_metrics", models.CharField(max_length=4)),
                ("dwg_metrics_category", models.CharField(max_length=4)),
                ("dwg_action_plan", models.TextField(blank=True, null=True)),
                ("dwg_respons", models.TextField(blank=True, null=True)),
                ("dwg_t_date", models.DateField()),
                ("dwg_status", models.CharField(max_length=100)),
                ("dwg_doc_details", models.TextField(blank=True, null=True)),
                ("dwg_c_date", models.DateField()),
                ("dwg_task_status", models.CharField(max_length=6)),
                ("dwg_ecr", models.TextField(blank=True, null=True)),
                ("hodreview", models.TextField(blank=True, null=True)),
                ("mereview", models.TextField(blank=True, null=True)),
                ("cft_type", models.CharField(max_length=1)),
                ("meeting_count", models.CharField(max_length=3)),
                ("dwg_review_id", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("created", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_mom",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotTemp",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("mcode", models.CharField(max_length=15)),
                ("dwg_tot_id", models.CharField(max_length=3)),
            ],
            options={
                "db_table": "drawing_tot_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingTotTypeIncrement",
            fields=[
                ("type", models.IntegerField(primary_key=True, serialize=False)),
                ("prefix", models.CharField(max_length=5)),
                ("value", models.IntegerField()),
                ("insert_id", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_tot_type_increment",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingVersionentry",
            fields=[
                ("versionid", models.IntegerField(primary_key=True, serialize=False)),
                ("drawingid", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("finallinkone", models.CharField(max_length=200)),
                ("finallinktwo", models.CharField(max_length=200)),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("date", models.DateTimeField()),
                ("vsnextra_status", models.IntegerField()),
                ("vsnextra_dnwldtime", models.DateTimeField()),
                ("moved_toexternal", models.IntegerField()),
                ("moved_to_datetime", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_versionentry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingVersionentry07112020",
            fields=[
                ("versionid", models.AutoField(primary_key=True, serialize=False)),
                ("drawingid", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("finallinkone", models.CharField(max_length=200)),
                ("finallinktwo", models.CharField(max_length=200)),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("date", models.DateTimeField()),
                ("vsnextra_status", models.IntegerField()),
                ("vsnextra_dnwldtime", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_versionentry_07_11_2020",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingVersionentry13112020",
            fields=[
                ("versionid", models.AutoField(primary_key=True, serialize=False)),
                ("drawingid", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("finallinkone", models.CharField(max_length=200)),
                ("finallinktwo", models.CharField(max_length=200)),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("date", models.DateTimeField()),
                ("vsnextra_status", models.IntegerField()),
                ("vsnextra_dnwldtime", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_versionentry_13_11_2020",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingVersionentryDuro",
            fields=[
                ("versionid", models.AutoField(primary_key=True, serialize=False)),
                ("drawingid", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("finallinkone", models.CharField(max_length=200)),
                ("finallinktwo", models.CharField(max_length=200)),
                ("version_no", models.CharField(max_length=10)),
                ("release_no", models.CharField(max_length=10)),
                ("date", models.DateTimeField()),
                ("vsnextra_status", models.IntegerField()),
                ("vsnextra_dnwldtime", models.DateTimeField()),
                ("moved_toexternal", models.IntegerField()),
                ("moved_to_datetime", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_versionentry_duro",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DrawingVersionentryTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("drawingid", models.IntegerField()),
                ("release_no", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "drawing_versionentry_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Dum",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.IntegerField()),
                ("place", models.IntegerField()),
            ],
            options={
                "db_table": "dum",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="DvssKanbanTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("part_no", models.CharField(max_length=15)),
                ("desc", models.CharField(max_length=100)),
                ("loc_at1", models.CharField(max_length=50)),
                ("qty", models.IntegerField()),
                ("uom", models.CharField(max_length=10)),
                ("loc_at2", models.CharField(max_length=50)),
                ("suplr", models.CharField(max_length=50)),
                ("mfg", models.CharField(max_length=20)),
                ("contact", models.CharField(max_length=25)),
                ("lead_time", models.IntegerField()),
                ("ext", models.CharField(max_length=20)),
                ("sub_assy", models.CharField(max_length=50)),
                ("slip_no", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "dvss_kanban_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrAplcbltyMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("cat", models.CharField(max_length=50)),
                ("sub_cat", models.CharField(max_length=70)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_aplcblty_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrAreaChngMstr",
            fields=[
                ("module", models.IntegerField()),
                ("area_chng", models.CharField(max_length=100)),
                ("area_chng_sub", models.CharField(max_length=100)),
                ("sts", models.CharField(max_length=1)),
                ("s_h_dr", models.CharField(max_length=8)),
                ("no", models.AutoField(primary_key=True, serialize=False)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_area_chng_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrAttachments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.IntegerField()),
                ("file_name", models.CharField(max_length=150)),
                ("temp_file_name", models.CharField(max_length=100)),
                ("size", models.CharField(max_length=30)),
                ("type", models.CharField(max_length=100)),
                ("location", models.CharField(max_length=150)),
                ("remarks", models.CharField(max_length=200)),
                ("created", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_attachments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrAuthenticationMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("field", models.CharField(max_length=20)),
                ("emps", models.CharField(max_length=500)),
            ],
            options={
                "db_table": "ecr_authentication_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrAvgDaysMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField(unique=True)),
                ("description", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("deleteby", models.CharField(max_length=10)),
                ("deletedate", models.DateField()),
            ],
            options={
                "db_table": "ecr_avg_days_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrDesignTeamStdyMstr",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("type", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_design_team_stdy_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrDocCtrl",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.IntegerField()),
                ("doc_dr_no", models.CharField(max_length=25)),
                ("rev", models.IntegerField()),
                ("complt_on", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=6)),
                ("medate", models.CharField(max_length=25)),
                ("status", models.IntegerField()),
                ("doc_send", models.CharField(max_length=6)),
                ("dcdate", models.CharField(max_length=25)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_doc_ctrl",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrDsgnPrdAprlAtt",
            fields=[
                ("slno", models.IntegerField()),
                ("dsgn_prd_att", models.TextField()),
                ("dsgn_prd_name", models.CharField(max_length=50)),
                ("dsgn_prd_ext", models.CharField(max_length=20)),
                ("no", models.AutoField(primary_key=True, serialize=False)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_dsgn_prd_aprl_att",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrDsgnPrdMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("ecr_prnt", models.CharField(max_length=50)),
                ("ecr_mstr", models.CharField(max_length=50)),
                ("ecr_chld", models.CharField(max_length=150)),
                ("enc_ref", models.CharField(max_length=1)),
                ("applicability", models.CharField(max_length=1)),
                ("typeofchange", models.CharField(max_length=1)),
                ("enc_smpl_vis", models.CharField(max_length=1)),
                ("enc_dsgn_prd_aprl", models.CharField(max_length=1)),
                ("ecr_sub_chld", models.CharField(max_length=50)),
                ("ecr_sub", models.CharField(max_length=50)),
                ("createdby", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_dsgn_prd_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrEcadNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("rcvrs", models.CharField(max_length=500)),
                ("sts", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("me_date", models.DateField()),
                ("ntryby", models.IntegerField()),
                ("ntryby_date", models.CharField(max_length=19)),
                ("up_sts", models.IntegerField()),
                ("reject_remarks", models.CharField(max_length=200)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_ecad_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrEcrrbomActions",
            fields=[
                (
                    "ecr_action_slno",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("ecr_action_symbol", models.CharField(max_length=10)),
                ("ecr_action_name", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "ecr_ecrrbom_actions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrEstimationsNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("ecr_no", models.IntegerField()),
                ("estimation", models.CharField(max_length=250)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_estimations_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrFaiAttach",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fai_id", models.IntegerField()),
                ("ecr_no", models.IntegerField()),
                ("empcode", models.CharField(max_length=7)),
                ("attachment", models.CharField(max_length=500)),
                ("user_fm_rmks", models.CharField(max_length=500)),
                ("department", models.CharField(max_length=50)),
                ("status", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_fai_attach",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrFaiAuthMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("department", models.CharField(max_length=50)),
                ("empcode", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_fai_auth_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrFaiDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.IntegerField()),
                ("doc", models.CharField(max_length=25)),
                ("revision", models.IntegerField()),
                ("department", models.CharField(max_length=30)),
                ("remarks", models.CharField(max_length=200)),
                ("subassembly", models.CharField(max_length=50)),
                ("product", models.IntegerField()),
                ("tooling", models.CharField(max_length=4)),
                ("createdby", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("status", models.IntegerField()),
                ("user_fm_dep", models.CharField(max_length=7)),
                ("user_fm_rmks", models.CharField(max_length=200)),
                ("user_fm_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_fai_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrFieldFailureMails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.IntegerField()),
                ("to", models.CharField(max_length=150)),
                ("cc", models.CharField(max_length=150)),
                ("subject", models.CharField(max_length=70)),
                ("body", models.TextField()),
                ("sts", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_field_failure_mails",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrGroupMailIdsMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("group_name", models.CharField(max_length=50)),
                ("empcode", models.CharField(max_length=250)),
                ("form_type", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "ecr_group_mail_ids_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrHspMstr",
            fields=[
                ("hsp_no", models.AutoField(primary_key=True, serialize=False)),
                ("hsp_name", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_hsp_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrIarOutCmMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("iar_out_cm", models.CharField(max_length=150)),
                ("delete1", models.IntegerField()),
                ("nick_name", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_iar_out_cm_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrIarOutCmNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.CharField(max_length=50)),
                ("iar_membrs_attn", models.CharField(max_length=500)),
                ("iar_membrs_obrs", models.CharField(max_length=500)),
                ("ecr_iar_out_cm_slno", models.IntegerField()),
                ("iar_date", models.CharField(max_length=10)),
                ("iar_rmrks", models.CharField(max_length=150)),
                ("iar_sts", models.CharField(max_length=1)),
                ("cls_st_disp_actbygm", models.CharField(max_length=500)),
                ("cls_st_rew_actnyedp", models.CharField(max_length=500)),
                ("createdby", models.IntegerField()),
                ("iar_cmplt_sts", models.IntegerField()),
                ("iar_cmplt_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_iar_out_cm_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrImpctAnlsysNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.CharField(max_length=50)),
                ("area_chng_slno", models.IntegerField()),
                ("aplcbl", models.IntegerField()),
                ("ddtj_no", models.CharField(max_length=150)),
                ("rspnsblty", models.CharField(max_length=150)),
                ("sts", models.CharField(max_length=150)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_impct_anlsys_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrInViewMatNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("eff_module", models.CharField(max_length=500)),
                ("resp", models.CharField(max_length=50)),
                ("sts", models.CharField(max_length=1500)),
                ("mail_sts", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("ntry_by", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("mail_group", models.CharField(max_length=30)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_in_view_mat_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrMatMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("number_9smat", models.CharField(db_column="9smat", max_length=15)),
                ("number_9sdesc", models.CharField(db_column="9sdesc", max_length=50)),
                ("matnr", models.CharField(max_length=15)),
                ("desc", models.CharField(max_length=50)),
                ("createdeby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_mat_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.CharField(max_length=50)),
                ("ecr_obsrvtn", models.CharField(max_length=1000)),
                ("ecr_rvw_cmty", models.CharField(max_length=500)),
                ("ecr_rvw_pnts", models.CharField(max_length=500)),
                ("ecr_rvw_dt", models.DateField()),
                ("product_sts", models.CharField(max_length=1)),
                ("out_cm", models.IntegerField()),
                ("rmrks", models.CharField(max_length=1500)),
                ("whom_2send", models.CharField(max_length=1000)),
                ("ref_att_name", models.CharField(max_length=50)),
                ("ref_att", models.TextField()),
                ("ref_att_ext", models.CharField(max_length=30)),
                ("createdby", models.IntegerField()),
                ("iar_mbrs_attn", models.CharField(max_length=500)),
                ("iar_date", models.DateField()),
                ("iar_mbrs_obs", models.CharField(max_length=500)),
                ("iar_mbrs_doc", models.CharField(max_length=500)),
                ("iar_ntryby", models.IntegerField()),
                ("assign_to", models.CharField(max_length=500)),
                ("ecr_cl_impl_rmrks", models.CharField(max_length=600)),
                ("mom_attach", models.CharField(max_length=200)),
                ("ecr_put_hold_rmrks", models.CharField(max_length=600)),
                ("ecr_rej_rmrks", models.CharField(max_length=600)),
                ("me_remarks", models.CharField(max_length=2000)),
                ("timestamp", models.DateTimeField()),
                ("mail2_desg_byme", models.CharField(max_length=2)),
                ("mail_todesigners", models.CharField(max_length=50)),
                ("mail_todesgnr_date", models.DateField()),
                ("ass_team", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrOpenPermision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_open_permision",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrOtherProductsNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("product_name", models.CharField(max_length=50)),
                ("effected_area", models.CharField(max_length=500)),
                ("decision", models.CharField(max_length=500)),
                ("reason", models.CharField(max_length=500)),
                ("ecrno_if_s", models.CharField(max_length=30)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_other_products_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPcbLayoutNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("pcb_name", models.CharField(max_length=100)),
                ("machin_utilization", models.CharField(max_length=50)),
                ("test_points", models.CharField(max_length=100)),
                ("pncl_dr_name", models.CharField(max_length=50)),
                ("pncl_dr_att", models.TextField()),
                ("pncl_dr_ext", models.CharField(max_length=20)),
                ("data_sheet_name", models.CharField(max_length=50)),
                ("data_sheet_att", models.TextField()),
                ("data_sheet_ext", models.CharField(max_length=20)),
                ("eng_pcb_name", models.CharField(max_length=50)),
                ("eng_pcb_att", models.TextField()),
                ("eng_pcb_ext", models.CharField(max_length=20)),
                ("crct_name", models.CharField(max_length=50)),
                ("crct_att", models.TextField()),
                ("crct_ext", models.CharField(max_length=20)),
                ("reason_change", models.CharField(max_length=300)),
                ("report_sent_ntimes", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_pcb_layout_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPcbLayoutReasons",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("reason", models.CharField(max_length=1000)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("me_comments", models.CharField(max_length=500)),
                ("me_com_by", models.IntegerField()),
                ("me_time", models.CharField(max_length=25)),
            ],
            options={
                "db_table": "ecr_pcb_layout_reasons",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPlngAttach",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.IntegerField()),
                ("number_9mcode", models.CharField(db_column="9mcode", max_length=15)),
                ("filename", models.CharField(max_length=500)),
                ("filesize", models.IntegerField()),
                ("filetype", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_plng_attach",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPlngDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.IntegerField()),
                ("mat_tm_ip", models.CharField(max_length=500)),
                ("plng_note", models.CharField(max_length=500)),
                ("plng_tm_cnclsn", models.IntegerField()),
                ("plng_hod_aprl_sts", models.CharField(max_length=2)),
                ("plng_hod_aprl_yn", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("iar_cmplt_sts", models.IntegerField()),
                ("iar_cmplt_date", models.DateField()),
                ("ecr_2plng_sts", models.CharField(max_length=1)),
                ("purch_team_confirm", models.CharField(max_length=1)),
                ("purch_team_remarks", models.CharField(max_length=250)),
                ("purch_by", models.IntegerField()),
                ("purch_date", models.CharField(max_length=10)),
                ("purch_update_status", models.IntegerField()),
                ("bom_drg_type", models.CharField(max_length=100)),
                ("stagef_impl_mech", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("me2plng_date", models.CharField(max_length=18)),
                ("plng2purchase_date", models.CharField(max_length=18)),
                ("purchase2plng_date", models.CharField(max_length=18)),
                ("plng2me_date", models.CharField(max_length=18)),
                ("plng2_me_remarks", models.CharField(max_length=250)),
                ("file_name", models.CharField(max_length=50)),
                ("file_type", models.CharField(max_length=20)),
                ("file_path", models.CharField(max_length=250)),
                ("file_size", models.CharField(max_length=50)),
                ("completed", models.CharField(max_length=2)),
            ],
            options={
                "db_table": "ecr_plng_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPlngNtry",
            fields=[
                ("slno_indl", models.IntegerField()),
                ("ecr_no", models.CharField(max_length=50)),
                ("number_9mcode", models.CharField(db_column="9mcode", max_length=20)),
                ("mcode", models.CharField(max_length=50)),
                ("qty", models.FloatField()),
                ("adrdlt", models.CharField(max_length=30)),
                ("type", models.CharField(max_length=30)),
                ("createdby", models.IntegerField()),
                ("strs", models.CharField(max_length=20)),
                ("ws", models.CharField(max_length=20)),
                ("igi", models.CharField(max_length=20)),
                ("ordrs_pndng", models.CharField(max_length=20)),
                ("pcb_ass", models.CharField(max_length=20)),
                ("sub_sys", models.CharField(max_length=20)),
                ("mech_ass", models.CharField(max_length=20)),
                ("pe", models.CharField(max_length=20)),
                ("systm", models.CharField(max_length=20)),
                ("srvc", models.CharField(max_length=20)),
                ("dlvrd2fld", models.CharField(max_length=20)),
                ("vlf_stk", models.FloatField()),
                ("rmrks", models.CharField(max_length=150)),
                ("prsno", models.CharField(max_length=20)),
                ("indentedon", models.CharField(max_length=10)),
                ("xpecteddate", models.CharField(max_length=10)),
                ("ntryby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("cost", models.CharField(max_length=10)),
                ("rew", models.CharField(max_length=200)),
                ("purp", models.CharField(max_length=200)),
                ("sup", models.CharField(max_length=150)),
                ("scrap", models.CharField(max_length=150)),
                ("resp", models.CharField(max_length=100)),
                ("target", models.CharField(max_length=10)),
                ("purch_confirmed_date", models.CharField(max_length=10)),
                ("purch_remarks", models.CharField(max_length=500)),
                ("imapct_ana_needfchange", models.TextField()),
                ("impact_ana_stock_consu", models.CharField(max_length=300)),
                ("rev", models.IntegerField()),
                ("stagef_impl_mech", models.IntegerField()),
                ("wip", models.FloatField()),
                ("vendor_stock_finished", models.FloatField()),
                ("vendor_stock_wip", models.FloatField()),
                ("total_qty", models.IntegerField()),
                ("job_workorder_no", models.CharField(max_length=30)),
                ("each_price", models.FloatField()),
                ("iar_remarks", models.CharField(max_length=300)),
                ("material_transferto", models.CharField(max_length=20)),
                ("material_transferdate", models.DateField()),
            ],
            options={
                "db_table": "ecr_plng_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPpapAtt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("xl_bom_att", models.TextField()),
                ("xl_bom_name", models.CharField(max_length=50)),
                ("xl_bom_ext", models.CharField(max_length=100)),
                ("garbers_att", models.TextField()),
                ("garbers_name", models.CharField(max_length=50)),
                ("garbers_ext", models.CharField(max_length=100)),
                ("cnc_det_att", models.TextField()),
                ("cnc_det_name", models.CharField(max_length=50)),
                ("cnc_det_ext", models.CharField(max_length=100)),
                ("spec_att", models.TextField()),
                ("spec_name", models.CharField(max_length=50)),
                ("spec_ext", models.CharField(max_length=100)),
                ("panel_att", models.TextField()),
                ("panel_name", models.CharField(max_length=150)),
                ("panel_ext", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("txfr_drg_att", models.TextField()),
                ("txfr_drg_name", models.CharField(max_length=150)),
                ("txfr_drg_ext", models.CharField(max_length=50)),
                ("txfr_bom_att", models.TextField()),
                ("txfr_bom_name", models.CharField(max_length=150)),
                ("txfr_bom_ext", models.CharField(max_length=50)),
                ("ap_att", models.TextField()),
                ("ap_name", models.CharField(max_length=150)),
                ("ap_ext", models.CharField(max_length=50)),
                ("sf_att", models.TextField()),
                ("sf_name", models.CharField(max_length=150)),
                ("sf_ext", models.CharField(max_length=50)),
                ("stencil_att", models.TextField()),
                ("stencil_name", models.CharField(max_length=150)),
                ("stencil_ext", models.CharField(max_length=50)),
                ("pcb_code_att", models.TextField()),
                ("pcb_code_name", models.CharField(max_length=150)),
                ("pcb_code_ext", models.CharField(max_length=50)),
                ("again_start", models.IntegerField()),
                ("garbers_ecad_att", models.TextField()),
                ("garbers_ecad_name", models.CharField(max_length=150)),
                ("garbers_ecad_ext", models.CharField(max_length=50)),
                ("cnc_det_ecad_att", models.TextField()),
                ("cnc_det_ecad_name", models.CharField(max_length=150)),
                ("cnc_det_ecad_ext", models.CharField(max_length=50)),
                ("spec_ecad_att", models.TextField()),
                ("spec_ecad_name", models.CharField(max_length=150)),
                ("spec_ecad_ext", models.CharField(max_length=50)),
                ("panel_ecad_att", models.TextField()),
                ("panel_ecad_name", models.CharField(max_length=150)),
                ("panel_ecad_ext", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "ecr_ppap_att",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPpapAttOld",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("xl_bom_att", models.TextField()),
                ("xl_bom_name", models.CharField(max_length=50)),
                ("xl_bom_ext", models.CharField(max_length=100)),
                ("garbers_att", models.TextField()),
                ("garbers_name", models.CharField(max_length=50)),
                ("garbers_ext", models.CharField(max_length=100)),
                ("cnc_det_att", models.TextField()),
                ("cnc_det_name", models.CharField(max_length=50)),
                ("cnc_det_ext", models.CharField(max_length=100)),
                ("spec_att", models.TextField()),
                ("spec_name", models.CharField(max_length=50)),
                ("spec_ext", models.CharField(max_length=100)),
                ("panel_att", models.TextField()),
                ("panel_name", models.CharField(max_length=150)),
                ("panel_ext", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("txfr_drg_att", models.TextField()),
                ("txfr_drg_name", models.CharField(max_length=150)),
                ("txfr_drg_ext", models.CharField(max_length=50)),
                ("txfr_bom_att", models.TextField()),
                ("txfr_bom_name", models.CharField(max_length=150)),
                ("txfr_bom_ext", models.CharField(max_length=50)),
                ("ap_att", models.TextField()),
                ("ap_name", models.CharField(max_length=150)),
                ("ap_ext", models.CharField(max_length=50)),
                ("sf_att", models.TextField()),
                ("sf_name", models.CharField(max_length=150)),
                ("sf_ext", models.CharField(max_length=50)),
                ("stencil_att", models.TextField()),
                ("stencil_name", models.CharField(max_length=150)),
                ("stencil_ext", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "ecr_ppap_att_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPpapDeptsNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField(unique=True)),
                ("proc_rmrks", models.CharField(max_length=500)),
                ("proc_date", models.DateField()),
                ("proc_ntryby", models.IntegerField()),
                ("proc_final_save", models.IntegerField()),
                ("proc_sts", models.IntegerField()),
                ("plng_rmrks", models.TextField()),
                ("plng_mrs_no", models.TextField()),
                ("plng_indent_date", models.DateField()),
                ("plng_date", models.DateField()),
                ("plng_ntryby", models.IntegerField()),
                ("plng_final_save", models.IntegerField()),
                ("plng_sts", models.IntegerField()),
                ("pcb_rmrks", models.TextField()),
                ("pcb_date", models.DateField()),
                ("pcb_ntryby", models.IntegerField()),
                ("pcb_hod_acc_rej", models.IntegerField()),
                ("pcb_hod_date", models.DateField()),
                ("pcb_hod", models.IntegerField()),
                ("pcb_final_save", models.IntegerField()),
                ("pcb_sts", models.IntegerField()),
                ("tst_rmrks", models.TextField()),
                ("tst_date", models.DateField()),
                ("tst_ntryby", models.IntegerField()),
                ("tst_hod_acc_rej", models.IntegerField()),
                ("tst_hod_date", models.DateField()),
                ("tst_hod", models.IntegerField()),
                ("tst_final_save", models.IntegerField()),
                ("tst_sts", models.IntegerField()),
                ("mech_rmrks", models.TextField()),
                ("mech_date", models.DateField()),
                ("mech_ntryby", models.IntegerField()),
                ("mech_hod_acc_rej", models.IntegerField()),
                ("mech_hod_date", models.DateField()),
                ("mech_hod", models.IntegerField()),
                ("mech_final_save", models.IntegerField()),
                ("mech_sts", models.IntegerField()),
                ("pe_rmrks", models.TextField()),
                ("pe_date", models.DateField()),
                ("pe_ntryby", models.IntegerField()),
                ("pe_hod_acc_rej", models.IntegerField()),
                ("pe_hod_date", models.DateField()),
                ("pe_hod", models.IntegerField()),
                ("pe_final_save", models.IntegerField()),
                ("pe_sts", models.IntegerField()),
                ("fqc_rmrks", models.TextField()),
                ("fqc_date", models.DateField()),
                ("fqc_ntryby", models.IntegerField()),
                ("fqc_hod_acc_rej", models.IntegerField()),
                ("fqc_hod_date", models.DateField()),
                ("fqc_hod", models.IntegerField()),
                ("fqc_final_save", models.IntegerField()),
                ("fqc_sts", models.IntegerField()),
                ("me_sts", models.IntegerField()),
                ("me_ntryby", models.IntegerField()),
                ("me_date", models.DateField()),
                ("me_hod", models.IntegerField()),
                ("me_hod_date", models.DateField()),
                ("me_hod_clear", models.CharField(max_length=1)),
                ("rsn_mod", models.TextField()),
                ("maj_min", models.CharField(max_length=3)),
                ("ecad_sts", models.IntegerField()),
                ("ecad_ntryby", models.IntegerField()),
                ("ecad_date", models.DateField()),
                ("stencil_data", models.CharField(max_length=2)),
                ("aprl_sts", models.IntegerField()),
                ("aprl_rmrks", models.TextField()),
                ("pcb_code", models.CharField(max_length=11)),
                ("pcb_code_rmrks", models.CharField(max_length=1000)),
                ("plng_card_slno", models.CharField(max_length=200)),
                ("sig_rmrks", models.TextField()),
                ("sig_date", models.DateField()),
                ("sig_ntryby", models.IntegerField()),
                ("sig_hod_acc_rej", models.TextField()),
                ("sig_hod_date", models.DateField()),
                ("sig_hod", models.IntegerField()),
                ("sig_final_save", models.IntegerField()),
                ("sig_sts", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("maskinglayout", models.TextField()),
                ("toolsjigs_info", models.CharField(max_length=500)),
            ],
            options={
                "db_table": "ecr_ppap_depts_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPpapDeptsNtryOld",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("proc_rmrks", models.CharField(max_length=250)),
                ("proc_date", models.DateField()),
                ("proc_ntryby", models.IntegerField()),
                ("proc_final_save", models.IntegerField()),
                ("proc_sts", models.IntegerField()),
                ("plng_mrs_no", models.CharField(max_length=50)),
                ("plng_indent_date", models.DateField()),
                ("plng_date", models.DateField()),
                ("plng_ntryby", models.IntegerField()),
                ("plng_final_save", models.IntegerField()),
                ("plng_sts", models.IntegerField()),
                ("pcb_rmrks", models.CharField(max_length=250)),
                ("pcb_date", models.DateField()),
                ("pcb_ntryby", models.IntegerField()),
                ("pcb_hod_acc_rej", models.IntegerField()),
                ("pcb_hod_date", models.DateField()),
                ("pcb_hod", models.IntegerField()),
                ("pcb_final_save", models.IntegerField()),
                ("pcb_sts", models.IntegerField()),
                ("tst_rmrks", models.CharField(max_length=250)),
                ("tst_date", models.DateField()),
                ("tst_ntryby", models.IntegerField()),
                ("tst_hod_acc_rej", models.IntegerField()),
                ("tst_hod_date", models.DateField()),
                ("tst_hod", models.IntegerField()),
                ("tst_final_save", models.IntegerField()),
                ("tst_sts", models.IntegerField()),
                ("mech_rmrks", models.CharField(max_length=250)),
                ("mech_date", models.DateField()),
                ("mech_ntryby", models.IntegerField()),
                ("mech_hod_acc_rej", models.IntegerField()),
                ("mech_hod_date", models.DateField()),
                ("mech_hod", models.IntegerField()),
                ("mech_final_save", models.IntegerField()),
                ("mech_sts", models.IntegerField()),
                ("pe_rmrks", models.CharField(max_length=250)),
                ("pe_date", models.DateField()),
                ("pe_ntryby", models.IntegerField()),
                ("pe_hod_acc_rej", models.IntegerField()),
                ("pe_hod_date", models.DateField()),
                ("pe_hod", models.IntegerField()),
                ("pe_final_save", models.IntegerField()),
                ("pe_sts", models.IntegerField()),
                ("fqc_rmrks", models.CharField(max_length=250)),
                ("fqc_date", models.DateField()),
                ("fqc_ntryby", models.IntegerField()),
                ("fqc_hod_acc_rej", models.IntegerField()),
                ("fqc_hod_date", models.DateField()),
                ("fqc_hod", models.IntegerField()),
                ("fqc_final_save", models.IntegerField()),
                ("fqc_sts", models.IntegerField()),
                ("me_sts", models.IntegerField()),
                ("me_ntryby", models.IntegerField()),
                ("me_date", models.DateField()),
                ("me_hod", models.IntegerField()),
                ("me_hod_date", models.DateField()),
                ("me_hod_clear", models.CharField(max_length=1)),
                ("rsn_mod", models.CharField(max_length=500)),
                ("maj_min", models.CharField(max_length=3)),
                ("ecad_sts", models.IntegerField()),
                ("ecad_ntryby", models.IntegerField()),
                ("ecad_date", models.DateField()),
                ("stencil_data", models.CharField(max_length=2)),
                ("aprl_sts", models.IntegerField()),
                ("aprl_rmrks", models.CharField(max_length=250)),
                ("pcb_code", models.CharField(max_length=11)),
                ("pcb_code_rmrks", models.CharField(max_length=200)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_ppap_depts_ntry_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPpapDtsrAprl",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("dtsr_code", models.IntegerField()),
                ("update_sts", models.IntegerField()),
                ("rmrks", models.CharField(max_length=500)),
                ("aprl_sts", models.CharField(max_length=1)),
                ("date", models.DateField()),
                ("no_remarks", models.TextField()),
                ("createdby", models.IntegerField()),
                ("me_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_ppap_dtsr_aprl",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPpapDtsrAprlOld",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("dtsr_code", models.IntegerField()),
                ("update_sts", models.IntegerField()),
                ("rmrks", models.CharField(max_length=500)),
                ("aprl_sts", models.CharField(max_length=1)),
                ("date", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_ppap_dtsr_aprl_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPpapHoldNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.IntegerField()),
                ("dept", models.CharField(max_length=10)),
                ("date", models.DateField()),
                ("remarks", models.TextField()),
                ("dtsr", models.TextField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_ppap_hold_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPpapNtry",
            fields=[
                ("slno", models.IntegerField(primary_key=True, serialize=False)),
                ("pcb_name_exstng_rev", models.CharField(max_length=50)),
                ("rev_sent_ppap", models.IntegerField()),
                ("req_rsd_by", models.CharField(max_length=20)),
                ("rsn_for_layout_rev", models.TextField()),
                ("pcb_rlsd_by_ecad", models.TextField()),
                ("indent_rsd_qty", models.IntegerField()),
                ("elec_chngs_add", models.TextField()),
                ("mech_chngs_add", models.TextField()),
                ("elec_chngs_del", models.TextField()),
                ("mech_chngs_del", models.TextField()),
                ("indent_pcb_rcvd_me_date", models.DateField()),
                ("pcb_frwrd_date", models.DateField()),
                ("gpno", models.CharField(max_length=50)),
                ("date", models.CharField(max_length=10)),
                ("sent_by_whom", models.CharField(max_length=50)),
                ("sent_to_whom", models.CharField(max_length=50)),
                ("prs_no", models.IntegerField()),
                ("prs_date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_ppap_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPpapNtryOld",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("pcb_name_exstng_rev", models.CharField(max_length=50)),
                ("rev_sent_ppap", models.IntegerField()),
                ("req_rsd_by", models.CharField(max_length=20)),
                ("rsn_for_layout_rev", models.CharField(max_length=50)),
                ("pcb_rlsd_by_ecad", models.CharField(max_length=50)),
                ("indent_rsd_qty", models.IntegerField()),
                ("elec_chngs_add", models.CharField(max_length=150)),
                ("mech_chngs_add", models.CharField(max_length=150)),
                ("elec_chngs_del", models.CharField(max_length=150)),
                ("mech_chngs_del", models.CharField(max_length=150)),
                ("indent_pcb_rcvd_me_date", models.DateField()),
                ("pcb_frwrd_date", models.DateField()),
                ("gpno", models.CharField(max_length=50)),
                ("date", models.CharField(max_length=10)),
                ("sent_by_whom", models.CharField(max_length=50)),
                ("sent_to_whom", models.CharField(max_length=50)),
                ("prs_no", models.IntegerField()),
                ("prs_date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_ppap_ntry_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPpapStatusMaster",
            fields=[
                ("sts_no", models.AutoField(primary_key=True, serialize=False)),
                ("sts_name", models.CharField(max_length=15)),
                ("desc", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "ecr_ppap_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPpapSummaryNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.IntegerField()),
                ("dept", models.CharField(max_length=10)),
                ("action", models.CharField(max_length=300)),
                ("justi", models.CharField(max_length=300)),
                ("delete1", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_ppap_summary_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPrjctMgrCnclsnMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("prjct_mgr_cnclsn", models.CharField(max_length=150)),
                ("nick_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_prjct_mgr_cnclsn_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrPrMgrNtry",
            fields=[
                ("ecr_no", models.CharField(max_length=50)),
                ("slno", models.IntegerField()),
                ("dt", models.DateField()),
                ("rmrks", models.CharField(max_length=1500)),
                ("createdby", models.IntegerField()),
                ("sts", models.IntegerField()),
                ("cc", models.CharField(max_length=150)),
                ("hold", models.IntegerField()),
                ("req_add_inp", models.IntegerField()),
                ("me_remarks", models.CharField(max_length=200)),
                ("me_ntry_by", models.IntegerField()),
                ("me_timestamp", models.CharField(max_length=15)),
                ("timestamp", models.DateTimeField()),
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("sending_uniq", models.IntegerField()),
                ("rel_uniq_slno", models.IntegerField()),
                ("me_sender", models.IntegerField()),
                ("me_sender_date", models.CharField(max_length=16)),
            ],
            options={
                "db_table": "ecr_pr_mgr_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrRefAtta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("attachment", models.TextField()),
                ("attachment1", models.CharField(max_length=200)),
                ("name", models.CharField(max_length=50)),
                ("ext", models.CharField(max_length=50)),
                ("no", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_ref_atta",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrRejectedMaster",
            fields=[
                ("rej_slno", models.AutoField(primary_key=True, serialize=False)),
                ("form_name", models.CharField(max_length=50)),
                ("remarks", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "ecr_rejected_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrRootCauseMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("root_cause", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "ecr_root_cause_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrRvwCmtyOutcmMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("rvw_outcm", models.CharField(max_length=150)),
                ("frwrd2", models.CharField(max_length=150)),
                ("nick_name", models.CharField(max_length=30)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_rvw_cmty_outcm_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrSf1449DocdrTestTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("doc_dr", models.CharField(max_length=100)),
                ("field_id", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "ecr_sf1449_docdr_test_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrSf1449Ntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("no_mstr", models.IntegerField()),
                ("doc_dr_no", models.CharField(max_length=50)),
                ("nw_old_rev", models.CharField(max_length=50)),
                ("desc_chng", models.CharField(max_length=500)),
                ("doc_ctrl", models.CharField(max_length=5)),
                ("no", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("resp", models.CharField(max_length=150)),
                ("cmpltd_date", models.CharField(max_length=1500)),
                ("resp_ntry", models.IntegerField()),
                ("resp_ntry_date", models.DateField()),
                ("tooling", models.TextField()),
                ("inspection", models.CharField(max_length=200)),
                ("timestamp", models.DateTimeField()),
                ("hori_deply", models.TextField()),
                ("stage_of_imple", models.CharField(max_length=30)),
                ("date_sel", models.CharField(max_length=20)),
                ("fut_date", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "ecr_sf1449_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrSf1449Submaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=100)),
                ("subname", models.CharField(db_column="subName", max_length=100)),
                ("type", models.CharField(max_length=1)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_sf1449_subMaster",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrSmplVisNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("vis_name", models.CharField(max_length=20)),
                ("photo_name", models.CharField(max_length=50)),
                ("photo_att", models.TextField()),
                ("photo_ext", models.CharField(max_length=20)),
                ("gp_no", models.CharField(max_length=20)),
                ("date", models.DateField()),
                ("snd_by_whom", models.CharField(max_length=50)),
                ("snt_2_whom", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_smpl_vis_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrStagefImplMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("stage_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_stagef_impl_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrStatusMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sts_no", models.IntegerField()),
                ("sts_name", models.CharField(max_length=50)),
                ("sts_present", models.CharField(max_length=30)),
                ("sts_slno", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrStatusNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.IntegerField()),
                ("sts_no", models.IntegerField()),
                ("sts_slno", models.IntegerField()),
                ("nick_no", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_status_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrStdyRprtMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("stdy_rprt", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_stdy_rprt_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrStdyRprtNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_no", models.CharField(max_length=50)),
                ("slno", models.IntegerField()),
                ("rmrks", models.CharField(max_length=150)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_stdy_rprt_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrSwNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("vrsn_from", models.CharField(max_length=20)),
                ("vrsn_to", models.CharField(max_length=20)),
                ("file_size", models.CharField(max_length=50)),
                ("checksum", models.CharField(max_length=50)),
                ("file_path", models.CharField(max_length=300)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_sw_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrTargetdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("requestno", models.IntegerField(blank=True, null=True)),
                ("attachment", models.TextField(blank=True, null=True)),
                ("attachment1", models.TextField(blank=True, null=True)),
                ("repeatid", models.IntegerField(blank=True, null=True)),
                ("reviewid", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_targetdate",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrTargetdateOds",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reviewid", models.IntegerField(blank=True, null=True)),
                ("requestno", models.IntegerField(blank=True, null=True)),
                (
                    "c",
                    models.CharField(
                        blank=True, db_column="C", max_length=10, null=True
                    ),
                ),
                (
                    "d",
                    models.CharField(
                        blank=True, db_column="D", max_length=10, null=True
                    ),
                ),
                (
                    "e",
                    models.CharField(
                        blank=True, db_column="E", max_length=10, null=True
                    ),
                ),
            ],
            options={
                "db_table": "ecr_targetdate.ods",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrTargetDayno",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_main_id", models.IntegerField()),
                ("ecr_sub_id", models.IntegerField()),
                ("noofdays", models.IntegerField()),
                ("ecr_desc", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_target_dayno",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrTargetDays",
            fields=[
                ("ecr_target_id", models.AutoField(primary_key=True, serialize=False)),
                ("ecr_desc", models.TextField()),
                ("ecr_short_desc", models.CharField(max_length=200)),
                ("ecr_type", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_target_days",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrTargetDept",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecr_id", models.IntegerField()),
                ("ecr_target_id", models.IntegerField()),
                ("ecr_target_count", models.IntegerField()),
                ("days", models.CharField(max_length=150)),
                ("date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_target_dept",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrTargetMaster",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("ecr_type", models.CharField(max_length=200)),
                ("days", models.IntegerField()),
                ("createdby", models.CharField(max_length=6)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_target_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrTempUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ecrno", models.IntegerField()),
                ("date", models.DateField()),
                ("sts", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_temp_update",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrTypeMstr",
            fields=[
                ("type_no", models.AutoField(primary_key=True, serialize=False)),
                ("type_name", models.CharField(max_length=5)),
                ("type_desc", models.CharField(max_length=20)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_type_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrUsrNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("usr_req_me", models.IntegerField()),
                ("mdl", models.IntegerField()),
                ("rqstd_dt", models.DateField()),
                ("reqst_date_time", models.CharField(max_length=30)),
                ("ttl", models.CharField(max_length=1000)),
                ("doc_dr", models.CharField(max_length=100)),
                ("rev", models.CharField(max_length=100)),
                ("sys", models.CharField(max_length=100)),
                ("ndf_chng", models.CharField(max_length=5000)),
                ("descf_chng", models.CharField(max_length=5000)),
                ("prjct", models.CharField(max_length=300)),
                ("ecr_dsgn_prd_no", models.IntegerField()),
                ("deptcode", models.IntegerField()),
                ("aplcblty", models.CharField(max_length=1)),
                ("ecr_dept", models.CharField(max_length=30)),
                ("encls_cust_cor", models.CharField(max_length=1)),
                ("tyf_chng", models.CharField(max_length=1)),
                ("encls_smpl_vis", models.CharField(max_length=1)),
                ("hod_sts", models.IntegerField()),
                ("hod_rmrks", models.CharField(max_length=150)),
                ("ecr_no", models.CharField(max_length=50)),
                ("ecr_sts", models.IntegerField()),
                ("ecr_sts_rmrks", models.CharField(max_length=1500)),
                ("ecr_type", models.CharField(max_length=3)),
                ("aplcblity_mstr", models.IntegerField()),
                ("user_aplcblity_mstr", models.IntegerField()),
                ("sw_stage", models.IntegerField()),
                ("hsp_no", models.IntegerField()),
                ("ecr_temp_no", models.IntegerField()),
                ("rvw_cmty_outcum", models.IntegerField()),
                ("cmpltd_date", models.DateField()),
                ("ecr_plng", models.IntegerField()),
                ("cmpltd_by", models.IntegerField()),
                ("ecr_no_e", models.IntegerField()),
                ("ecr_no_m", models.IntegerField()),
                ("ecr_no_em", models.IntegerField()),
                ("ecr_sts_mstr_ntrs", models.CharField(max_length=50)),
                ("estimation_sts", models.IntegerField()),
                ("in_view_date", models.DateField()),
                ("in_view_closing_stmt", models.CharField(max_length=300)),
                ("in_view_fsave", models.IntegerField()),
                ("hod_aprl_date", models.DateField()),
                ("rej_slno", models.IntegerField()),
                ("rej_date", models.DateField()),
                ("rej_by", models.IntegerField()),
                ("in_view_mail_sts", models.IntegerField()),
                ("e_complete_sts", models.IntegerField()),
                ("m_complete_sts", models.IntegerField()),
                ("old_ecr_no", models.BigIntegerField()),
                ("old_superseded_no", models.BigIntegerField()),
                ("acc_rej_date", models.DateField()),
                ("acc_rej_by", models.IntegerField()),
                ("ecr_present_status", models.CharField(max_length=500)),
                ("review_status", models.CharField(max_length=10)),
                ("root_cause", models.TextField()),
                ("timestamp", models.DateTimeField()),
                ("avg_closed", models.IntegerField()),
                ("designer_approval", models.CharField(max_length=2)),
                ("hod_approval", models.CharField(max_length=2)),
                ("hod_dept", models.IntegerField()),
                ("hod_dept_sts", models.IntegerField()),
                ("hod_dept_date", models.DateField()),
                ("hod_dept_remark", models.CharField(max_length=300)),
                ("hod_dept_applicabilty", models.CharField(max_length=2)),
                ("fai_req", models.CharField(max_length=30)),
                ("fai_req_add_ips", models.CharField(max_length=10)),
                ("fai_req_remarks", models.CharField(max_length=200)),
                ("fai_sts", models.CharField(max_length=3)),
                ("fai_req_date", models.DateField()),
                ("fai_rep_date", models.DateField()),
                ("fai_att", models.CharField(max_length=100)),
                ("fai_reply", models.CharField(max_length=50)),
                ("fai_me", models.CharField(max_length=100)),
                ("fai_me_just", models.CharField(max_length=500)),
                ("ecr_usr_ucp_remks", models.TextField()),
                ("ecr_tar_type", models.IntegerField()),
                ("proposed_cmplt_date", models.DateField()),
                ("res_to_chgn", models.CharField(max_length=500)),
                ("rmks_for_delay", models.CharField(max_length=500)),
                ("ucp_cc", models.CharField(max_length=400)),
                ("com_compat", models.CharField(max_length=3)),
                ("com_compat_comm", models.CharField(max_length=500)),
                ("comple_rmsk", models.CharField(max_length=500)),
            ],
            options={
                "db_table": "ecr_usr_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrUsrNtryAplcblty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("cat", models.IntegerField()),
                ("sub_cat", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_usr_ntry_aplcblty",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrUsrUcpNtry",
            fields=[
                ("uniq", models.AutoField(primary_key=True, serialize=False)),
                ("ecr_no", models.IntegerField()),
                ("status", models.IntegerField()),
                ("createdby", models.CharField(max_length=6)),
                ("me_rmks", models.CharField(max_length=500)),
                ("me_date", models.CharField(max_length=20)),
                ("ucp_usr", models.CharField(max_length=6)),
                ("usr_rmk", models.CharField(max_length=500)),
                ("usr_date", models.CharField(max_length=20)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_usr_ucp_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Cost",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("risk_associated", models.CharField(max_length=200)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_v2_cost",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Docs",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("resp", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=100)),
                ("productcode", models.CharField(max_length=50)),
                ("shorttext", models.TextField()),
                ("uom", models.CharField(max_length=10)),
                ("revno", models.CharField(max_length=50)),
                ("type", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("created_by", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_v2_docs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2DocsBackup",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("resp", models.CharField(max_length=50)),
                ("product_code", models.CharField(max_length=100)),
                ("productcode", models.CharField(max_length=50)),
                ("shorttext", models.TextField()),
                ("uom", models.CharField(max_length=10)),
                ("revno", models.CharField(max_length=50)),
                ("type", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("created_by", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_v2_docs_backup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Hsty",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("requestno", models.IntegerField()),
                ("reviewid", models.CharField(blank=True, max_length=50, null=True)),
                ("lineitemno", models.TextField(blank=True, null=True)),
                ("status", models.IntegerField()),
                ("userstatus", models.IntegerField()),
                ("comment", models.TextField(blank=True, null=True)),
                ("associate", models.IntegerField()),
                ("repeatid", models.IntegerField()),
                ("date", models.DateTimeField()),
                ("datenew", models.CharField(blank=True, max_length=15, null=True)),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("rfd", models.TextField(blank=True, null=True)),
                ("noofdays", models.IntegerField()),
                ("associate_dept", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("type_dup", models.IntegerField()),
                ("desc_in", models.IntegerField()),
                (
                    "des_in_cmnt",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={
                "db_table": "ecr_v2_hsty",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Hsty0212",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("requestno", models.IntegerField()),
                ("reviewid", models.CharField(blank=True, max_length=50, null=True)),
                ("lineitemno", models.TextField(blank=True, null=True)),
                ("status", models.IntegerField()),
                ("userstatus", models.IntegerField()),
                ("comment", models.TextField(blank=True, null=True)),
                ("associate", models.IntegerField()),
                ("repeatid", models.IntegerField()),
                ("date", models.DateTimeField()),
                ("datenew", models.CharField(blank=True, max_length=15, null=True)),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("rfd", models.TextField(blank=True, null=True)),
                ("noofdays", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("type_dup", models.IntegerField()),
                ("desc_in", models.IntegerField()),
                (
                    "des_in_cmnt",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("date_cnt", models.DateField()),
                ("associate_dept", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_v2_hsty_02_12",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Hsty13072022",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("requestno", models.IntegerField()),
                ("reviewid", models.CharField(blank=True, max_length=50, null=True)),
                ("lineitemno", models.TextField(blank=True, null=True)),
                ("status", models.IntegerField()),
                ("userstatus", models.IntegerField()),
                ("comment", models.TextField(blank=True, null=True)),
                ("associate", models.IntegerField()),
                ("repeatid", models.IntegerField()),
                ("date", models.DateTimeField()),
                ("datenew", models.CharField(blank=True, max_length=15, null=True)),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("rfd", models.TextField(blank=True, null=True)),
                ("noofdays", models.IntegerField()),
                ("associate_dept", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("type_dup", models.IntegerField()),
                ("desc_in", models.IntegerField()),
                (
                    "des_in_cmnt",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("date1", models.DateField()),
            ],
            options={
                "db_table": "ecr_v2_hsty_13_07_2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2HstyAudit",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("requestno", models.IntegerField()),
                ("reviewid", models.CharField(blank=True, max_length=50, null=True)),
                ("lineitemno", models.TextField(blank=True, null=True)),
                ("status", models.IntegerField()),
                ("userstatus", models.IntegerField()),
                (
                    "comment",
                    models.TextField(
                        blank=True, db_collation="utf8_general_ci", null=True
                    ),
                ),
                ("associate", models.IntegerField()),
                ("repeatid", models.IntegerField()),
                ("date", models.DateTimeField()),
                ("datenew", models.CharField(blank=True, max_length=15, null=True)),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("rfd", models.TextField(blank=True, null=True)),
                ("noofdays", models.IntegerField()),
                ("associate_dept", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("type_dup", models.IntegerField()),
                ("desc_in", models.IntegerField()),
                (
                    "des_in_cmnt",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={
                "db_table": "ecr_v2_hsty_audit",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2HstyBackup",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("requestno", models.IntegerField()),
                ("reviewid", models.CharField(blank=True, max_length=50, null=True)),
                ("lineitemno", models.TextField(blank=True, null=True)),
                ("status", models.IntegerField()),
                ("userstatus", models.IntegerField()),
                ("comment", models.TextField(blank=True, null=True)),
                ("associate", models.IntegerField()),
                ("repeatid", models.IntegerField()),
                ("date", models.DateTimeField()),
                ("datenew", models.CharField(blank=True, max_length=15, null=True)),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("rfd", models.TextField(blank=True, null=True)),
                ("noofdays", models.IntegerField()),
                ("associate_dept", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("type_dup", models.IntegerField()),
                ("desc_in", models.IntegerField()),
                (
                    "des_in_cmnt",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
            ],
            options={
                "db_table": "ecr_v2_hsty_backup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Item",
            fields=[
                ("itemno", models.AutoField(primary_key=True, serialize=False)),
                ("requestno", models.IntegerField()),
                ("type", models.IntegerField()),
                ("header", models.CharField(blank=True, max_length=500, null=True)),
                ("itemcategory", models.IntegerField()),
                ("docno", models.CharField(blank=True, max_length=500, null=True)),
                ("revno", models.CharField(blank=True, max_length=10, null=True)),
                ("changedesc", models.IntegerField()),
                ("referanceno", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "details",
                    models.TextField(
                        blank=True, db_collation="utf8_general_ci", null=True
                    ),
                ),
                ("implementation", models.IntegerField()),
                ("attachment", models.TextField(blank=True, null=True)),
                ("cat_new", models.IntegerField(blank=True, null=True)),
                ("planningdate", models.DateField()),
                ("pono", models.CharField(blank=True, max_length=100, null=True)),
                ("poremarks", models.TextField(blank=True, null=True)),
                ("f1", models.CharField(blank=True, max_length=50, null=True)),
                ("f2", models.CharField(blank=True, max_length=50, null=True)),
                ("f3", models.CharField(blank=True, max_length=50, null=True)),
                ("f4", models.CharField(blank=True, max_length=50, null=True)),
                ("f5", models.CharField(blank=True, max_length=50, null=True)),
                ("f6", models.CharField(blank=True, max_length=50, null=True)),
                ("f7", models.CharField(blank=True, max_length=50, null=True)),
                ("f8", models.CharField(blank=True, max_length=50, null=True)),
                ("f9", models.CharField(blank=True, max_length=50, null=True)),
                ("f10", models.CharField(blank=True, max_length=50, null=True)),
                ("f11", models.CharField(blank=True, max_length=50, null=True)),
                ("f12", models.CharField(blank=True, max_length=50, null=True)),
                ("f13", models.CharField(blank=True, max_length=50, null=True)),
                ("f14", models.DateField()),
                ("f15", models.CharField(blank=True, max_length=20, null=True)),
                ("ivstatus", models.IntegerField()),
                ("ivdate", models.DateField()),
                ("ivdateselection", models.IntegerField()),
                ("ivdfdate", models.DateField()),
                ("ivimpact", models.IntegerField()),
                ("ivimpact1", models.IntegerField()),
                ("ivimpact2", models.IntegerField()),
                ("ivimpact3", models.IntegerField()),
                ("ivimpact4", models.IntegerField()),
                ("ivimpact5", models.IntegerField()),
                ("ivimpact6", models.IntegerField()),
                ("impact_comment", models.TextField(blank=True, null=True)),
                ("faicode", models.CharField(blank=True, max_length=50, null=True)),
                ("faitype", models.IntegerField()),
                ("faitdept", models.CharField(blank=True, max_length=100, null=True)),
                ("faiaction", models.IntegerField()),
                ("faipostedby", models.IntegerField()),
                ("faidate", models.DateField()),
                ("matcat", models.IntegerField()),
                ("bomcat", models.IntegerField()),
                ("bomdesigner", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("responsible", models.IntegerField()),
                ("activites", models.IntegerField()),
                ("linecomments", models.TextField(blank=True, null=True)),
                ("userstatus", models.IntegerField()),
                ("comment", models.TextField(blank=True, null=True)),
                ("faimestatus", models.IntegerField()),
                ("faicomments", models.TextField(blank=True, null=True)),
                ("faidesigner", models.CharField(blank=True, max_length=7, null=True)),
                ("faidesinerfeedback", models.IntegerField()),
                ("faidesinercomment", models.TextField(blank=True, null=True)),
                ("mefaidesignerforwardeddate", models.DateTimeField()),
                ("planningfeedback1", models.IntegerField()),
                ("planningfeedback2", models.IntegerField()),
                ("planningstatus", models.IntegerField()),
                ("fdate", models.DateField()),
                ("planningpono", models.IntegerField()),
                ("planningpoqty", models.DecimalField(decimal_places=2, max_digits=10)),
                ("modified", models.CharField(blank=True, max_length=11, null=True)),
                ("planningcycle", models.IntegerField()),
                ("vplanningcycle", models.IntegerField()),
                ("podetails", models.CharField(blank=True, max_length=10, null=True)),
                ("rca_status", models.IntegerField()),
                ("faisacode", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_v2_item",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Item13072022",
            fields=[
                ("itemno", models.AutoField(primary_key=True, serialize=False)),
                ("requestno", models.IntegerField()),
                ("type", models.IntegerField()),
                ("header", models.CharField(blank=True, max_length=500, null=True)),
                ("itemcategory", models.IntegerField()),
                ("docno", models.CharField(blank=True, max_length=500, null=True)),
                ("revno", models.CharField(blank=True, max_length=10, null=True)),
                ("changedesc", models.IntegerField()),
                ("referanceno", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "details",
                    models.TextField(
                        blank=True, db_collation="utf8_general_ci", null=True
                    ),
                ),
                ("implementation", models.IntegerField()),
                ("attachment", models.TextField(blank=True, null=True)),
                ("planningdate", models.DateField()),
                ("pono", models.CharField(blank=True, max_length=100, null=True)),
                ("poremarks", models.TextField(blank=True, null=True)),
                ("f1", models.CharField(blank=True, max_length=50, null=True)),
                ("f2", models.CharField(blank=True, max_length=50, null=True)),
                ("f3", models.CharField(blank=True, max_length=50, null=True)),
                ("f4", models.CharField(blank=True, max_length=50, null=True)),
                ("f5", models.CharField(blank=True, max_length=50, null=True)),
                ("f6", models.CharField(blank=True, max_length=50, null=True)),
                ("f7", models.CharField(blank=True, max_length=50, null=True)),
                ("f8", models.CharField(blank=True, max_length=50, null=True)),
                ("f9", models.CharField(blank=True, max_length=50, null=True)),
                ("f10", models.CharField(blank=True, max_length=50, null=True)),
                ("f11", models.CharField(blank=True, max_length=50, null=True)),
                ("f12", models.CharField(blank=True, max_length=50, null=True)),
                ("f13", models.CharField(blank=True, max_length=50, null=True)),
                ("f14", models.DateField()),
                ("f15", models.CharField(blank=True, max_length=20, null=True)),
                ("ivstatus", models.IntegerField()),
                ("ivdate", models.DateField()),
                ("ivdateselection", models.IntegerField()),
                ("ivdfdate", models.DateField()),
                ("ivimpact", models.IntegerField()),
                ("ivimpact1", models.IntegerField()),
                ("ivimpact2", models.IntegerField()),
                ("ivimpact3", models.IntegerField()),
                ("ivimpact4", models.IntegerField()),
                ("ivimpact5", models.IntegerField()),
                ("ivimpact6", models.IntegerField()),
                ("impact_comment", models.TextField(blank=True, null=True)),
                ("faicode", models.CharField(blank=True, max_length=50, null=True)),
                ("faitype", models.IntegerField()),
                ("faitdept", models.CharField(blank=True, max_length=100, null=True)),
                ("faiaction", models.IntegerField()),
                ("faipostedby", models.IntegerField()),
                ("faidate", models.DateField()),
                ("matcat", models.IntegerField()),
                ("bomcat", models.IntegerField()),
                ("bomdesigner", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("responsible", models.IntegerField()),
                ("activites", models.IntegerField()),
                ("linecomments", models.TextField(blank=True, null=True)),
                ("userstatus", models.IntegerField()),
                ("comment", models.TextField(blank=True, null=True)),
                ("faimestatus", models.IntegerField()),
                ("faicomments", models.TextField(blank=True, null=True)),
                ("faidesigner", models.CharField(blank=True, max_length=7, null=True)),
                ("faidesinerfeedback", models.IntegerField()),
                ("faidesinercomment", models.TextField(blank=True, null=True)),
                ("mefaidesignerforwardeddate", models.DateTimeField()),
                ("planningfeedback1", models.IntegerField()),
                ("planningfeedback2", models.IntegerField()),
                ("planningstatus", models.IntegerField()),
                ("fdate", models.DateField()),
                ("planningpono", models.IntegerField()),
                ("planningpoqty", models.DecimalField(decimal_places=2, max_digits=10)),
                ("modified", models.CharField(blank=True, max_length=11, null=True)),
                ("planningcycle", models.IntegerField()),
                ("vplanningcycle", models.IntegerField()),
                ("podetails", models.CharField(blank=True, max_length=10, null=True)),
                ("rca_status", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_v2_item_13_07_2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2ItemBackup",
            fields=[
                ("itemno", models.AutoField(primary_key=True, serialize=False)),
                ("requestno", models.IntegerField()),
                ("type", models.IntegerField()),
                ("header", models.CharField(blank=True, max_length=500, null=True)),
                ("itemcategory", models.IntegerField()),
                ("docno", models.CharField(blank=True, max_length=500, null=True)),
                ("revno", models.CharField(blank=True, max_length=10, null=True)),
                ("changedesc", models.IntegerField()),
                ("referanceno", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "details",
                    models.TextField(
                        blank=True, db_collation="utf8_general_ci", null=True
                    ),
                ),
                ("implementation", models.IntegerField()),
                ("attachment", models.TextField(blank=True, null=True)),
                ("planningdate", models.DateField()),
                ("pono", models.CharField(blank=True, max_length=100, null=True)),
                ("poremarks", models.TextField(blank=True, null=True)),
                ("f1", models.CharField(blank=True, max_length=50, null=True)),
                ("f2", models.CharField(blank=True, max_length=50, null=True)),
                ("f3", models.CharField(blank=True, max_length=50, null=True)),
                ("f4", models.CharField(blank=True, max_length=50, null=True)),
                ("f5", models.CharField(blank=True, max_length=50, null=True)),
                ("f6", models.CharField(blank=True, max_length=50, null=True)),
                ("f7", models.CharField(blank=True, max_length=50, null=True)),
                ("f8", models.CharField(blank=True, max_length=50, null=True)),
                ("f9", models.CharField(blank=True, max_length=50, null=True)),
                ("f10", models.CharField(blank=True, max_length=50, null=True)),
                ("f11", models.CharField(blank=True, max_length=50, null=True)),
                ("f12", models.CharField(blank=True, max_length=50, null=True)),
                ("f13", models.CharField(blank=True, max_length=50, null=True)),
                ("f14", models.DateField()),
                ("f15", models.CharField(blank=True, max_length=20, null=True)),
                ("ivstatus", models.IntegerField()),
                ("ivdate", models.DateField()),
                ("ivdateselection", models.IntegerField()),
                ("ivdfdate", models.DateField()),
                ("ivimpact", models.IntegerField()),
                ("ivimpact1", models.IntegerField()),
                ("ivimpact2", models.IntegerField()),
                ("ivimpact3", models.IntegerField()),
                ("ivimpact4", models.IntegerField()),
                ("ivimpact5", models.IntegerField()),
                ("ivimpact6", models.IntegerField()),
                ("impact_comment", models.TextField(blank=True, null=True)),
                ("faicode", models.CharField(blank=True, max_length=50, null=True)),
                ("faitype", models.IntegerField()),
                ("faitdept", models.CharField(blank=True, max_length=100, null=True)),
                ("faiaction", models.IntegerField()),
                ("faipostedby", models.IntegerField()),
                ("faidate", models.DateField()),
                ("matcat", models.IntegerField()),
                ("bomcat", models.IntegerField()),
                ("bomdesigner", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("responsible", models.IntegerField()),
                ("activites", models.IntegerField()),
                ("linecomments", models.TextField(blank=True, null=True)),
                ("userstatus", models.IntegerField()),
                ("comment", models.TextField(blank=True, null=True)),
                ("faimestatus", models.IntegerField()),
                ("faicomments", models.TextField(blank=True, null=True)),
                ("faidesigner", models.CharField(blank=True, max_length=7, null=True)),
                ("faidesinerfeedback", models.IntegerField()),
                ("faidesinercomment", models.TextField(blank=True, null=True)),
                ("mefaidesignerforwardeddate", models.DateTimeField()),
                ("planningfeedback1", models.IntegerField()),
                ("planningfeedback2", models.IntegerField()),
                ("planningstatus", models.IntegerField()),
                ("fdate", models.DateField()),
                ("planningpono", models.IntegerField()),
                ("planningpoqty", models.DecimalField(decimal_places=2, max_digits=10)),
                ("modified", models.CharField(blank=True, max_length=11, null=True)),
                (
                    "planningcycle",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("vplanningcycle", models.IntegerField()),
                ("podetails", models.CharField(blank=True, max_length=10, null=True)),
                ("rca_status", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_v2_item_backup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Logc",
            fields=[
                ("logicid", models.AutoField(primary_key=True, serialize=False)),
                ("logicname", models.TextField()),
                ("logicreferenceid", models.CharField(max_length=50)),
                ("logicindexid", models.IntegerField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "ecr_v2_logc",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Main",
            fields=[
                ("requestno", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.IntegerField()),
                ("ecrno", models.CharField(blank=True, max_length=30, null=True)),
                ("createdby", models.IntegerField()),
                ("dept", models.CharField(blank=True, max_length=10, null=True)),
                ("category", models.IntegerField()),
                ("subcategory", models.IntegerField()),
                ("descipline", models.IntegerField()),
                ("reason", models.TextField(blank=True, null=True)),
                ("root_cause", models.TextField(blank=True, null=True)),
                ("name_pcb", models.TextField(blank=True, null=True)),
                ("faicat", models.IntegerField()),
                ("ref_no", models.IntegerField()),
                ("doc_approval", models.CharField(blank=True, max_length=1, null=True)),
                ("fyi", models.IntegerField()),
                ("ehs", models.IntegerField()),
                ("ehsyes", models.TextField(blank=True, null=True)),
                ("ehs_type", models.IntegerField()),
                ("fyi_check", models.CharField(blank=True, max_length=1, null=True)),
                ("totdetails", models.IntegerField()),
                ("m_date", models.DateField()),
                ("attachment", models.TextField(blank=True, null=True)),
                ("applicable", models.IntegerField()),
                ("applicable_attach", models.TextField(blank=True, null=True)),
                ("field_compatibility", models.IntegerField()),
                ("field_compatibility_remarks", models.TextField()),
                ("cost_estimation", models.IntegerField()),
                ("cost_estimation_field", models.IntegerField()),
                ("status", models.IntegerField()),
                ("mee", models.IntegerField()),
                ("mem", models.IntegerField()),
                ("faiprocess", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("date", models.DateField()),
                ("targetdate", models.DateField()),
                ("closeddate", models.DateField()),
                ("supercede", models.IntegerField()),
                ("planningrefresh", models.TextField(blank=True, null=True)),
                ("hod_code", models.IntegerField()),
                ("hod_aprl_sts", models.IntegerField()),
                (
                    "hod_comment",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("delete1", models.IntegerField()),
                (
                    "delete_reason",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
            ],
            options={
                "db_table": "ecr_v2_main",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Main13072022",
            fields=[
                ("requestno", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.IntegerField()),
                ("ecrno", models.CharField(blank=True, max_length=30, null=True)),
                ("createdby", models.IntegerField()),
                ("dept", models.CharField(blank=True, max_length=10, null=True)),
                ("category", models.IntegerField()),
                ("descipline", models.IntegerField()),
                ("reason", models.TextField(blank=True, null=True)),
                ("root_cause", models.TextField(blank=True, null=True)),
                ("name_pcb", models.TextField(blank=True, null=True)),
                ("faicat", models.IntegerField()),
                ("ref_no", models.IntegerField()),
                ("doc_approval", models.CharField(blank=True, max_length=1, null=True)),
                ("fyi", models.IntegerField()),
                ("ehs", models.IntegerField()),
                ("ehsyes", models.TextField(blank=True, null=True)),
                ("ehs_type", models.IntegerField()),
                ("fyi_check", models.CharField(blank=True, max_length=1, null=True)),
                ("totdetails", models.IntegerField()),
                ("m_date", models.DateField()),
                ("attachment", models.TextField(blank=True, null=True)),
                ("applicable", models.IntegerField()),
                ("applicable_attach", models.TextField(blank=True, null=True)),
                ("field_compatibility", models.IntegerField()),
                ("field_compatibility_remarks", models.TextField()),
                ("cost_estimation", models.IntegerField()),
                ("cost_estimation_field", models.IntegerField()),
                ("status", models.IntegerField()),
                ("mee", models.IntegerField()),
                ("mem", models.IntegerField()),
                ("faiprocess", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("date", models.DateField()),
                ("targetdate", models.DateField()),
                ("closeddate", models.DateField()),
                ("supercede", models.IntegerField()),
                ("planningrefresh", models.TextField(blank=True, null=True)),
                ("hod_code", models.IntegerField()),
                ("hod_aprl_sts", models.IntegerField()),
                (
                    "hod_comment",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("delete1", models.IntegerField()),
                (
                    "delete_reason",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
            ],
            options={
                "db_table": "ecr_v2_main_13_07_2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2MainBackup",
            fields=[
                ("requestno", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.IntegerField()),
                ("ecrno", models.CharField(blank=True, max_length=30, null=True)),
                ("createdby", models.IntegerField()),
                ("dept", models.CharField(blank=True, max_length=10, null=True)),
                ("category", models.IntegerField()),
                ("descipline", models.IntegerField()),
                ("reason", models.TextField(blank=True, null=True)),
                ("root_cause", models.TextField(blank=True, null=True)),
                ("name_pcb", models.TextField(blank=True, null=True)),
                ("faicat", models.IntegerField()),
                ("ref_no", models.IntegerField()),
                ("doc_approval", models.CharField(blank=True, max_length=1, null=True)),
                ("fyi", models.IntegerField()),
                ("ehs", models.IntegerField()),
                ("ehsyes", models.TextField(blank=True, null=True)),
                ("ehs_type", models.IntegerField()),
                ("fyi_check", models.CharField(blank=True, max_length=1, null=True)),
                ("totdetails", models.IntegerField()),
                ("m_date", models.DateField()),
                ("attachment", models.TextField(blank=True, null=True)),
                ("applicable", models.IntegerField()),
                ("applicable_attach", models.TextField(blank=True, null=True)),
                ("field_compatibility", models.IntegerField()),
                ("field_compatibility_remarks", models.TextField()),
                ("cost_estimation", models.IntegerField()),
                ("cost_estimation_field", models.IntegerField()),
                ("status", models.IntegerField()),
                ("mee", models.IntegerField()),
                ("mem", models.IntegerField()),
                ("faiprocess", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("date", models.DateField()),
                ("targetdate", models.DateField()),
                ("closeddate", models.DateField()),
                ("supercede", models.IntegerField()),
                ("planningrefresh", models.TextField(blank=True, null=True)),
                ("hod_code", models.IntegerField()),
                ("hod_aprl_sts", models.IntegerField()),
                (
                    "hod_comment",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("delete1", models.IntegerField()),
                (
                    "delete_reason",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
            ],
            options={
                "db_table": "ecr_v2_main_backup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Mcat",
            fields=[
                ("main", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.IntegerField()),
                ("category", models.CharField(max_length=100)),
                ("type", models.IntegerField()),
                ("subtype", models.IntegerField()),
                ("enabled", models.IntegerField(blank=True, null=True)),
                ("shortcutname", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_v2_mcat",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Mcat17072024",
            fields=[
                ("main", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.IntegerField()),
                ("category", models.CharField(max_length=100)),
                ("type", models.IntegerField()),
                ("subtype", models.IntegerField()),
                ("enabled", models.IntegerField(blank=True, null=True)),
                ("shortcutname", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_v2_mcat_17072024",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2McatBackup",
            fields=[
                ("main", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.IntegerField()),
                ("category", models.CharField(max_length=100)),
                ("type", models.IntegerField()),
                ("subtype", models.IntegerField()),
                ("enabled", models.IntegerField()),
                ("shortcutname", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ecr_v2_mcat_backup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Pdcd",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("pname", models.CharField(max_length=50)),
                ("pchild", models.IntegerField()),
                ("pmee", models.TextField()),
                ("pmeenew", models.CharField(max_length=50)),
                ("pmem", models.TextField()),
                ("pmea", models.TextField()),
                ("training", models.CharField(max_length=50)),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "ecr_v2_pdcd",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Pdcd11",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("pname", models.CharField(max_length=50)),
                ("pchild", models.IntegerField()),
                ("pmee", models.TextField()),
                ("pmeenew", models.CharField(max_length=50)),
                ("pmem", models.TextField()),
                ("pmea", models.TextField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "ecr_v2_pdcd11",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2PdcdA",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("pname", models.CharField(max_length=50)),
                ("pchild", models.IntegerField()),
                ("pmee", models.TextField()),
                ("pmeenew", models.CharField(max_length=50)),
                ("pmem", models.TextField()),
                ("pmea", models.TextField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "ecr_v2_pdcd_a",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2PdcdBackup",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("pname", models.CharField(max_length=50)),
                ("pchild", models.IntegerField()),
                ("pmee", models.TextField()),
                ("pmeenew", models.CharField(max_length=50)),
                ("pmem", models.TextField()),
                ("pmea", models.TextField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "ecr_v2_pdcd_backup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2PdcdBackup1512",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("pname", models.CharField(max_length=50)),
                ("pchild", models.IntegerField()),
                ("pmee", models.TextField()),
                ("pmeenew", models.CharField(max_length=50)),
                ("pmem", models.TextField()),
                ("pmea", models.TextField()),
                ("training", models.CharField(max_length=50)),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "ecr_v2_pdcd_backup_15_12",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2PdcdRewamp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pid", models.IntegerField()),
                ("pmem", models.CharField(max_length=500)),
            ],
            options={
                "db_table": "ecr_v2_pdcd_rewamp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Poupdationdetails",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("requestno", models.IntegerField()),
                ("potext", models.TextField(blank=True, null=True)),
                ("attachment", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_v2_poupdationdetails",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2PriorityMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("priority", models.IntegerField(blank=True, null=True)),
                (
                    "priorityname",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("subcategoryindex", models.IntegerField(blank=True, null=True)),
                (
                    "subcategory",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_v2_priority_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Revw",
            fields=[
                ("reviewid", models.AutoField(primary_key=True, serialize=False)),
                ("requestno", models.IntegerField()),
                ("reviewtype", models.IntegerField()),
                ("type", models.IntegerField()),
                ("associate", models.IntegerField()),
                (
                    "reviewoutcomesub",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("me_study", models.TextField(blank=True, null=True)),
                ("repeatid", models.IntegerField()),
                ("cost", models.TextField(blank=True, null=True)),
                ("cost_descr", models.TextField(blank=True, null=True)),
                ("material_cost", models.TextField(blank=True, null=True)),
                ("process_time", models.TextField(blank=True, null=True)),
                ("lead_time", models.TextField(blank=True, null=True)),
                ("inventory", models.TextField(blank=True, null=True)),
                ("manufacturability", models.TextField(blank=True, null=True)),
                ("mat_avali", models.TextField(blank=True, null=True)),
                ("against_failure", models.TextField(blank=True, null=True)),
                ("smooth_chnge", models.TextField(blank=True, null=True)),
                (
                    "materialstatus",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("ptstatus", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "procumentstatus",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                (
                    "inventorystatus",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("manufastatus", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "matavailstatus",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                (
                    "failurestatus",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("smoothstatus", models.CharField(blank=True, max_length=5, null=True)),
                ("matatt", models.CharField(blank=True, max_length=100, null=True)),
                ("pttime", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "procurementtime",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "inventoryatta",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "manufactatta",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "matavailatta",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "failureattach",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("smoothatta", models.CharField(blank=True, max_length=100, null=True)),
                ("date", models.DateField()),
                ("rcomittee", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "reviewoutcome",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("holddate", models.DateField()),
                ("comments", models.TextField(blank=True, null=True)),
                ("overreviewpoints", models.TextField(blank=True, null=True)),
                (
                    "checkpoints",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("horizantal", models.IntegerField()),
                ("mmtag", models.IntegerField()),
                ("faisubprocess", models.IntegerField()),
                ("tagno", models.IntegerField()),
                ("dept_randd", models.IntegerField()),
                ("ecr_doccat", models.IntegerField()),
                ("mailtopro", models.IntegerField()),
                ("designerfeedback", models.IntegerField(blank=True, null=True)),
                ("status", models.IntegerField()),
                ("ncstatus", models.IntegerField()),
                ("ncactive", models.IntegerField()),
                ("me_nc_date", models.DateTimeField()),
                ("ncupdate", models.CharField(blank=True, max_length=1000, null=True)),
                ("faiupdate", models.CharField(blank=True, max_length=1000, null=True)),
                ("hattach", models.CharField(blank=True, max_length=1000, null=True)),
                ("informtion", models.TextField(blank=True, null=True)),
                ("checkpointsdesc", models.TextField(blank=True, null=True)),
                (
                    "impactattach",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("reqdetails", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("rfd_review", models.TextField(blank=True, null=True)),
                ("noofdays", models.IntegerField()),
                ("prdct_li", models.IntegerField()),
                (
                    "prdct_comnt",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("delete1", models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                "db_table": "ecr_v2_revw",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2RevwBackup",
            fields=[
                ("reviewid", models.AutoField(primary_key=True, serialize=False)),
                ("requestno", models.IntegerField()),
                ("reviewtype", models.IntegerField()),
                ("type", models.IntegerField()),
                ("associate", models.IntegerField()),
                ("reviewoutcomesub", models.CharField(max_length=100)),
                ("me_study", models.TextField()),
                ("cost", models.TextField()),
                ("cost_descr", models.TextField()),
                ("date", models.DateField()),
                ("rcomittee", models.CharField(max_length=1000)),
                ("reviewoutcome", models.CharField(max_length=1000)),
                ("holddate", models.DateField()),
                ("comments", models.TextField()),
                ("overreviewpoints", models.TextField()),
                ("checkpoints", models.CharField(max_length=1000)),
                ("horizantal", models.IntegerField()),
                ("mmtag", models.IntegerField()),
                ("tagno", models.IntegerField()),
                ("dept_randd", models.IntegerField()),
                ("ecr_doccat", models.IntegerField()),
                ("mailtopro", models.IntegerField()),
                ("designerfeedback", models.IntegerField(blank=True, null=True)),
                ("status", models.IntegerField()),
                ("ncstatus", models.IntegerField()),
                ("ncactive", models.IntegerField()),
                ("me_nc_date", models.DateTimeField()),
                ("ncupdate", models.CharField(blank=True, max_length=1000, null=True)),
                ("faiupdate", models.CharField(blank=True, max_length=1000, null=True)),
                ("hattach", models.CharField(blank=True, max_length=1000, null=True)),
                ("informtion", models.TextField(blank=True, null=True)),
                ("checkpointsdesc", models.TextField(blank=True, null=True)),
                (
                    "impactattach",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("reqdetails", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("rfd_review", models.TextField(blank=True, null=True)),
                ("noofdays", models.IntegerField()),
                ("prdct_li", models.IntegerField()),
                (
                    "prdct_comnt",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("delete1", models.CharField(blank=True, max_length=1, null=True)),
            ],
            options={
                "db_table": "ecr_v2_revw_backup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Update",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("requestno", models.IntegerField()),
                ("targetdate", models.DateField(blank=True, null=True)),
                ("targetdateupdation", models.DateField(blank=True, null=True)),
            ],
            options={
                "db_table": "ecr_v2_update",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EcrV2Updation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("requestno", models.IntegerField(blank=True, null=True)),
                ("targetdate", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "targetdateupdation",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("repeatid", models.IntegerField()),
                ("reviewid", models.CharField(max_length=50)),
                ("userstatus", models.IntegerField()),
            ],
            options={
                "db_table": "ecr_v2_updation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EdpDailyactivities",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("ntry_date", models.DateField()),
                ("empcode", models.CharField(blank=True, max_length=6, null=True)),
                ("descr", models.TextField(blank=True, null=True)),
                ("entry_by", models.CharField(blank=True, max_length=6, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "edp_dailyactivities",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EmpMail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField(unique=True)),
                ("empname", models.CharField(max_length=50)),
                ("mail", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "emp_mail",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Emppan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pan", models.CharField(max_length=15)),
                ("empcode", models.IntegerField()),
            ],
            options={
                "db_table": "emppan",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EmpSkillCertMaster",
            fields=[
                ("cid", models.AutoField(primary_key=True, serialize=False)),
                ("cat", models.IntegerField(blank=True, null=True)),
                ("cert_name", models.CharField(max_length=50)),
                (
                    "tcode_substr",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("createdby", models.CharField(max_length=40)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "emp_skill_cert_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EmpSkillEntry",
            fields=[
                ("main_id", models.AutoField(primary_key=True, serialize=False)),
                ("cert_id", models.IntegerField(blank=True, null=True)),
                ("entry_dt", models.DateField(blank=True, null=True)),
                ("empcode", models.IntegerField(blank=True, null=True)),
                ("skill", models.CharField(blank=True, max_length=10, null=True)),
                ("qua_work", models.CharField(blank=True, max_length=10, null=True)),
                ("qty_eval", models.IntegerField(blank=True, null=True)),
                ("prod_eval", models.CharField(blank=True, max_length=50, null=True)),
                ("tool_id", models.CharField(blank=True, max_length=50, null=True)),
                ("period", models.CharField(blank=True, max_length=10, null=True)),
                ("period_from", models.DateField(blank=True, null=True)),
                ("period_to", models.DateField(blank=True, null=True)),
                ("tota_exp", models.CharField(blank=True, max_length=10, null=True)),
                ("medha_exp", models.CharField(blank=True, max_length=50, null=True)),
                ("eop_years", models.IntegerField(blank=True, null=True)),
                ("eop_months", models.IntegerField(blank=True, null=True)),
                ("operator_id", models.IntegerField(blank=True, null=True)),
                ("expert_id", models.IntegerField(blank=True, null=True)),
                ("hod_id", models.IntegerField(blank=True, null=True)),
                ("from_dt", models.DateField(blank=True, null=True)),
                ("to_dt", models.DateField(blank=True, null=True)),
                ("effect_dt", models.DateField(blank=True, null=True)),
                (
                    "support_document",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("apr_sts", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("deptcode", models.IntegerField(blank=True, null=True)),
                ("loccode", models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                "db_table": "emp_skill_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="EmpSkillSubEntry",
            fields=[
                ("sub_id", models.AutoField(primary_key=True, serialize=False)),
                ("main_id", models.IntegerField(blank=True, null=True)),
                ("field_id", models.IntegerField(blank=True, null=True)),
                ("value", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "emp_skill_sub_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Equipments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("eqpid", models.CharField(max_length=10)),
                ("eqpname", models.CharField(max_length=100)),
                ("deptcode", models.CharField(max_length=8)),
                ("eqptype", models.CharField(max_length=20)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "equipments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ErrBand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bandname", models.CharField(max_length=100)),
                ("locality", models.CharField(max_length=300)),
                ("cost", models.DecimalField(decimal_places=0, max_digits=10)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "err_band",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ErrCodes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code_no", models.IntegerField()),
                ("description", models.CharField(max_length=250)),
                ("developer_msg", models.CharField(max_length=250)),
            ],
            options={
                "db_table": "err_codes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Errhand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1)),
                ("code", models.CharField(max_length=30)),
                ("course", models.CharField(max_length=20)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "errhand",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ErrSequence",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("increment_num", models.IntegerField()),
            ],
            options={
                "db_table": "err_sequence",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ExpertEmployee",
            fields=[
                ("exp_id", models.AutoField(primary_key=True, serialize=False)),
                ("cid", models.IntegerField(blank=True, null=True)),
                ("expert_empcode", models.IntegerField(blank=True, null=True)),
                ("sub_cat", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "expert_employee",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ExtnMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("dept", models.CharField(max_length=50)),
                ("loc", models.CharField(max_length=30)),
                ("extn", models.CharField(max_length=15)),
                ("shrt", models.CharField(max_length=15)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "extn_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FaiAttachments",
            fields=[
                ("attach_id", models.AutoField(primary_key=True, serialize=False)),
                ("fai_ref", models.IntegerField()),
                ("category", models.CharField(blank=True, max_length=50, null=True)),
                ("attachment", models.CharField(blank=True, max_length=200, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fai_attachments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FaiCaharactDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fai_ref", models.IntegerField(blank=True, null=True)),
                ("partno", models.CharField(blank=True, max_length=12, null=True)),
                ("charno", models.CharField(blank=True, max_length=150, null=True)),
                ("ref_loc", models.CharField(blank=True, max_length=150, null=True)),
                ("designator", models.CharField(blank=True, max_length=200, null=True)),
                ("require", models.CharField(blank=True, max_length=150, null=True)),
                ("results", models.CharField(blank=True, max_length=150, null=True)),
                ("tooling", models.CharField(blank=True, max_length=150, null=True)),
                ("nonconfor", models.CharField(blank=True, max_length=150, null=True)),
                ("action", models.CharField(blank=True, max_length=150, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("participants", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "fai_caharact_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FaiDetails",
            fields=[
                ("fai_ref", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("project", models.IntegerField()),
                ("partno", models.CharField(blank=True, max_length=12, null=True)),
                ("rev", models.CharField(blank=True, max_length=11, null=True)),
                ("draw", models.CharField(blank=True, max_length=50, null=True)),
                ("draw_rev", models.CharField(blank=True, max_length=11, null=True)),
                ("serial", models.CharField(blank=True, max_length=11, null=True)),
                ("type", models.CharField(blank=True, max_length=20, null=True)),
                ("full_par", models.CharField(blank=True, max_length=15, null=True)),
                ("resn_par", models.CharField(max_length=150)),
                ("supplier", models.CharField(blank=True, max_length=20, null=True)),
                ("refno", models.CharField(blank=True, max_length=30, null=True)),
                ("pono", models.CharField(blank=True, max_length=20, null=True)),
                ("add_chang", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "internal_supplier",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("organza", models.CharField(blank=True, max_length=20, null=True)),
                ("basepartno", models.CharField(blank=True, max_length=20, null=True)),
                ("rev_level", models.CharField(blank=True, max_length=10, null=True)),
                ("report", models.CharField(max_length=100)),
                ("drawing", models.CharField(max_length=100)),
                ("form1", models.CharField(blank=True, max_length=3, null=True)),
                ("form1_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("form2", models.CharField(blank=True, max_length=3, null=True)),
                ("form2_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("form3", models.CharField(blank=True, max_length=3, null=True)),
                ("form3_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("draw_ball", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "draw_ball_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("bill_of_mat", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "bill_of_mat_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("raw_mat", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "raw_mat_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("process_flow", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "process_flow_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("control_plan", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "control_plan_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("manuf_route", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "manuf_route_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("certificate", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "certificate_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("functest", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "functest_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("final_ins", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "final_ins_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("ncr_details", models.CharField(blank=True, max_length=3, null=True)),
                ("ecr_datails", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "ncr_details_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("sub_com", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "sub_com_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("trace_req", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "trace_req_comm",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("oth_doc", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "oth_doc_comm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("partcnt", models.IntegerField()),
                ("complete", models.CharField(blank=True, max_length=3, null=True)),
                ("gl", models.CharField(blank=True, max_length=6, null=True)),
                ("gl_sts", models.IntegerField()),
                ("gl_date", models.DateField()),
                ("hod", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("hod_sts", models.IntegerField()),
                ("hod_comm", models.CharField(blank=True, max_length=250, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("fairefno", models.CharField(blank=True, max_length=50, null=True)),
                ("prepared_by", models.IntegerField()),
                ("approved_by", models.IntegerField()),
                ("prod_qty", models.IntegerField()),
                ("fai_date", models.DateField()),
                ("fai_note", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "db_table": "fai_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FaiForm3Creation",
            fields=[
                ("mid", models.AutoField(primary_key=True, serialize=False)),
                ("partno", models.CharField(blank=True, max_length=12, null=True)),
                ("charno", models.CharField(blank=True, max_length=150, null=True)),
                ("designator", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "requirement",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("results", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "measurement_tool",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("nonconfor", models.CharField(blank=True, max_length=150, null=True)),
                ("action", models.CharField(blank=True, max_length=150, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fai_form3creation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FailureCategory",
            fields=[
                ("fc_no", models.AutoField(primary_key=True, serialize=False)),
                ("fc_name", models.CharField(max_length=50)),
                ("createdby", models.SmallIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "failure_category",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FailureStage",
            fields=[
                ("fs_no", models.AutoField(primary_key=True, serialize=False)),
                ("fs_name", models.CharField(max_length=50)),
                ("createdby", models.SmallIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "failure_stage",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FaiMaster",
            fields=[
                ("mid", models.AutoField(primary_key=True, serialize=False)),
                ("partno", models.CharField(blank=True, max_length=12, null=True)),
                ("project", models.IntegerField(blank=True, null=True)),
                ("rev", models.IntegerField()),
                ("draw", models.CharField(blank=True, max_length=12, null=True)),
                ("draw_rev", models.IntegerField()),
                ("serial", models.CharField(max_length=11)),
                ("type", models.CharField(blank=True, max_length=20, null=True)),
                ("full_par", models.CharField(blank=True, max_length=15, null=True)),
                ("supplier", models.CharField(blank=True, max_length=10, null=True)),
                ("refno", models.CharField(blank=True, max_length=30, null=True)),
                ("pono", models.CharField(blank=True, max_length=20, null=True)),
                ("fairefno", models.CharField(blank=True, max_length=20, null=True)),
                ("prod_qty", models.IntegerField()),
                ("fai_date", models.DateField()),
                ("material", models.CharField(blank=True, max_length=150, null=True)),
                ("specif", models.CharField(blank=True, max_length=150, null=True)),
                ("custno", models.CharField(blank=True, max_length=150, null=True)),
                ("certifno", models.CharField(blank=True, max_length=150, null=True)),
                ("funcno", models.CharField(blank=True, max_length=150, null=True)),
                ("acceptno", models.CharField(blank=True, max_length=150, null=True)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fai_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FaiNcDetails",
            fields=[
                ("nc_id", models.AutoField(primary_key=True, serialize=False)),
                ("fai_ref", models.IntegerField()),
                ("supp", models.IntegerField()),
                (
                    "supplier_selection",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("supp_email", models.CharField(blank=True, max_length=50, null=True)),
                ("supp_mobile", models.CharField(blank=True, max_length=15, null=True)),
                ("cust_name", models.CharField(blank=True, max_length=50, null=True)),
                ("cust_addr", models.CharField(blank=True, max_length=50, null=True)),
                ("cust_mob", models.CharField(blank=True, max_length=15, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                ("reason_non", models.TextField(blank=True, null=True)),
                ("measure_non", models.CharField(blank=True, max_length=50, null=True)),
                ("cust_ref", models.CharField(blank=True, max_length=50, null=True)),
                ("respon", models.CharField(blank=True, max_length=100, null=True)),
                ("due_date", models.CharField(blank=True, max_length=15, null=True)),
                ("aff_qty", models.IntegerField()),
                ("appove_by", models.CharField(blank=True, max_length=15, null=True)),
                ("req_app", models.IntegerField()),
                ("rea_rej", models.CharField(blank=True, max_length=50, null=True)),
                ("ord_yes", models.CharField(blank=True, max_length=50, null=True)),
                ("serial_yes", models.CharField(blank=True, max_length=10, null=True)),
                ("eff_qty", models.IntegerField()),
                ("trace_det", models.CharField(blank=True, max_length=50, null=True)),
                ("close_date", models.CharField(max_length=20)),
                ("createdby", models.CharField(blank=True, max_length=6, null=True)),
                ("ntry_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fai_nc_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FaiPartDetails",
            fields=[
                ("part_ref", models.AutoField(primary_key=True, serialize=False)),
                ("fai_ref", models.IntegerField()),
                ("partno", models.CharField(blank=True, max_length=50, null=True)),
                ("partserno", models.CharField(blank=True, max_length=50, null=True)),
                ("fai_rep_no", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fai_part_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FaiProcessDetails",
            fields=[
                ("proce_id", models.AutoField(primary_key=True, serialize=False)),
                ("fai_ref", models.IntegerField()),
                ("processname", models.CharField(max_length=150)),
                ("processid", models.CharField(blank=True, max_length=120, null=True)),
                (
                    "processpurpose",
                    models.CharField(blank=True, max_length=120, null=True),
                ),
                ("remarks", models.CharField(blank=True, max_length=150, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fai_process_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FaiProdDetails",
            fields=[
                ("prod_id", models.AutoField(primary_key=True, serialize=False)),
                ("fai_ref", models.IntegerField()),
                ("material", models.CharField(blank=True, max_length=150, null=True)),
                ("specif", models.CharField(blank=True, max_length=150, null=True)),
                ("supplier", models.CharField(blank=True, max_length=150, null=True)),
                ("custno", models.CharField(max_length=150)),
                ("certifno", models.CharField(max_length=150)),
                ("funcno", models.CharField(max_length=150)),
                ("acceptno", models.CharField(max_length=150)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fai_prod_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FamDe",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("email", models.CharField(max_length=100)),
                ("mobile", models.IntegerField()),
            ],
            options={
                "db_table": "fam_de",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FatNtry",
            fields=[
                ("rno", models.AutoField(primary_key=True, serialize=False)),
                ("zone", models.IntegerField()),
                ("category", models.CharField(max_length=30)),
                ("station", models.CharField(max_length=150)),
                ("observation", models.TextField()),
                ("attachment", models.CharField(max_length=150)),
                ("createdby", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("designer", models.CharField(max_length=7)),
                ("gl", models.CharField(max_length=7)),
                ("gl_comment", models.CharField(max_length=200)),
                ("gl_date", models.DateField()),
                ("status", models.CharField(max_length=10)),
                ("observation_related", models.CharField(max_length=3)),
                ("desgn_comment", models.TextField()),
                ("desgn_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fat_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FatStatusMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("deletedby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fat_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FaVisualInsp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("fai_ref", models.IntegerField()),
                ("field_id", models.IntegerField()),
                ("value", models.CharField(max_length=8)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fa_visual_insp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FaVisualInspMaster",
            fields=[
                ("field_id", models.AutoField(primary_key=True, serialize=False)),
                ("sno", models.CharField(max_length=2)),
                ("parameter", models.CharField(max_length=200)),
                ("type", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fa_visual_insp_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FfaAttachmentsNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("attachment", models.CharField(max_length=50)),
                ("size", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.DateField()),
            ],
            options={
                "db_table": "ffa_attachments_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FfaNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("frno", models.IntegerField()),
                ("ffarno_date", models.CharField(max_length=30)),
                ("ntry_date", models.DateField()),
                ("product", models.CharField(max_length=100)),
                ("production_name", models.CharField(max_length=50)),
                ("resp_name", models.CharField(max_length=50)),
                ("resp", models.CharField(max_length=100)),
                ("shed", models.CharField(max_length=150)),
                ("loco", models.CharField(max_length=150)),
                ("doc", models.CharField(max_length=30)),
                ("problem_rep", models.CharField(max_length=500)),
                ("prob_cat", models.IntegerField()),
                ("status", models.IntegerField()),
                ("mom_decision", models.CharField(max_length=300)),
                ("mon_ntryby", models.IntegerField()),
                ("mom_date", models.DateField()),
                ("analy_status", models.CharField(max_length=300)),
                ("analy_ntryby", models.IntegerField()),
                ("analy_date", models.DateField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "ffa_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FfaProbCatMaster",
            fields=[
                ("prob_cat_no", models.AutoField(primary_key=True, serialize=False)),
                ("prob_cat_name", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "ffa_prob_cat_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FfasrMatGrpMster",
            fields=[
                ("matid", models.AutoField(primary_key=True, serialize=False)),
                ("mat_grp", models.IntegerField()),
                ("mat_code", models.CharField(blank=True, max_length=15, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ffasr_mat_grp_mster",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FfasrProdIchargedata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project_no", models.IntegerField()),
                ("project", models.CharField(blank=True, max_length=100, null=True)),
                ("incharge", models.IntegerField()),
                ("category", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ffasr_prod_ichargedata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FfasrRepAssign",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("parent_reportno", models.IntegerField()),
                ("child_reportno", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("entrydate", models.CharField(max_length=15)),
            ],
            options={
                "db_table": "ffasr_rep_assign",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FfasrrootCauseMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "project_code",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("mat_grp", models.IntegerField(blank=True, null=True)),
                (
                    "root_cause_cat",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ffasrroot_cause_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Ffasrtest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reportno", models.IntegerField()),
                ("editdata", models.CharField(max_length=500)),
                ("empcode", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("frbdata_comment", models.CharField(max_length=300)),
                ("frbrepno", models.IntegerField()),
                ("assinee_code", models.CharField(max_length=300)),
                ("currentdate", models.DateField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "ffasrtest",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FfaStatusMaster",
            fields=[
                ("sts_slno", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "ffa_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FfaStatusNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("mom_decision", models.CharField(max_length=500)),
                ("mom_date", models.DateField()),
                ("analy_status", models.CharField(max_length=500)),
                ("mom_ntry_sts", models.IntegerField()),
                ("ana_ntry_sts", models.IntegerField()),
                ("date", models.DateField()),
                ("mom_mail_to", models.IntegerField()),
                ("analysis_mail_to", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ffa_status_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FontSizeMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("size", models.IntegerField()),
            ],
            options={
                "db_table": "font_size_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Form16Temp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("mail_indi", models.CharField(max_length=11)),
                ("status", models.IntegerField()),
            ],
            options={
                "db_table": "form16_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FormDescriptionMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("form", models.CharField(max_length=1)),
                ("sub_seq_slno", models.CharField(max_length=4)),
                ("desc", models.CharField(max_length=300)),
                ("p", models.IntegerField()),
                ("a", models.IntegerField()),
                ("g", models.IntegerField()),
                ("gp", models.IntegerField()),
                ("e", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=200)),
                ("period_id", models.IntegerField()),
            ],
            options={
                "db_table": "form_description_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FormMaster",
            fields=[
                (
                    "formname",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
                ("section", models.CharField(max_length=40)),
                ("admin", models.SmallIntegerField()),
                ("superuser", models.SmallIntegerField()),
                ("supervisor", models.SmallIntegerField()),
                ("user", models.SmallIntegerField()),
                ("dept", models.CharField(max_length=40)),
            ],
            options={
                "db_table": "form_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FormMasterAdmin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deptcode", models.IntegerField()),
                ("rolename", models.CharField(max_length=50)),
                ("formname", models.CharField(max_length=50)),
                ("view", models.IntegerField()),
                ("save", models.IntegerField()),
                ("update1", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "form_master_admin",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasAlphabet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "card_matcode",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                (
                    "module_matcode",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("alphabet", models.CharField(blank=True, max_length=20, null=True)),
                ("project", models.CharField(blank=True, max_length=24, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_alphabet",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasAlphabetOld",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "card_matcode",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                (
                    "module_matcode",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("alphabet", models.CharField(blank=True, max_length=20, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_alphabet_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasBomData",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("project", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "parent_matcode",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                (
                    "child_matcode",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                ("mainlevel", models.IntegerField()),
                ("componentlevel", models.IntegerField()),
                ("qty", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fracas_bom_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasBomData2",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("project", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "parent_matcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "child_matcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("slno_prof", models.CharField(blank=True, max_length=10, null=True)),
                ("qty", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fracas_bom_data2",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasBomDataTest",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("parent_matcode", models.CharField(max_length=20)),
                ("child_matcode", models.CharField(max_length=20)),
                ("qty", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_bom_data_test",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasCatMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=1000)),
                ("cat_type", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fracas_cat_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasColourMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.CharField(blank=True, max_length=6, null=True)),
                ("colorcode", models.CharField(blank=True, max_length=150, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_colour_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasCommisionSub",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("subsystemcode", models.CharField(max_length=200)),
                ("subsystemname", models.CharField(max_length=500)),
                ("subsystemslno", models.CharField(max_length=500)),
                ("parentid", models.CharField(max_length=500)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_commision_sub",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasFieldCommisioning",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("entrydate", models.DateField()),
                ("instype", models.CharField(max_length=10)),
                ("locono", models.CharField(max_length=500)),
                ("locotype", models.CharField(max_length=500)),
                ("zone", models.CharField(max_length=1000)),
                ("shed", models.CharField(max_length=1000)),
                ("project", models.CharField(max_length=500)),
                ("premarks", models.TextField()),
                ("stardate", models.DateField()),
                ("endate", models.DateField()),
                ("periodno", models.IntegerField()),
                ("periodtype", models.CharField(max_length=500)),
                ("typewarrenty", models.IntegerField()),
                ("tremarks", models.TextField()),
                ("decomm", models.DateField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_field_commisioning",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasFinalScan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mat_code", models.CharField(max_length=20)),
                ("serial_no", models.IntegerField()),
                ("department_from", models.IntegerField()),
                ("department_to", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_final_scan",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasLabelPrinting",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("orderno", models.CharField(max_length=20)),
                ("batchfrom", models.CharField(max_length=50)),
                ("batchto", models.CharField(max_length=50)),
                ("matcode", models.CharField(max_length=20)),
                ("child_matcode", models.CharField(max_length=20)),
                ("project", models.CharField(max_length=50)),
                ("dept", models.IntegerField()),
                ("status", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("remarks", models.CharField(blank=True, max_length=80, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fracas_label_printing",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasMain",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("entrydate", models.DateField()),
                ("instype", models.CharField(max_length=10)),
                ("locono", models.CharField(max_length=500)),
                ("locotype", models.CharField(max_length=500)),
                ("zone", models.CharField(max_length=1000)),
                ("shed", models.CharField(max_length=1000)),
                ("project", models.CharField(max_length=500)),
                ("premarks", models.TextField()),
                ("stardate", models.DateField()),
                ("endate", models.DateField()),
                ("periodno", models.IntegerField()),
                ("periodtype", models.CharField(max_length=500)),
                ("typewarrenty", models.IntegerField()),
                ("tremarks", models.TextField()),
                ("decomm", models.DateField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_main",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasMain30082021",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("entrydate", models.DateField()),
                ("instype", models.CharField(max_length=10)),
                ("locono", models.CharField(max_length=500)),
                ("locotype", models.CharField(max_length=500)),
                ("zone", models.CharField(max_length=1000)),
                ("shed", models.CharField(max_length=1000)),
                ("project", models.CharField(max_length=500)),
                ("premarks", models.TextField()),
                ("stardate", models.DateField()),
                ("endate", models.DateField()),
                ("periodno", models.IntegerField()),
                ("periodtype", models.CharField(max_length=500)),
                ("typewarrenty", models.IntegerField()),
                ("tremarks", models.TextField()),
                ("decomm", models.DateField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_main_30-08-2021",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasPlaningdata",
            fields=[
                ("project", models.CharField(max_length=255)),
                ("createdon", models.DateField()),
                ("orderno", models.IntegerField()),
                ("matcode", models.CharField(max_length=250)),
                ("description", models.CharField(max_length=255)),
                ("qty", models.IntegerField()),
                ("batch", models.CharField(max_length=250)),
                ("remarks", models.CharField(blank=True, max_length=255, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("slno", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "fracas_planingdata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasPlaningdata1",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("project", models.CharField(max_length=255)),
                ("createdon", models.DateField()),
                ("orderno", models.IntegerField()),
                ("matcode", models.CharField(max_length=250)),
                ("description", models.CharField(max_length=255)),
                ("qty", models.IntegerField()),
                ("batch", models.CharField(max_length=250)),
                ("remarks", models.CharField(max_length=255)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_planingdata1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasPlaningdummy",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("project", models.CharField(max_length=255)),
                ("createdon", models.DateField()),
                ("orderno", models.IntegerField()),
                ("matcode", models.CharField(max_length=250)),
                ("description", models.CharField(max_length=255)),
                ("qty", models.IntegerField()),
                ("batch", models.CharField(max_length=250)),
                ("remarks", models.CharField(max_length=255)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_planingdummy",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasPopSub",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                (
                    "subsystemcode",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "subsystemname",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "subsystemslno",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("parentid", models.CharField(blank=True, max_length=500, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_pop_sub",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasProdData",
            fields=[
                ("tag_id", models.AutoField(primary_key=True, serialize=False)),
                ("project", models.CharField(blank=True, max_length=20, null=True)),
                ("parent_code", models.CharField(blank=True, max_length=20, null=True)),
                ("child_id", models.CharField(blank=True, max_length=50, null=True)),
                ("batch", models.CharField(blank=True, max_length=20, null=True)),
                ("prod_order", models.CharField(blank=True, max_length=40, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "fracas_prod_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FracasTobeAssgn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_no", models.IntegerField()),
                ("child_mat", models.CharField(max_length=15)),
                ("child_slno", models.CharField(max_length=11)),
                ("parent_mat", models.CharField(max_length=15)),
                ("parent_slno", models.CharField(max_length=11)),
                ("department", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fracas_tobe_assgn",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FreightDetailsNtry",
            fields=[
                ("fid", models.AutoField(primary_key=True, serialize=False)),
                ("datetime", models.DateField()),
                ("vehicleno", models.CharField(blank=True, max_length=20, null=True)),
                ("noof_feet", models.CharField(blank=True, max_length=10, null=True)),
                ("goods_by", models.CharField(blank=True, max_length=50, null=True)),
                ("dc_no", models.CharField(blank=True, max_length=20, null=True)),
                ("dc_date", models.DateField()),
                ("vendorname", models.CharField(blank=True, max_length=100, null=True)),
                ("disp_vend", models.CharField(blank=True, max_length=150, null=True)),
                ("noof_items", models.CharField(blank=True, max_length=50, null=True)),
                ("freight_name", models.IntegerField(blank=True, null=True)),
                ("docket_no", models.CharField(blank=True, max_length=50, null=True)),
                ("docket_date", models.DateField()),
                ("noof_pack", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "security_empcode",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                ("driver_name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "driver_mobile",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("update_by", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("intime", models.CharField(max_length=20)),
                ("outtime", models.CharField(blank=True, max_length=20, null=True)),
                ("duration", models.CharField(blank=True, max_length=50, null=True)),
                ("delay", models.IntegerField()),
                (
                    "delay_reason",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("status", models.IntegerField()),
                ("unload_noofpers", models.IntegerField()),
                ("remarks", models.CharField(blank=True, max_length=100, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "freight_details_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Fuelreimbursesubdata",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("ref_no", models.IntegerField()),
                ("vechicleno", models.CharField(max_length=50)),
                ("bill_no", models.IntegerField()),
                ("bill_date", models.DateField()),
                ("bill_amount", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "fuelreimbursesubdata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="GlUpdateMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("gl", models.IntegerField()),
                ("mgr", models.IntegerField()),
            ],
            options={
                "db_table": "gl_update_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmApprovalMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("indicator", models.IntegerField()),
                ("role", models.CharField(max_length=10)),
                ("empcode", models.CharField(max_length=11)),
                ("type", models.CharField(max_length=5)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_approval_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmApprovalMaster2",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dept", models.CharField(max_length=20)),
                ("apprentice", models.CharField(db_column="Apprentice", max_length=10)),
                ("consultant", models.CharField(db_column="Consultant", max_length=20)),
                ("regular", models.CharField(db_column="Regular", max_length=20)),
                ("contract", models.CharField(db_column="Contract", max_length=20)),
                ("parttime", models.CharField(db_column="PartTime", max_length=20)),
                ("type", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "hcm_approval_master2",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmApprovalMaster2Old",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dept", models.CharField(max_length=20)),
                ("apprentice", models.CharField(db_column="Apprentice", max_length=10)),
                ("consultant", models.CharField(db_column="Consultant", max_length=20)),
                ("regular", models.CharField(db_column="Regular", max_length=20)),
                ("contract", models.CharField(db_column="Contract", max_length=20)),
                ("parttime", models.CharField(db_column="PartTime", max_length=20)),
                ("type", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "hcm_approval_master2_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmApprovalMasterOld",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("indicator", models.IntegerField()),
                ("role", models.CharField(max_length=10)),
                ("empcode", models.CharField(max_length=11)),
                ("type", models.CharField(max_length=5)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_approval_master_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmCandDetails",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("cid", models.IntegerField(blank=True, null=True)),
                ("res_id", models.IntegerField()),
                ("p_prefix", models.IntegerField()),
                ("p_fname", models.CharField(blank=True, max_length=40, null=True)),
                ("p_lname", models.CharField(blank=True, max_length=40, null=True)),
                ("p_gender", models.CharField(max_length=2)),
                ("p_email", models.CharField(blank=True, max_length=100, null=True)),
                ("p_dob", models.DateField(blank=True, null=True)),
                ("p_mobile", models.CharField(blank=True, max_length=30, null=True)),
                ("p_emobile", models.CharField(blank=True, max_length=16, null=True)),
                (
                    "p_birthplace",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("p_religion", models.CharField(blank=True, max_length=6, null=True)),
                ("p_bloodgroup", models.CharField(blank=True, max_length=6, null=True)),
                ("p_pancard", models.CharField(blank=True, max_length=30, null=True)),
                ("p_aadharno", models.CharField(blank=True, max_length=30, null=True)),
                ("p_aadhar_attach", models.TextField(blank=True, null=True)),
                ("p_pan_attach", models.TextField(blank=True, null=True)),
                ("per_careoff", models.CharField(blank=True, max_length=40, null=True)),
                ("per_street", models.TextField(blank=True, null=True)),
                ("per_address", models.TextField(blank=True, null=True)),
                ("per_pincode", models.CharField(blank=True, max_length=10, null=True)),
                ("per_region", models.CharField(blank=True, max_length=3, null=True)),
                ("per_city", models.CharField(blank=True, max_length=40, null=True)),
                ("per_dist", models.CharField(blank=True, max_length=40, null=True)),
                ("pre_careoff", models.CharField(blank=True, max_length=40, null=True)),
                ("pre_street", models.TextField(blank=True, null=True)),
                ("pre_address", models.TextField(blank=True, null=True)),
                ("pre_pincode", models.CharField(blank=True, max_length=10, null=True)),
                ("pre_region", models.CharField(blank=True, max_length=3, null=True)),
                ("pre_city", models.CharField(blank=True, max_length=40, null=True)),
                ("pre_dist", models.CharField(blank=True, max_length=40, null=True)),
                ("f_fname", models.CharField(blank=True, max_length=40, null=True)),
                ("f_lname", models.CharField(blank=True, max_length=40, null=True)),
                ("f_dob", models.DateField()),
                ("f_gender", models.IntegerField(blank=True, null=True)),
                ("m_fname", models.CharField(blank=True, max_length=40, null=True)),
                ("m_lname", models.CharField(blank=True, max_length=40, null=True)),
                ("m_dob", models.DateField()),
                ("m_gender", models.IntegerField()),
                (
                    "married_status",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("no_of_childrens", models.IntegerField()),
                ("marriage_date", models.DateField()),
                ("s_fname", models.CharField(blank=True, max_length=40, null=True)),
                ("s_lname", models.CharField(blank=True, max_length=40, null=True)),
                ("s_dob", models.DateField()),
                ("s_gender", models.IntegerField()),
                ("edu_est", models.IntegerField()),
                ("edu_course", models.IntegerField()),
                ("inst_name", models.CharField(max_length=80)),
                ("course_dur", models.CharField(max_length=3)),
                ("course_start_date", models.DateField()),
                ("course_end_date", models.DateField()),
                ("course_per", models.CharField(blank=True, max_length=5, null=True)),
                ("exp_status", models.CharField(blank=True, max_length=4, null=True)),
                ("sap_ref", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "hcm_cand_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmChildDetails",
            fields=[
                ("cslno", models.AutoField(primary_key=True, serialize=False)),
                ("res_id", models.IntegerField(blank=True, null=True)),
                ("cid", models.IntegerField()),
                ("child_no", models.IntegerField()),
                ("c_fname", models.CharField(blank=True, max_length=40, null=True)),
                ("c_lname", models.CharField(blank=True, max_length=40, null=True)),
                ("c_dob", models.DateField()),
                ("c_gender", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_child_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmEducEst",
            fields=[
                ("slno", models.IntegerField(primary_key=True, serialize=False)),
                ("edu_index", models.IntegerField(blank=True, null=True)),
                ("edu_name", models.CharField(blank=True, max_length=13, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "hcm_educ_est",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmEduCourse",
            fields=[
                ("slno", models.IntegerField(primary_key=True, serialize=False)),
                ("edu_course_index", models.IntegerField(blank=True, null=True)),
                ("edu_index", models.IntegerField(blank=True, null=True)),
                ("edu_name", models.CharField(blank=True, max_length=40, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "hcm_edu_course",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmExperienceDetails",
            fields=[
                ("exp_slno", models.AutoField(primary_key=True, serialize=False)),
                ("cid", models.IntegerField(blank=True, null=True)),
                ("res_id", models.IntegerField()),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("city", models.CharField(blank=True, max_length=60, null=True)),
                ("employer_name", models.CharField(max_length=60)),
                ("salary", models.CharField(blank=True, max_length=10, null=True)),
                ("experience", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "leave_reason",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_experience_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmHiring",
            fields=[
                ("res_id", models.IntegerField(primary_key=True, serialize=False)),
                ("jn_date", models.DateField()),
                ("job", models.CharField(max_length=11)),
                ("per_area", models.CharField(blank=True, max_length=10, null=True)),
                ("dept", models.IntegerField()),
                ("report_mgr", models.IntegerField()),
                ("empgroup", models.CharField(blank=True, max_length=5, null=True)),
                ("subempgroup", models.CharField(blank=True, max_length=5, null=True)),
                ("conrt_type", models.IntegerField()),
                ("work_sch", models.CharField(blank=True, max_length=10, null=True)),
                ("tms_status", models.IntegerField()),
                ("eva_gra", models.IntegerField()),
                ("work_loc", models.CharField(max_length=50)),
                ("payscale", models.CharField(blank=True, max_length=5, null=True)),
                ("payscalearea", models.CharField(blank=True, max_length=5, null=True)),
                ("paygroup", models.CharField(blank=True, max_length=2, null=True)),
                (
                    "pay_subempgroup",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                ("ot_flag", models.CharField(max_length=1)),
                ("restr", models.IntegerField()),
                ("pro_per_no", models.IntegerField()),
                ("dis_empr", models.IntegerField()),
                ("dis_empe", models.IntegerField()),
                ("task_ty", models.IntegerField()),
                ("task_dt", models.DateField()),
                ("ty_core", models.CharField(blank=True, max_length=10, null=True)),
                ("released", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_hiring",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmHiringSal",
            fields=[
                ("salid", models.AutoField(primary_key=True, serialize=False)),
                ("res_id", models.IntegerField()),
                ("conrt_type", models.IntegerField()),
                ("sal_type", models.CharField(blank=True, max_length=10, null=True)),
                ("salary", models.FloatField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_hiring_sal",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmJobEvaMaster",
            fields=[
                ("eid", models.AutoField(primary_key=True, serialize=False)),
                ("eva_gra", models.IntegerField()),
                ("descrip", models.CharField(blank=True, max_length=100, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_job_eva_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmJobMaster",
            fields=[
                ("sid", models.IntegerField(primary_key=True, serialize=False)),
                ("job_id", models.IntegerField()),
                ("designation", models.CharField(blank=True, max_length=50, null=True)),
                ("obj_abbr", models.CharField(blank=True, max_length=15, null=True)),
                ("obj_name", models.CharField(blank=True, max_length=15, null=True)),
                ("job_key", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_job_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmNomineeDetails",
            fields=[
                ("nom_slno", models.AutoField(primary_key=True, serialize=False)),
                ("res_id", models.IntegerField()),
                ("cid", models.IntegerField()),
                ("name", models.CharField(blank=True, max_length=70, null=True)),
                ("relation", models.CharField(blank=True, max_length=40, null=True)),
                ("dob", models.DateField()),
                ("esi", models.IntegerField()),
                ("pf", models.IntegerField()),
                ("sss", models.IntegerField()),
                ("gratuity", models.IntegerField()),
                ("pension", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_nominee_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmPayGrpMaster",
            fields=[
                ("mid", models.AutoField(primary_key=True, serialize=False)),
                ("grp", models.CharField(blank=True, max_length=2, null=True)),
                ("sub_grp", models.CharField(blank=True, max_length=3, null=True)),
                ("category", models.CharField(blank=True, max_length=5, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_pay_grp_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmPaySclMaster",
            fields=[
                ("mas_id", models.AutoField(primary_key=True, serialize=False)),
                ("loc_id", models.CharField(blank=True, max_length=10, null=True)),
                ("pay_scl", models.CharField(blank=True, max_length=2, null=True)),
                ("pay_scl_desc", models.CharField(max_length=30)),
                ("pay_typ", models.CharField(blank=True, max_length=2, null=True)),
                (
                    "pay_typ_desc",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_pay_scl_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmPersonReg",
            fields=[
                ("per_ref_no", models.AutoField(primary_key=True, serialize=False)),
                ("person", models.CharField(max_length=100)),
                ("father", models.CharField(max_length=100)),
                ("main_qualif", models.IntegerField()),
                ("sub_qualif", models.IntegerField()),
                ("mobile", models.CharField(max_length=20)),
                ("email", models.CharField(max_length=100)),
                ("dob", models.DateField()),
                ("experi", models.CharField(max_length=30)),
                ("keyskill", models.CharField(max_length=100)),
                ("ref", models.CharField(max_length=20)),
                ("ref_det", models.CharField(max_length=100)),
                ("resume", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("active", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "hcm_person_reg",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmRefData",
            fields=[
                ("refid", models.AutoField(primary_key=True, serialize=False)),
                ("ack", models.IntegerField()),
                ("res_id", models.IntegerField()),
                ("refassoc", models.IntegerField()),
                ("amt", models.IntegerField()),
                ("paidsts", models.IntegerField()),
                ("paidamt", models.IntegerField()),
                ("paidby", models.IntegerField()),
                ("paidon", models.DateField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_ref_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmReplaceList",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("ack", models.IntegerField()),
                ("empcode", models.IntegerField()),
                (
                    "leave_reason",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "hcm_replace_list",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmReqDetails",
            fields=[
                ("ack", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField(blank=True, null=True)),
                ("ntry_date", models.DateField()),
                (
                    "main_position",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "sub_position",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("req_dept", models.IntegerField()),
                ("noofvac", models.IntegerField()),
                ("type_vac", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "replaceass",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("reporteto", models.IntegerField()),
                ("experience", models.CharField(blank=True, max_length=20, null=True)),
                ("gender", models.CharField(blank=True, max_length=10, null=True)),
                ("station", models.CharField(blank=True, max_length=20, null=True)),
                ("out_sta", models.CharField(blank=True, max_length=50, null=True)),
                ("leadtime", models.CharField(blank=True, max_length=10, null=True)),
                ("lead_days", models.IntegerField()),
                ("nature", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "req_main_qualif",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "req_sub_qualif",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "des_main_qualif",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "des_sub_qualif",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("knowled", models.TextField(blank=True, null=True)),
                ("knowled_des", models.TextField(blank=True, null=True)),
                ("main_dut", models.TextField(blank=True, null=True)),
                ("attach", models.CharField(blank=True, max_length=100, null=True)),
                ("hod", models.IntegerField()),
                ("hod_sts", models.IntegerField()),
                ("hod_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("hod_date", models.DateField()),
                ("head", models.IntegerField()),
                ("head_sts", models.IntegerField()),
                ("head_comm", models.CharField(blank=True, max_length=200, null=True)),
                ("head_date", models.DateField()),
                ("hr", models.IntegerField()),
                ("hr_sts", models.IntegerField()),
                ("hr_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("hr_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("md", models.IntegerField()),
                ("md_sts", models.IntegerField()),
                ("md_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("md_date", models.DateField()),
                ("hr_assign_sts", models.IntegerField()),
                ("hr_assign", models.CharField(blank=True, max_length=6, null=True)),
                ("hr_assign_date", models.DateField()),
                ("hr_no_vac", models.IntegerField()),
                ("target_date", models.DateField()),
                ("closed_date", models.DateField()),
                ("refamt", models.IntegerField()),
                ("company", models.IntegerField()),
                ("selected", models.IntegerField()),
            ],
            options={
                "db_table": "hcm_req_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmReqDetails090322",
            fields=[
                ("ack", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField(blank=True, null=True)),
                ("ntry_date", models.DateField()),
                (
                    "main_position",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "sub_position",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("req_dept", models.IntegerField()),
                ("noofvac", models.IntegerField()),
                ("type_vac", models.CharField(blank=True, max_length=50, null=True)),
                ("replaceass", models.CharField(blank=True, max_length=100, null=True)),
                ("reporteto", models.IntegerField()),
                ("experience", models.CharField(blank=True, max_length=20, null=True)),
                ("gender", models.CharField(blank=True, max_length=10, null=True)),
                ("station", models.CharField(blank=True, max_length=20, null=True)),
                ("out_sta", models.CharField(blank=True, max_length=50, null=True)),
                ("leadtime", models.CharField(blank=True, max_length=10, null=True)),
                ("lead_days", models.IntegerField()),
                ("nature", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "req_main_qualif",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "req_sub_qualif",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "des_main_qualif",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "des_sub_qualif",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("knowled", models.TextField(blank=True, null=True)),
                ("knowled_des", models.TextField(blank=True, null=True)),
                ("main_dut", models.TextField(blank=True, null=True)),
                ("attach", models.CharField(blank=True, max_length=100, null=True)),
                ("hod", models.IntegerField()),
                ("hod_sts", models.IntegerField()),
                ("hod_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("hod_date", models.DateField()),
                ("head", models.IntegerField()),
                ("head_sts", models.IntegerField()),
                ("head_comm", models.CharField(blank=True, max_length=200, null=True)),
                ("head_date", models.DateField()),
                ("hr", models.IntegerField()),
                ("hr_sts", models.IntegerField()),
                ("hr_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("hr_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("md", models.IntegerField()),
                ("md_sts", models.IntegerField()),
                ("md_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("md_date", models.DateField()),
                ("hr_assign_sts", models.IntegerField()),
                ("hr_assign", models.CharField(blank=True, max_length=6, null=True)),
                ("hr_assign_date", models.DateField()),
                ("hr_no_vac", models.IntegerField()),
                ("target_date", models.DateField()),
                ("closed_date", models.DateField()),
                ("refamt", models.IntegerField()),
                ("company", models.IntegerField()),
                ("selected", models.IntegerField()),
            ],
            options={
                "db_table": "hcm_req_details_09_03_22",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmReqDetailsOld",
            fields=[
                ("ack", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField(blank=True, null=True)),
                ("ntry_date", models.DateField()),
                (
                    "main_position",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "sub_position",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("req_dept", models.IntegerField()),
                ("noofvac", models.IntegerField()),
                ("type_vac", models.CharField(blank=True, max_length=50, null=True)),
                ("replaceass", models.CharField(blank=True, max_length=100, null=True)),
                ("reporteto", models.IntegerField()),
                ("experience", models.CharField(blank=True, max_length=20, null=True)),
                ("gender", models.CharField(blank=True, max_length=10, null=True)),
                ("station", models.CharField(blank=True, max_length=20, null=True)),
                ("out_sta", models.CharField(blank=True, max_length=50, null=True)),
                ("leadtime", models.CharField(blank=True, max_length=10, null=True)),
                ("lead_days", models.IntegerField()),
                ("nature", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "req_main_qualif",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "req_sub_qualif",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "des_main_qualif",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "des_sub_qualif",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("knowled", models.TextField(blank=True, null=True)),
                ("knowled_des", models.TextField(blank=True, null=True)),
                ("main_dut", models.TextField(blank=True, null=True)),
                ("attach", models.CharField(blank=True, max_length=100, null=True)),
                ("hod", models.IntegerField()),
                ("hod_sts", models.IntegerField()),
                ("hod_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("hod_date", models.DateField()),
                ("head", models.IntegerField()),
                ("head_sts", models.IntegerField()),
                ("head_comm", models.CharField(blank=True, max_length=200, null=True)),
                ("head_date", models.DateField()),
                ("hr", models.IntegerField()),
                ("hr_sts", models.IntegerField()),
                ("hr_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("hr_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("md", models.IntegerField()),
                ("md_sts", models.IntegerField()),
                ("md_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("md_date", models.DateField()),
                ("hr_assign_sts", models.IntegerField()),
                ("hr_assign", models.CharField(blank=True, max_length=6, null=True)),
                ("hr_assign_date", models.DateField()),
                ("hr_no_vac", models.IntegerField()),
                ("target_date", models.DateField()),
                ("closed_date", models.DateField()),
                ("refamt", models.IntegerField()),
                ("company", models.IntegerField()),
                ("selected", models.IntegerField()),
            ],
            options={
                "db_table": "hcm_req_details_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmReqRes",
            fields=[
                ("res_id", models.AutoField(primary_key=True, serialize=False)),
                ("ack", models.IntegerField()),
                ("per_ref_no", models.IntegerField()),
                ("pname", models.CharField(blank=True, max_length=50, null=True)),
                ("mobile", models.CharField(blank=True, max_length=11, null=True)),
                ("email", models.CharField(blank=True, max_length=50, null=True)),
                ("aid", models.IntegerField()),
                ("respons", models.IntegerField()),
                ("comm", models.CharField(blank=True, max_length=100, null=True)),
                ("cid", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("ntry_date", models.DateField()),
                ("status", models.IntegerField()),
                ("approval_status", models.IntegerField()),
                ("res_date", models.DateField()),
                ("res_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("others", models.CharField(blank=True, max_length=600, null=True)),
                ("hid", models.IntegerField()),
                ("attach_type", models.CharField(blank=True, max_length=20, null=True)),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("complete", models.CharField(blank=True, max_length=100, null=True)),
                ("offer", models.CharField(blank=True, max_length=100, null=True)),
                ("salary", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "noticeperiod",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                ("negotiation", models.CharField(blank=True, max_length=11, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("approvaldt", models.DateField()),
                ("joineddt", models.DateField()),
                ("confirm_cand", models.IntegerField(blank=True, null=True)),
                ("hod_dept", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "hcm_req_res",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmReqResOld",
            fields=[
                ("res_id", models.AutoField(primary_key=True, serialize=False)),
                ("ack", models.IntegerField()),
                ("per_ref_no", models.IntegerField()),
                ("pname", models.CharField(blank=True, max_length=28, null=True)),
                ("mobile", models.CharField(blank=True, max_length=11, null=True)),
                ("email", models.CharField(blank=True, max_length=50, null=True)),
                ("aid", models.IntegerField()),
                ("respons", models.IntegerField()),
                ("comm", models.CharField(blank=True, max_length=100, null=True)),
                ("cid", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("ntry_date", models.DateField()),
                ("status", models.IntegerField()),
                ("approval_status", models.IntegerField()),
                ("res_date", models.DateField()),
                ("res_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("others", models.CharField(blank=True, max_length=600, null=True)),
                ("hid", models.IntegerField()),
                ("attach_type", models.CharField(blank=True, max_length=20, null=True)),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("complete", models.CharField(blank=True, max_length=100, null=True)),
                ("offer", models.CharField(blank=True, max_length=100, null=True)),
                ("salary", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "noticeperiod",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                ("negotiation", models.CharField(blank=True, max_length=11, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "hcm_req_res_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmResHistory",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("res_id", models.IntegerField()),
                ("ack", models.IntegerField()),
                ("per_ref_no", models.IntegerField()),
                ("aid", models.IntegerField()),
                ("respons", models.IntegerField()),
                ("comm", models.CharField(blank=True, max_length=100, null=True)),
                ("cid", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("status", models.IntegerField()),
                ("approval_status", models.IntegerField()),
                ("res_date", models.DateField()),
                ("res_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("others", models.CharField(blank=True, max_length=600, null=True)),
                ("attach_type", models.CharField(blank=True, max_length=20, null=True)),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("complete", models.CharField(blank=True, max_length=100, null=True)),
                ("offer", models.CharField(blank=True, max_length=100, null=True)),
                ("salary", models.CharField(blank=True, max_length=100, null=True)),
                ("negotiation", models.CharField(blank=True, max_length=11, null=True)),
                (
                    "noticeperiod",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                ("type", models.IntegerField()),
                ("attachments", models.CharField(blank=True, max_length=30, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "hcm_res_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmResHistoryOl",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("res_id", models.IntegerField()),
                ("ack", models.IntegerField()),
                ("per_ref_no", models.IntegerField()),
                ("aid", models.IntegerField()),
                ("respons", models.IntegerField()),
                ("comm", models.CharField(blank=True, max_length=100, null=True)),
                ("cid", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("status", models.IntegerField()),
                ("approval_status", models.IntegerField()),
                ("res_date", models.DateField()),
                ("res_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("others", models.CharField(blank=True, max_length=600, null=True)),
                ("attach_type", models.CharField(blank=True, max_length=20, null=True)),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("complete", models.CharField(blank=True, max_length=100, null=True)),
                ("offer", models.CharField(blank=True, max_length=100, null=True)),
                ("salary", models.CharField(blank=True, max_length=100, null=True)),
                ("negotiation", models.CharField(blank=True, max_length=11, null=True)),
                (
                    "noticeperiod",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                ("type", models.IntegerField()),
                ("attachments", models.CharField(blank=True, max_length=30, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "hcm_res_history_ol",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HcmSalMaster",
            fields=[
                ("sa_id", models.AutoField(primary_key=True, serialize=False)),
                ("type", models.CharField(blank=True, max_length=5, null=True)),
                ("level", models.CharField(blank=True, max_length=1, null=True)),
                ("catgy", models.CharField(max_length=11)),
                ("amt", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hcm_sal_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HolidaysMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("name", models.CharField(max_length=50)),
                ("day", models.CharField(max_length=50)),
                ("date", models.CharField(max_length=50)),
                ("year", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestampp", models.DateTimeField()),
            ],
            options={
                "db_table": "holidays_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HousePropertyIncomeTax",
            fields=[
                ("house_id", models.AutoField(primary_key=True, serialize=False)),
                ("main_id", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("house_count", models.IntegerField()),
                ("housing_type1", models.IntegerField()),
                ("house_interest1", models.IntegerField()),
                ("bank_name_1", models.CharField(max_length=50)),
                ("bank_pan_1", models.CharField(max_length=50)),
                ("rent_per_month1", models.IntegerField()),
                ("repair1", models.IntegerField()),
                ("income_loss1", models.IntegerField()),
                ("interest_80ee1", models.IntegerField()),
                ("interest_80eea1", models.IntegerField()),
                ("interest_us241", models.IntegerField()),
                ("property_owner", models.CharField(max_length=300)),
                ("property_address", models.CharField(max_length=1000)),
                ("house_reg_date", models.DateField()),
                ("prop_value", models.IntegerField()),
                ("cons_compdt", models.DateField()),
                ("loan_sancdt", models.DateField()),
                ("loan_amnt", models.IntegerField()),
                ("monthly_emi", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "house_property_income_tax",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HrAdhocMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.IntegerField()),
                ("issue_qty", models.FloatField()),
                ("remarks", models.CharField(max_length=500)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hr_adhoc_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HrColorMaster",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("color_code", models.CharField(max_length=20)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.IntegerField()),
            ],
            options={
                "db_table": "hr_color_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HrFootwearMaster",
            fields=[
                (
                    "uniq_slno_footwaer",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("type", models.CharField(max_length=20)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hr_footwear_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HrInventoryAdaptNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("uniq_slno_matnr", models.IntegerField()),
                ("qty", models.IntegerField()),
                ("months", models.IntegerField()),
                ("issue_qty", models.IntegerField()),
                ("issue_date", models.DateField()),
                ("issue_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hr_inventory_adapt_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HrInventoryMaster",
            fields=[
                (
                    "uniq_slno_matnr",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("matnr", models.IntegerField()),
                ("desc", models.CharField(max_length=200)),
                ("uom", models.CharField(max_length=11)),
                ("size", models.CharField(max_length=11)),
                ("color_code", models.IntegerField()),
                ("minqty", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hr_inventory_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HrLastUpdateMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("matnr", models.IntegerField()),
                ("last_issue_date", models.DateField()),
                ("last_issue_qty", models.FloatField()),
                ("createdby", models.IntegerField()),
                ("due_date", models.DateField()),
                ("due_sts", models.CharField(max_length=1)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hr_last_update_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HrRecitesMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.IntegerField()),
                ("recite_qty", models.FloatField()),
                ("createdby", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hr_recites_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HrStockMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.IntegerField(unique=True)),
                ("stock", models.FloatField()),
                ("minqty", models.IntegerField()),
            ],
            options={
                "db_table": "hr_stock_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HrUomMaster",
            fields=[
                ("uom_slno", models.AutoField(primary_key=True, serialize=False)),
                ("uom_name", models.CharField(max_length=20)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hr_uom_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="HrWeatherMaster",
            fields=[
                (
                    "uniq_slno_weather",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("type", models.CharField(max_length=20)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "hr_weather_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiElecAtta",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("filename", models.TextField(blank=True, null=True)),
                ("file_type", models.CharField(max_length=200)),
                ("file_size", models.CharField(max_length=11)),
                ("file_ext", models.CharField(max_length=200)),
                ("type", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "igi_elec_atta",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiElecEntry",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("type", models.IntegerField()),
                ("product_code", models.IntegerField()),
                ("doc_no", models.CharField(blank=True, max_length=500, null=True)),
                ("pos_date", models.DateField()),
                ("po_no", models.CharField(blank=True, max_length=25, null=True)),
                ("item_code", models.CharField(blank=True, max_length=500, null=True)),
                ("part_no", models.CharField(blank=True, max_length=500, null=True)),
                ("make", models.CharField(blank=True, max_length=500, null=True)),
                ("vendor", models.CharField(blank=True, max_length=500, null=True)),
                ("type_rej", models.IntegerField()),
                ("invoice", models.CharField(blank=True, max_length=500, null=True)),
                ("inv_date", models.DateField()),
                ("inv_qty", models.CharField(blank=True, max_length=200, null=True)),
                ("recd_qty", models.CharField(blank=True, max_length=200, null=True)),
                ("rej_qty", models.CharField(blank=True, max_length=200, null=True)),
                ("dept", models.IntegerField()),
                ("method", models.TextField(blank=True, null=True)),
                (
                    "problem_exstr",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("reason_rej", models.TextField(blank=True, null=True)),
                ("slno", models.CharField(blank=True, max_length=500, null=True)),
                ("vend_batch", models.CharField(blank=True, max_length=500, null=True)),
                ("isp_pro", models.CharField(blank=True, max_length=500, null=True)),
                ("cost", models.CharField(blank=True, max_length=500, null=True)),
                ("failure_remarks", models.TextField(blank=True, null=True)),
                ("igi_remrks", models.TextField(blank=True, null=True)),
                ("track_sts", models.IntegerField(blank=True, null=True)),
                ("sud_sts", models.IntegerField()),
                ("sap_stock", models.IntegerField()),
                ("comnts", models.CharField(blank=True, max_length=500, null=True)),
                ("entry_date", models.DateField()),
                ("service_no", models.IntegerField()),
                ("parts_slno", models.IntegerField()),
                ("rewno", models.CharField(blank=True, max_length=100, null=True)),
                ("ven_to_date", models.DateField()),
                ("rec_date", models.DateField()),
                ("mail1", models.CharField(blank=True, max_length=100, null=True)),
                ("mail2", models.CharField(blank=True, max_length=100, null=True)),
                ("mail3", models.CharField(blank=True, max_length=100, null=True)),
                ("raised_dept", models.IntegerField()),
                ("supp_analysis", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("created_gl", models.IntegerField()),
                ("createdby_dept", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("reworkqty", models.IntegerField()),
                ("uom", models.CharField(blank=True, max_length=10, null=True)),
                ("to", models.CharField(blank=True, max_length=100, null=True)),
                ("cc", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "warrenty_type",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("desc", models.CharField(blank=True, max_length=100, null=True)),
                ("analysis", models.IntegerField()),
                ("cmnts", models.CharField(blank=True, max_length=300, null=True)),
                ("moved_by", models.CharField(blank=True, max_length=10, null=True)),
                ("excl_sts", models.IntegerField()),
                ("currency", models.CharField(blank=True, max_length=20, null=True)),
                ("pg_group", models.CharField(blank=True, max_length=20, null=True)),
                ("pay_terms", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "industry_type",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
            options={
                "db_table": "igi_elec_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiElecEntry2602",
            fields=[
                ("uniq_slno", models.IntegerField(primary_key=True, serialize=False)),
                ("type", models.IntegerField()),
                ("product_code", models.IntegerField()),
                ("doc_no", models.CharField(max_length=500)),
                ("pos_date", models.DateField()),
                ("po_no", models.CharField(max_length=25)),
                ("item_code", models.CharField(max_length=500)),
                ("part_no", models.CharField(max_length=500)),
                ("make", models.CharField(max_length=500)),
                ("vendor", models.CharField(max_length=500)),
                ("type_rej", models.IntegerField()),
                ("invoice", models.CharField(max_length=500)),
                ("inv_date", models.DateField()),
                ("inv_qty", models.CharField(max_length=200)),
                ("recd_qty", models.CharField(max_length=200)),
                ("rej_qty", models.CharField(max_length=200)),
                ("dept", models.IntegerField()),
                ("method", models.TextField()),
                ("problem_exstr", models.CharField(max_length=500)),
                ("reason_rej", models.TextField()),
                ("slno", models.CharField(max_length=500)),
                ("vend_batch", models.CharField(max_length=500)),
                ("isp_pro", models.CharField(max_length=500)),
                ("cost", models.CharField(max_length=500)),
                ("failure_remarks", models.TextField()),
                ("igi_remrks", models.TextField()),
                ("track_sts", models.IntegerField()),
                ("sud_sts", models.IntegerField()),
                ("entry_date", models.DateField()),
                ("service_no", models.IntegerField()),
                ("parts_slno", models.IntegerField()),
                ("rewno", models.CharField(max_length=100)),
                ("ven_to_date", models.DateField()),
                ("rec_date", models.DateField()),
                ("mail1", models.CharField(max_length=100)),
                ("mail2", models.CharField(max_length=100)),
                ("mail3", models.CharField(max_length=100)),
                ("raised_dept", models.IntegerField()),
                ("supp_analysis", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("reworkqty", models.IntegerField()),
                ("uom", models.CharField(max_length=10)),
                ("to", models.CharField(max_length=40)),
                ("cc", models.CharField(max_length=40)),
                ("warrenty_type", models.CharField(max_length=10)),
                ("desc", models.CharField(max_length=100)),
                ("analysis", models.IntegerField()),
                ("cmnts", models.CharField(max_length=300)),
                ("excl_sts", models.IntegerField()),
            ],
            options={
                "db_table": "igi_elec_entry_26_02",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiElecEntry29122022",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("type", models.IntegerField()),
                ("product_code", models.IntegerField()),
                ("doc_no", models.CharField(blank=True, max_length=500, null=True)),
                ("pos_date", models.DateField()),
                ("po_no", models.CharField(blank=True, max_length=25, null=True)),
                ("item_code", models.CharField(blank=True, max_length=500, null=True)),
                ("part_no", models.CharField(blank=True, max_length=500, null=True)),
                ("make", models.CharField(blank=True, max_length=500, null=True)),
                ("vendor", models.CharField(blank=True, max_length=500, null=True)),
                ("type_rej", models.IntegerField()),
                ("invoice", models.CharField(blank=True, max_length=500, null=True)),
                ("inv_date", models.DateField()),
                ("inv_qty", models.CharField(blank=True, max_length=200, null=True)),
                ("recd_qty", models.CharField(blank=True, max_length=200, null=True)),
                ("rej_qty", models.CharField(blank=True, max_length=200, null=True)),
                ("dept", models.IntegerField()),
                ("method", models.TextField(blank=True, null=True)),
                (
                    "problem_exstr",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("reason_rej", models.TextField(blank=True, null=True)),
                ("slno", models.CharField(blank=True, max_length=500, null=True)),
                ("vend_batch", models.CharField(blank=True, max_length=500, null=True)),
                ("isp_pro", models.CharField(blank=True, max_length=500, null=True)),
                ("cost", models.CharField(blank=True, max_length=500, null=True)),
                ("failure_remarks", models.TextField(blank=True, null=True)),
                ("igi_remrks", models.TextField(blank=True, null=True)),
                ("track_sts", models.IntegerField()),
                ("sud_sts", models.IntegerField()),
                ("sap_stock", models.IntegerField()),
                ("comnts", models.CharField(blank=True, max_length=500, null=True)),
                ("entry_date", models.DateField()),
                ("service_no", models.IntegerField()),
                ("parts_slno", models.IntegerField()),
                ("rewno", models.CharField(blank=True, max_length=100, null=True)),
                ("ven_to_date", models.DateField()),
                ("rec_date", models.DateField()),
                ("mail1", models.CharField(blank=True, max_length=100, null=True)),
                ("mail2", models.CharField(blank=True, max_length=100, null=True)),
                ("mail3", models.CharField(blank=True, max_length=100, null=True)),
                ("raised_dept", models.IntegerField()),
                ("supp_analysis", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("created_gl", models.IntegerField()),
                ("createdby_dept", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("reworkqty", models.IntegerField()),
                ("uom", models.CharField(blank=True, max_length=10, null=True)),
                ("to", models.CharField(blank=True, max_length=100, null=True)),
                ("cc", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "warrenty_type",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("desc", models.CharField(blank=True, max_length=100, null=True)),
                ("analysis", models.IntegerField()),
                ("cmnts", models.CharField(blank=True, max_length=300, null=True)),
                ("moved_by", models.CharField(blank=True, max_length=10, null=True)),
                ("excl_sts", models.IntegerField()),
            ],
            options={
                "db_table": "igi_elec_entry_29_12_2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiElecEntryOld",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("type", models.IntegerField()),
                ("product_code", models.IntegerField()),
                ("doc_no", models.CharField(blank=True, max_length=500, null=True)),
                ("pos_date", models.DateField()),
                ("po_no", models.CharField(blank=True, max_length=25, null=True)),
                ("item_code", models.CharField(blank=True, max_length=500, null=True)),
                ("part_no", models.CharField(blank=True, max_length=500, null=True)),
                ("make", models.CharField(blank=True, max_length=500, null=True)),
                ("vendor", models.CharField(blank=True, max_length=500, null=True)),
                ("type_rej", models.IntegerField()),
                ("invoice", models.CharField(blank=True, max_length=500, null=True)),
                ("inv_date", models.DateField()),
                ("inv_qty", models.CharField(blank=True, max_length=200, null=True)),
                ("recd_qty", models.CharField(blank=True, max_length=200, null=True)),
                ("rej_qty", models.CharField(blank=True, max_length=200, null=True)),
                ("dept", models.IntegerField()),
                ("method", models.TextField(blank=True, null=True)),
                (
                    "problem_exstr",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("reason_rej", models.TextField(blank=True, null=True)),
                ("slno", models.CharField(blank=True, max_length=500, null=True)),
                ("vend_batch", models.CharField(blank=True, max_length=500, null=True)),
                ("isp_pro", models.CharField(blank=True, max_length=500, null=True)),
                ("cost", models.CharField(blank=True, max_length=500, null=True)),
                ("failure_remarks", models.TextField(blank=True, null=True)),
                ("igi_remrks", models.TextField(blank=True, null=True)),
                ("track_sts", models.IntegerField()),
                ("sud_sts", models.IntegerField()),
                ("entry_date", models.DateField()),
                ("service_no", models.IntegerField()),
                ("parts_slno", models.IntegerField()),
                ("rewno", models.CharField(blank=True, max_length=100, null=True)),
                ("ven_to_date", models.DateField()),
                ("rec_date", models.DateField()),
                ("mail1", models.CharField(blank=True, max_length=100, null=True)),
                ("mail2", models.CharField(blank=True, max_length=100, null=True)),
                ("mail3", models.CharField(blank=True, max_length=100, null=True)),
                ("raised_dept", models.IntegerField()),
                ("supp_analysis", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("created_gl", models.IntegerField()),
                ("createdby_dept", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("reworkqty", models.IntegerField()),
                ("uom", models.CharField(blank=True, max_length=10, null=True)),
                ("to", models.CharField(blank=True, max_length=40, null=True)),
                ("cc", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "warrenty_type",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("desc", models.CharField(blank=True, max_length=100, null=True)),
                ("analysis", models.IntegerField()),
                ("cmnts", models.CharField(blank=True, max_length=300, null=True)),
                ("moved_by", models.CharField(blank=True, max_length=10, null=True)),
                ("excl_sts", models.IntegerField()),
            ],
            options={
                "db_table": "igi_elec_entry_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiElecHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("track_sts", models.CharField(max_length=5)),
                ("failure_remarks", models.CharField(max_length=500)),
                ("igi_remrks", models.TextField()),
                ("assocaite", models.CharField(max_length=50)),
                ("delete1", models.CharField(max_length=1)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "igi_elec_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiElecNonwarrenty",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("report_no", models.IntegerField()),
                ("routedate", models.DateField()),
                ("mat_code", models.CharField(max_length=50)),
                ("qty", models.IntegerField()),
                ("reason_rej", models.TextField(blank=True, null=True)),
                ("mat_slno", models.IntegerField()),
                ("cost", models.CharField(max_length=200)),
                ("scrap_type", models.IntegerField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("status", models.IntegerField()),
                ("closedate", models.DateField()),
                ("timestamp", models.IntegerField()),
                ("craeted_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "igi_elec_nonwarrenty",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiElecStsmaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status_name", models.CharField(max_length=200)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=20)),
                ("igi_type", models.CharField(max_length=30)),
                ("status", models.IntegerField()),
            ],
            options={
                "db_table": "igi_elec_stsmaster",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiExcessNtry",
            fields=[
                ("excess_id", models.AutoField(primary_key=True, serialize=False)),
                ("date", models.DateField()),
                ("returned_by", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "igi_excess_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiExcessNtryLineitems",
            fields=[
                ("lineitem_id", models.AutoField(primary_key=True, serialize=False)),
                ("project", models.CharField(max_length=100)),
                ("material_code", models.CharField(max_length=20)),
                ("excess_id", models.IntegerField()),
                ("part_no", models.CharField(max_length=50)),
                ("make", models.CharField(max_length=100)),
                ("qty", models.IntegerField()),
                ("stock_availability", models.IntegerField()),
                ("reason", models.TextField()),
                ("returned_dept", models.IntegerField()),
                ("date", models.DateField()),
                ("deprtment", models.IntegerField()),
                (
                    "approved_rejected_by",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("status", models.IntegerField()),
                ("approved_to_be", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("accepted_qty", models.CharField(max_length=100)),
                ("rejected_qty", models.IntegerField()),
                ("rejected_sts", models.IntegerField()),
                ("batch_code", models.CharField(max_length=100)),
                ("inspected_by", models.CharField(max_length=20)),
                ("igi_action_by", models.CharField(max_length=20)),
                ("igi_remarks", models.TextField(blank=True, null=True)),
                ("igi_accepted_date", models.DateField()),
                ("updatedby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "igi_excess_ntry_lineitems",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiExcessNtryLineitems55",
            fields=[
                ("lineitem_id", models.AutoField(primary_key=True, serialize=False)),
                ("project", models.CharField(max_length=100)),
                ("material_code", models.CharField(max_length=20)),
                ("excess_id", models.IntegerField()),
                ("part_no", models.CharField(max_length=50)),
                ("make", models.CharField(max_length=100)),
                ("qty", models.IntegerField()),
                ("stock_availability", models.IntegerField()),
                ("reason", models.TextField()),
                ("returned_dept", models.IntegerField()),
                ("date", models.DateField()),
                ("approved_rejected_by", models.CharField(max_length=20)),
                ("status", models.IntegerField()),
                ("approved_to_be", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("accepted_qty", models.CharField(max_length=100)),
                ("rejected_qty", models.IntegerField()),
                ("rejected_sts", models.IntegerField()),
                ("batch_code", models.CharField(max_length=100)),
                ("inspected_by", models.CharField(max_length=20)),
                ("igi_action_by", models.CharField(max_length=20)),
                ("igi_remarks", models.TextField()),
                ("igi_accepted_date", models.DateField()),
                ("updatedby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "igi_excess_ntry_lineitems55",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("igi_id", models.IntegerField()),
                ("status", models.CharField(max_length=5)),
                ("comments", models.CharField(max_length=500)),
                ("assocaite", models.CharField(max_length=70)),
                ("type", models.CharField(max_length=4)),
                ("active", models.CharField(max_length=1)),
                ("delete1", models.CharField(max_length=1)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "igi_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgimDetailedInspection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("materialcode", models.CharField(max_length=20)),
                ("no_of_dimensions", models.IntegerField(blank=True, null=True)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "igim_detailed_inspection",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgimDetailedInspectionDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("materialcode", models.BigIntegerField(blank=True, null=True)),
                ("sno", models.IntegerField(blank=True, null=True)),
                ("dimension", models.CharField(blank=True, max_length=20, null=True)),
                ("createdby", models.BigIntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "igim_detailed_inspection_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgimDetailedInspectionEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("document_number", models.BigIntegerField()),
                ("vendor", models.BigIntegerField()),
                ("materialcode", models.BigIntegerField()),
                ("totalqty", models.IntegerField()),
                ("doc_date", models.DateField()),
                ("dirno", models.BigIntegerField()),
                ("date", models.DateField()),
                ("qty", models.IntegerField()),
                ("createdby", models.BigIntegerField()),
                ("finalsave", models.CharField(max_length=5)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "igim_detailed_inspection_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgimDim",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dim", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "igim_dim",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgimDimensionDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dirno", models.BigIntegerField(blank=True, null=True)),
                (
                    "documentnumber",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("serialnumber", models.IntegerField(blank=True, null=True)),
                ("heading1", models.CharField(blank=True, max_length=200, null=True)),
                ("createdby", models.BigIntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "igim_dimension_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiMicDataMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.CharField(max_length=15, unique=True)),
                ("pcheck", models.TextField()),
                ("fcheck", models.TextField()),
                ("dcheck", models.TextField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "igi_mic_data_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiNtry",
            fields=[
                ("igi_id", models.AutoField(primary_key=True, serialize=False)),
                ("target_date", models.DateField()),
                ("proc_date", models.DateField()),
                ("dept", models.CharField(max_length=5)),
                ("empcode", models.CharField(max_length=7)),
                ("me_user", models.CharField(max_length=7)),
                ("igi_status", models.CharField(max_length=2)),
                ("igi_mcode", models.CharField(max_length=15)),
                ("igi_reason", models.TextField(blank=True, null=True)),
                ("igi_stage", models.CharField(max_length=4)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "igi_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiReportDimension",
            fields=[
                (
                    "documentnumber",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("materialcode", models.CharField(max_length=20)),
                ("serialnumber", models.BigIntegerField()),
                (
                    "coloumn_values",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("inspectedby", models.CharField(blank=True, max_length=50, null=True)),
                ("inspecteddate", models.DateField(blank=True, null=True)),
                ("authorisedby", models.BigIntegerField(blank=True, null=True)),
                ("authoriseddate", models.DateField(blank=True, null=True)),
                ("finalsave", models.CharField(max_length=5)),
                ("createdby", models.BigIntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "igi_report_dimension",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiReportMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("docno", models.CharField(max_length=20)),
                ("material", models.CharField(max_length=20)),
                ("no_of_rows", models.SmallIntegerField()),
                ("number_of_columns", models.IntegerField()),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "igi_report_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IgiReportMasterEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("material", models.CharField(max_length=20)),
                ("serial_number", models.IntegerField()),
                (
                    "column_heading",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("docno", models.CharField(max_length=20)),
                ("createdby", models.BigIntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "igi_report_master_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IncomeTaxDescHeaderMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=150)),
                ("del_field", models.IntegerField(db_column="del")),
            ],
            options={
                "db_table": "income_tax_desc_header_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IncomeTaxDescMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("description", models.CharField(max_length=1500)),
                ("field_name", models.CharField(max_length=100)),
                ("help_text", models.CharField(max_length=2000)),
                ("delete1", models.IntegerField()),
                ("desc_header", models.IntegerField()),
                ("sap_id", models.IntegerField()),
                ("seq", models.IntegerField()),
            ],
            options={
                "db_table": "income_tax_desc_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IncomeTaxDetailEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("main_id", models.IntegerField()),
                ("desc_id", models.IntegerField()),
                ("amt", models.CharField(max_length=200)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "income_tax_detail_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="IncomeTaxMainEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("regim", models.IntegerField()),
                ("pan_card", models.CharField(blank=True, max_length=15, null=True)),
                ("entry_date", models.DateField()),
                ("draft_release", models.IntegerField()),
                ("status", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "income_tax_main_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "material_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("serialnumber", models.IntegerField(blank=True, null=True)),
                ("dimension", models.TextField(blank=True, null=True)),
                ("critical", models.IntegerField()),
                ("createdby", models.CharField(blank=True, max_length=20, null=True)),
                ("delete1", models.IntegerField()),
                ("rmrks", models.CharField(blank=True, max_length=150, null=True)),
                ("nbpages", models.IntegerField(db_column="nbPages")),
                ("inst_gauge", models.CharField(blank=True, max_length=100, null=True)),
                ("timestamp", models.DateTimeField()),
                ("type", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "inspection_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionDetailsTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "material_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("serialnumber", models.IntegerField(blank=True, null=True)),
                ("dimension", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.CharField(blank=True, max_length=20, null=True)),
                ("delete1", models.IntegerField()),
                ("rmrks", models.CharField(max_length=150)),
                ("nbpages", models.IntegerField(db_column="nbPages")),
                ("inst_gauge", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "inspection_details_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionDimensions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "material_code",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("uniq_id", models.IntegerField(blank=True, null=True)),
                ("specified_dim", models.TextField(blank=True, null=True)),
                ("serialnumber", models.IntegerField(blank=True, null=True)),
                ("acc_range", models.CharField(blank=True, max_length=150, null=True)),
                ("inst_guage", models.CharField(blank=True, max_length=100, null=True)),
                ("obs_dim", models.CharField(blank=True, max_length=40, null=True)),
                ("rej_qty", models.CharField(blank=True, max_length=30, null=True)),
                ("remarks", models.CharField(blank=True, max_length=100, null=True)),
                ("created_by", models.CharField(blank=True, max_length=10, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "inspection_dimensions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionDna",
            fields=[
                ("dna_id", models.AutoField(primary_key=True, serialize=False)),
                ("dna_main", models.IntegerField()),
                ("dns_sub", models.IntegerField()),
                ("dna_sub_unit", models.IntegerField()),
                ("dna_comment", models.TextField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "inspection_dna",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionDnaNotes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("dna_id", models.IntegerField(blank=True, null=True)),
                ("dna_sub", models.IntegerField(blank=True, null=True)),
                ("dna_sub_unit", models.IntegerField(blank=True, null=True)),
                ("dna_notes", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "inspection_dna_notes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                ("number_of_dimensions", models.IntegerField(blank=True, null=True)),
                ("createdby", models.BigIntegerField(blank=True, null=True)),
                (
                    "inspctn_pln",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("timestamp", models.DateTimeField()),
                ("ntry_date", models.DateTimeField()),
                ("update_date", models.DateTimeField()),
                (
                    "revision_sts",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("std_time", models.CharField(blank=True, max_length=10, null=True)),
                ("revision", models.CharField(blank=True, max_length=11, null=True)),
                ("drawfile", models.CharField(blank=True, max_length=250, null=True)),
                ("reginsfile", models.CharField(blank=True, max_length=200, null=True)),
                ("uploadfile", models.CharField(max_length=600)),
                ("up_date", models.DateTimeField()),
                ("date_up_latest", models.DateTimeField()),
                ("dna", models.CharField(blank=True, max_length=100, null=True)),
                ("dna_notes", models.CharField(blank=True, max_length=100, null=True)),
                ("prepared", models.CharField(blank=True, max_length=50, null=True)),
                ("checked", models.CharField(blank=True, max_length=50, null=True)),
                ("approved", models.CharField(blank=True, max_length=50, null=True)),
                ("ecr", models.CharField(blank=True, max_length=50, null=True)),
                ("revdate1", models.CharField(blank=True, max_length=50, null=True)),
                ("rev1", models.CharField(blank=True, max_length=50, null=True)),
                ("revdesc1", models.CharField(blank=True, max_length=100, null=True)),
                ("drawfile1", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "insp_approval",
                    models.CharField(blank=True, max_length=7, null=True),
                ),
                ("insp_approvaltime", models.DateTimeField()),
                (
                    "insp_approvalstatus",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "inspection_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionMasterDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("serialnumber", models.IntegerField(blank=True, null=True)),
                (
                    "specified_dimensions",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "observed_dimensions",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "quantity_rejected",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                ("remarks", models.TextField()),
                ("createdby", models.BigIntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "inspection_master_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionMasterDup",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("number_of_dimensions", models.IntegerField(blank=True, null=True)),
                ("createdby", models.BigIntegerField(blank=True, null=True)),
                ("inspctn_pln", models.CharField(max_length=500)),
                ("timestamp", models.DateTimeField()),
                ("ntry_date", models.DateField()),
                ("update_date", models.DateField()),
                ("revision_sts", models.CharField(max_length=300)),
                ("std_time", models.CharField(max_length=10)),
                ("revision", models.IntegerField()),
                ("drawfile", models.CharField(max_length=250)),
            ],
            options={
                "db_table": "inspection_master_dup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionMasterDup1",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=20, null=True, unique=True),
                ),
                ("number_of_dimensions", models.IntegerField(blank=True, null=True)),
                ("createdby", models.BigIntegerField(blank=True, null=True)),
                ("inspctn_pln", models.CharField(max_length=500)),
                ("timestamp", models.DateTimeField()),
                ("ntry_date", models.DateField()),
                ("update_date", models.DateField()),
                ("revision_sts", models.CharField(max_length=300)),
                ("std_time", models.CharField(max_length=10)),
                ("revision", models.CharField(max_length=11)),
                ("drawfile", models.CharField(max_length=250)),
                ("field_dna", models.CharField(db_column="\tdna", max_length=100)),
                ("dna_notes", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "inspection_master_dup1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionMasterEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "document_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "materialnumber",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("vendor", models.CharField(blank=True, max_length=8, null=True)),
                (
                    "qty_inspected",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "qty_accepted",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("qty_rework", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "qty_rejected",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("insert_date", models.DateField(blank=True, null=True)),
                (
                    "instrument_code",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("sfcode", models.IntegerField(blank=True, null=True)),
                ("aprroved_by", models.CharField(blank=True, max_length=50, null=True)),
                ("finalsave", models.CharField(max_length=5)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "inspection_master_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionPdfEntry",
            fields=[
                ("uniq_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "material_code",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("std_time", models.TimeField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("entry_date", models.DateField()),
                ("qty_ins", models.IntegerField(blank=True, null=True)),
                ("qty_rej", models.IntegerField(blank=True, null=True)),
                ("qty_acc", models.IntegerField(blank=True, null=True)),
                ("qty_rwk", models.IntegerField(blank=True, null=True)),
                ("doc_no", models.IntegerField(blank=True, null=True)),
                ("ins_code", models.CharField(blank=True, max_length=40, null=True)),
                ("file_name", models.CharField(blank=True, max_length=100, null=True)),
                ("created_by", models.CharField(blank=True, max_length=15, null=True)),
                ("vendor_code", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "inspected_by",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("approved_by", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
                ("gl", models.CharField(blank=True, max_length=10, null=True)),
                ("gl_date", models.DateField()),
                ("hod", models.CharField(blank=True, max_length=10, null=True)),
                ("hod_sts", models.CharField(max_length=5)),
                ("hod_date", models.DateField()),
                ("approve_date", models.DateField()),
                ("insp_unit", models.CharField(blank=True, max_length=5, null=True)),
                ("acc_unit", models.CharField(blank=True, max_length=5, null=True)),
                ("rew_unit", models.CharField(blank=True, max_length=5, null=True)),
                ("rej_unit", models.CharField(blank=True, max_length=5, null=True)),
            ],
            options={
                "db_table": "inspection_pdf_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspectionRevision",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("material_code", models.CharField(max_length=11)),
                ("rev", models.CharField(max_length=11)),
                ("revdate", models.DateField()),
                ("revdesc", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=6)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "inspection_revision",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="InspSubCont",
            fields=[
                ("cid", models.AutoField(primary_key=True, serialize=False)),
                ("sub_type", models.CharField(max_length=10)),
                ("sub_contract", models.CharField(max_length=20)),
                ("mat_code", models.CharField(max_length=15)),
                ("off_qty", models.IntegerField()),
                ("rev_no", models.IntegerField()),
                ("matsh", models.CharField(max_length=5)),
                ("sht_qty", models.IntegerField()),
                ("ins_type", models.CharField(max_length=20)),
                ("matpoava", models.CharField(max_length=5)),
                ("mat_pono", models.CharField(max_length=20)),
                ("po_date", models.DateField()),
                ("confirmation", models.CharField(max_length=6)),
                ("ntry_date", models.DateTimeField()),
                ("createdby", models.CharField(max_length=6)),
                ("igi_sts", models.IntegerField()),
                ("attdate", models.DateField()),
                ("inspsdat", models.DateTimeField()),
                ("inspedat", models.DateTimeField()),
                ("ninspa", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("tinspt", models.IntegerField()),
                ("matacqty", models.IntegerField()),
                ("matreqty", models.IntegerField()),
                ("mat_rej_qty", models.IntegerField()),
                ("devtion", models.CharField(max_length=50)),
                ("file", models.CharField(max_length=10000)),
                ("matacdeqty", models.IntegerField()),
                ("rev_remaks", models.CharField(max_length=500)),
                ("rev_file", models.CharField(max_length=500)),
                ("remkas", models.CharField(max_length=500)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("igi_date", models.DateField()),
                ("igi_ntry", models.CharField(max_length=6)),
                ("deli_date", models.DateField()),
                ("unit_ser_no", models.CharField(max_length=11)),
                ("cc", models.CharField(max_length=10)),
                ("status", models.IntegerField()),
            ],
            options={
                "db_table": "insp_sub_cont",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Kanban",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("dept", models.CharField(max_length=50)),
                ("slno", models.IntegerField()),
                ("sub_ass", models.CharField(max_length=18)),
                ("sa_text", models.TextField()),
                ("matnr", models.CharField(max_length=18)),
                ("matnr_text", models.TextField()),
                ("qty", models.IntegerField()),
                ("uom", models.CharField(max_length=10)),
                ("valid_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "kanban",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KanbanCardMaster",
            fields=[
                ("card_num", models.IntegerField(primary_key=True, serialize=False)),
                ("project", models.CharField(blank=True, max_length=50, null=True)),
                ("sub_assem", models.CharField(blank=True, max_length=20, null=True)),
                ("material", models.CharField(blank=True, max_length=20, null=True)),
                ("qty", models.FloatField()),
                ("floor_loc", models.CharField(blank=True, max_length=50, null=True)),
                ("user_id", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.CharField(blank=True, max_length=7, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("deleteby", models.CharField(blank=True, max_length=7, null=True)),
                ("delete_date", models.DateField()),
                ("company", models.IntegerField()),
            ],
            options={
                "db_table": "kanban_card_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KanbanCardTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("card_num", models.IntegerField()),
                ("project", models.CharField(max_length=50)),
                ("sub_assem", models.CharField(max_length=20)),
                ("material", models.CharField(max_length=20)),
                ("qty", models.IntegerField()),
                ("floor_loc", models.CharField(max_length=20)),
                ("user_id", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "kanban_card_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KanbanComplaintMaster",
            fields=[
                ("cid", models.AutoField(primary_key=True, serialize=False)),
                ("complaint_type", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=7)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("deleteby", models.CharField(max_length=7)),
                ("delete_date", models.DateField()),
            ],
            options={
                "db_table": "kanban_complaint_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KanbanCompnHistory",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("slno", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("responsible", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("status", models.IntegerField()),
                ("rootcause", models.TextField()),
                ("kaban_comments", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "kanban_compn_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KanbanCompnReg",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("unit_no", models.IntegerField()),
                ("empcode", models.CharField(blank=True, max_length=7, null=True)),
                ("ntry_date", models.DateField()),
                ("storage", models.IntegerField()),
                ("complaint_type", models.IntegerField()),
                ("details", models.CharField(blank=True, max_length=200, null=True)),
                ("card_num", models.CharField(blank=True, max_length=6, null=True)),
                ("responsible", models.CharField(blank=True, max_length=7, null=True)),
                ("update_date", models.DateField()),
                ("status", models.IntegerField()),
                ("rootcause", models.TextField(blank=True, null=True)),
                ("stores", models.CharField(max_length=3)),
                ("rating", models.IntegerField()),
                ("feedback", models.CharField(blank=True, max_length=50, null=True)),
                ("feed_date", models.DateField()),
                ("kaban_comments", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("company", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "kanban_compn_reg",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KanbanDataNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project", models.CharField(max_length=20)),
                ("card", models.IntegerField()),
                ("matnr", models.CharField(max_length=11)),
                ("mat_desc", models.CharField(max_length=50)),
                ("qty", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "kanban_data_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KanbanDataTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project", models.CharField(max_length=20)),
                ("card", models.IntegerField()),
                ("matnr", models.CharField(max_length=11)),
                ("mat_desc", models.CharField(max_length=50)),
                ("qty", models.IntegerField()),
            ],
            options={
                "db_table": "kanban_data_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KanbanFeedback",
            fields=[
                ("fid", models.AutoField(primary_key=True, serialize=False)),
                ("feed", models.CharField(max_length=2)),
                ("feedback", models.CharField(max_length=20)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "kanban_feedback",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KanbanMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("part_no", models.CharField(max_length=20)),
                ("desc", models.CharField(max_length=50)),
                ("loc_at1", models.CharField(max_length=20)),
                ("qty", models.IntegerField()),
                ("uom", models.CharField(max_length=10)),
                ("loc_at2", models.CharField(max_length=20)),
                ("suplr", models.CharField(max_length=50)),
                ("mfg", models.CharField(max_length=50)),
                ("contact", models.CharField(max_length=50)),
                ("lead_time", models.IntegerField()),
                ("ext", models.CharField(max_length=10)),
                ("com_slno", models.IntegerField()),
                ("sub_assy", models.CharField(max_length=50)),
                ("slip_no", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "kanban_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KanbanStatusMaster",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=20)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "kanban_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KssCostDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("save_mat", models.CharField(max_length=11)),
                ("revised_mat", models.CharField(max_length=11)),
                ("costrs", models.IntegerField()),
                ("costrwk", models.IntegerField()),
                ("costrvsd", models.IntegerField()),
                ("consumqty", models.IntegerField()),
                ("qtysaved", models.IntegerField()),
                ("costsaved", models.IntegerField()),
                ("month_req", models.IntegerField()),
                ("monthcost", models.IntegerField()),
                ("yearlycost", models.IntegerField()),
                ("finalcost", models.IntegerField()),
                ("plngcmmts", models.CharField(max_length=300)),
                ("edp_amt", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("rwd_date", models.DateField()),
                ("rwd_attach", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "kss_cost_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KssDateMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ntry_start", models.DateField()),
                ("ntry_end", models.DateField()),
                ("gl_start", models.DateField()),
                ("gl_end", models.DateField()),
                ("hod_start", models.DateField()),
                ("hod_end", models.DateField()),
                ("created_by", models.CharField(blank=True, max_length=6, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "kss_date_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KssNtryTemp",
            fields=[
                ("kss_id", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("tag_no", models.IntegerField()),
                ("impltd_by", models.IntegerField()),
                ("impl_date", models.DateField()),
                ("kss_them", models.TextField()),
                ("current_problem", models.TextField()),
                ("root_cause", models.TextField()),
                ("counter_measures", models.TextField()),
                ("benifits", models.TextField()),
                ("intan_benefits", models.TextField()),
                ("problem_analysis", models.CharField(max_length=300)),
                ("ntry_date", models.DateField()),
                ("user", models.CharField(max_length=6)),
                ("feedback", models.CharField(max_length=50)),
                ("prjct", models.CharField(blank=True, max_length=100, null=True)),
                ("standardization", models.CharField(max_length=1000)),
                ("qnt", models.CharField(max_length=1000)),
                ("spend_amt", models.IntegerField(blank=True, null=True)),
                ("level_no", models.IntegerField()),
            ],
            options={
                "db_table": "kss_ntry_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KssNtryView",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deptname", models.CharField(blank=True, max_length=50, null=True)),
                ("empname", models.CharField(blank=True, max_length=50, null=True)),
                ("slno", models.IntegerField()),
                ("sgtn_no", models.CharField(max_length=50)),
                ("empcode", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("kss_them", models.TextField()),
                ("problem_analysis", models.CharField(max_length=250)),
                ("tangible_sts", models.CharField(max_length=2)),
                ("benifits", models.CharField(max_length=500)),
                ("intan_benefits", models.CharField(max_length=500)),
                ("current_problem", models.CharField(max_length=1000)),
                ("root_cause", models.CharField(max_length=250)),
                ("counter_measures", models.CharField(max_length=1500)),
                ("horizental_deployement", models.CharField(max_length=1)),
                ("action", models.CharField(max_length=250)),
                ("resp", models.IntegerField()),
                ("target_date", models.DateField()),
                ("actual_date", models.DateField()),
                ("status", models.CharField(max_length=250)),
                ("impltd_by", models.IntegerField()),
                ("kss_dept_slno", models.IntegerField()),
                ("loc", models.CharField(max_length=50)),
                ("prjct", models.CharField(max_length=50)),
                ("qnt", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("created_dept", models.CharField(max_length=10)),
                ("horiz_deploy", models.CharField(max_length=250)),
                ("impl_date", models.DateField()),
                ("proc_resp", models.IntegerField()),
                ("priority", models.IntegerField()),
                ("b4_commnets", models.CharField(max_length=300)),
                ("after_comments", models.CharField(max_length=300)),
                ("temp_priority", models.IntegerField()),
                ("production_type", models.CharField(max_length=1)),
                ("impltd_dept", models.IntegerField()),
                ("timestampp", models.DateTimeField()),
                ("hod_aprl_sts", models.IntegerField()),
                ("hod_code", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("ss", models.IntegerField()),
                ("project_any", models.CharField(max_length=300)),
                ("hod", models.IntegerField()),
                ("gl", models.CharField(max_length=60)),
                ("gl_sts", models.IntegerField()),
                ("gl_ntry_date", models.DateField()),
                ("gl_comment", models.CharField(max_length=250)),
                ("gl_ntry_by", models.CharField(max_length=7)),
                ("level_no", models.IntegerField()),
                ("hod_comment", models.CharField(max_length=250)),
                ("amount", models.IntegerField()),
                ("reward_amount", models.IntegerField()),
                ("kss_amt", models.IntegerField()),
                ("attachment", models.CharField(max_length=200)),
                ("cost_saving", models.IntegerField()),
            ],
            options={
                "db_table": "kss_ntry_view",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KssNtryView12",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("deptname", models.CharField(blank=True, max_length=50, null=True)),
                ("empname", models.CharField(blank=True, max_length=50, null=True)),
                ("slno", models.IntegerField()),
                ("sgtn_no", models.CharField(max_length=50)),
                ("empcode", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("kss_them", models.TextField()),
                ("problem_analysis", models.CharField(max_length=250)),
                ("tangible_sts", models.CharField(max_length=2)),
                ("benifits", models.CharField(max_length=500)),
                ("intan_benefits", models.CharField(max_length=500)),
                ("current_problem", models.CharField(max_length=1000)),
                ("root_cause", models.CharField(max_length=250)),
                ("counter_measures", models.CharField(max_length=1500)),
                ("horizental_deployement", models.CharField(max_length=1)),
                ("action", models.CharField(max_length=250)),
                ("resp", models.IntegerField()),
                ("target_date", models.DateField()),
                ("actual_date", models.DateField()),
                ("status", models.CharField(max_length=250)),
                ("impltd_by", models.IntegerField()),
                ("kss_dept_slno", models.IntegerField()),
                ("loc", models.CharField(max_length=50)),
                ("prjct", models.CharField(max_length=50)),
                ("qnt", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("created_dept", models.CharField(max_length=10)),
                ("horiz_deploy", models.CharField(max_length=250)),
                ("impl_date", models.DateField()),
                ("proc_resp", models.IntegerField()),
                ("priority", models.IntegerField()),
                ("b4_commnets", models.CharField(max_length=300)),
                ("after_comments", models.CharField(max_length=300)),
                ("temp_priority", models.IntegerField()),
                ("production_type", models.CharField(max_length=1)),
                ("impltd_dept", models.IntegerField()),
                ("timestampp", models.DateTimeField()),
                ("hod_aprl_sts", models.IntegerField()),
                ("hod_code", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("ss", models.IntegerField()),
                ("project_any", models.CharField(max_length=300)),
                ("hod", models.IntegerField()),
                ("gl", models.CharField(max_length=60)),
                ("gl_sts", models.IntegerField()),
                ("gl_ntry_date", models.DateField()),
                ("gl_comment", models.CharField(max_length=250)),
                ("gl_ntry_by", models.CharField(max_length=7)),
                ("level_no", models.IntegerField()),
                ("hod_comment", models.CharField(max_length=250)),
                ("amount", models.IntegerField()),
                ("reward_amount", models.IntegerField()),
                ("kss_amt", models.IntegerField()),
                ("attachment", models.CharField(max_length=200)),
                ("cost_saving", models.IntegerField()),
            ],
            options={
                "db_table": "kss_ntry_view12",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KssPrizes",
            fields=[
                ("empcode", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("kaizens", models.IntegerField()),
                ("ntry_datefrom", models.DateField(db_column="ntry_dateFrom")),
                ("ntry_dateto", models.DateField(db_column="ntry_dateTo")),
                ("auto_inc", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "kss_prizes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="KssPurchaseAuth",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.CharField(max_length=7)),
                ("gl", models.CharField(max_length=7)),
                ("hod", models.CharField(max_length=7)),
            ],
            options={
                "db_table": "kss_purchase_auth",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LaptopHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("laptop_slno", models.CharField(max_length=50)),
                ("responsible", models.IntegerField()),
                ("in_out", models.CharField(max_length=3)),
                ("status", models.CharField(max_length=15)),
                ("ntry_date", models.CharField(max_length=10)),
                ("ntry_time", models.CharField(max_length=5)),
                ("remarks", models.CharField(max_length=150)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "laptop_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LaptopMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("laptop_make", models.CharField(max_length=50)),
                ("laptop_model", models.CharField(max_length=50)),
                ("laptop_slno", models.CharField(max_length=50)),
                ("laptop_location", models.CharField(max_length=25)),
                ("asset_type", models.CharField(max_length=20)),
                ("created_date", models.DateField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("delete_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "laptop_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LeanMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("ntry_by", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("kaizens", models.IntegerField()),
                ("sugg", models.IntegerField()),
                ("number_5s", models.IntegerField(db_column="5s")),
                ("lean", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lean_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LeaveCancelData",
            fields=[
                ("can_id", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.CharField(max_length=6)),
                ("lea_app_date", models.DateField()),
                ("noofdays", models.FloatField()),
                ("startdate", models.DateField()),
                ("enddate", models.DateField()),
                ("leave_type", models.CharField(max_length=5)),
                ("day_type", models.CharField(max_length=5)),
                ("reason", models.CharField(max_length=500)),
                ("indicator", models.CharField(max_length=11)),
                ("leave_id", models.IntegerField()),
                ("type", models.CharField(max_length=2)),
                ("generate_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "leave_cancel_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LeaveOtOnOd",
            fields=[
                ("otid", models.AutoField(primary_key=True, serialize=False)),
                ("ack", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("date", models.DateField()),
                ("day", models.CharField(max_length=15)),
                ("ot_from", models.CharField(max_length=5)),
                ("ot_to", models.CharField(max_length=8)),
                ("ntry_date", models.DateField()),
                ("hod_aprl_sts", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("hod_aprl_date", models.DateField()),
                ("download", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "leave_ot_on_od",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LeaveOutingDetails",
            fields=[
                ("oid", models.AutoField(primary_key=True, serialize=False)),
                ("associate", models.IntegerField()),
                ("place", models.CharField(max_length=50)),
                ("purpose", models.CharField(max_length=100)),
                ("type", models.CharField(max_length=50)),
                ("out", models.CharField(max_length=10)),
                ("in_field", models.CharField(db_column="in", max_length=10)),
                ("ntry_by", models.CharField(max_length=6)),
                ("ntry_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "leave_outing_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LeaveVisitMgt",
            fields=[
                ("vid", models.AutoField(primary_key=True, serialize=False)),
                ("cat", models.CharField(blank=True, max_length=10, null=True)),
                ("org", models.CharField(blank=True, max_length=50, null=True)),
                ("visitor", models.CharField(blank=True, max_length=50, null=True)),
                ("associate", models.IntegerField()),
                ("place", models.CharField(blank=True, max_length=50, null=True)),
                ("purpose", models.CharField(blank=True, max_length=50, null=True)),
                ("ntry_date", models.DateField()),
                ("comein", models.CharField(max_length=10)),
                ("wentout", models.CharField(max_length=10)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "leave_visit_mgt",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LeaveWorkflowAccess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("modules", models.IntegerField()),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField()),
                ("timestamp", models.DateField()),
                ("delete1", models.IntegerField()),
                ("responsible", models.IntegerField()),
            ],
            options={
                "db_table": "leave_workflow_access",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LeaveWorkflowDepts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("module_name", models.CharField(max_length=100)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "leave_workflow_depts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocationMaster",
            fields=[
                ("loid", models.AutoField(primary_key=True, serialize=False)),
                ("loccode", models.CharField(max_length=20)),
                ("locname", models.CharField(max_length=50)),
                ("shortcode", models.CharField(max_length=2)),
                ("full_code", models.CharField(max_length=25)),
                ("time_admin", models.CharField(max_length=150)),
                ("com_id", models.IntegerField()),
                ("plant", models.IntegerField()),
                ("com_name", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "company_address",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "google_map_loc",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "location_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocationMaster28102022",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("loccode", models.CharField(max_length=20)),
                ("locname", models.CharField(max_length=50)),
                ("shortcode", models.CharField(max_length=2)),
                ("time_admin", models.CharField(max_length=150)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "location_master_28_10_2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocationMasterOld",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("loccode", models.CharField(max_length=20)),
                ("locname", models.CharField(max_length=50)),
                ("shortcode", models.CharField(max_length=2)),
                ("time_admin", models.CharField(max_length=150)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "location_master_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocoType",
            fields=[
                ("lc_no", models.AutoField(primary_key=True, serialize=False)),
                ("lc_name", models.CharField(max_length=50)),
                ("createdby", models.SmallIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "loco_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LocOutMaster",
            fields=[
                ("oid", models.AutoField(primary_key=True, serialize=False)),
                ("work_loc", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "loc_out_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LoginDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("login", models.IntegerField()),
                ("login_time", models.CharField(max_length=9)),
                ("logout", models.IntegerField()),
                ("logout_time", models.CharField(blank=True, max_length=9, null=True)),
                ("max_login", models.IntegerField()),
                (
                    "max_logout_time",
                    models.CharField(blank=True, max_length=9, null=True),
                ),
            ],
            options={
                "db_table": "login_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomAlternate",
            fields=[
                ("reqid", models.AutoField(primary_key=True, serialize=False)),
                ("unit_no", models.IntegerField()),
                ("typeofrequest", models.IntegerField()),
                ("status", models.IntegerField()),
                ("priority", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("dept", models.CharField(blank=True, max_length=5, null=True)),
                ("me_user", models.IntegerField()),
                ("target_date", models.DateField()),
                ("prs_date", models.DateField()),
                ("delivery_date", models.DateField()),
                (
                    "prs_quentity",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("noofitems", models.IntegerField()),
                ("pdt_status", models.CharField(blank=True, max_length=100, null=True)),
                ("designer", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "marketing_eng",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("rdso", models.CharField(blank=True, max_length=200, null=True)),
                ("timestamp", models.DateTimeField()),
                ("mcode", models.CharField(blank=True, max_length=200, null=True)),
                ("category", models.IntegerField()),
                ("project", models.CharField(blank=True, max_length=100, null=True)),
                ("po_no_prs", models.CharField(blank=True, max_length=20, null=True)),
                ("draft", models.CharField(blank=True, max_length=1, null=True)),
                (
                    "comparisan_category",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                ("mdesc", models.TextField(blank=True, null=True)),
                ("existing", models.CharField(blank=True, max_length=50, null=True)),
                ("suggested", models.CharField(blank=True, max_length=50, null=True)),
                ("reason", models.CharField(blank=True, max_length=500, null=True)),
                ("date", models.DateTimeField()),
                ("hold_date", models.DateField()),
                ("refmail", models.CharField(blank=True, max_length=100, null=True)),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("mailattach", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "user_attach",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("conclusionbyme", models.TextField(blank=True, null=True)),
                ("dateconf", models.DateField()),
                ("actionone", models.IntegerField()),
                ("actiontwo", models.IntegerField()),
                ("actionthree", models.IntegerField()),
                ("actionfour", models.IntegerField()),
                ("actionfive", models.IntegerField()),
                ("actionsix", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("hodapproved", models.CharField(blank=True, max_length=5, null=True)),
                ("alt_part", models.TextField(blank=True, null=True)),
                ("alt_make", models.TextField(blank=True, null=True)),
                ("meattach", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "peer_attach",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "present_status",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("expected_date", models.DateField()),
                ("findby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("mydate", models.DateField()),
                ("m_code", models.CharField(blank=True, max_length=20, null=True)),
                ("shrtage_qty", models.CharField(blank=True, max_length=11, null=True)),
                (
                    "shrtage_prdct",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("single_src_type", models.IntegerField()),
                ("assn_targt_date", models.DateField()),
                ("value_additn", models.IntegerField()),
                (
                    "designer_comm",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("existing_cost", models.FloatField()),
                ("alternate_partcost", models.FloatField()),
                ("sample_qty", models.FloatField()),
                ("gatepass_no", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "potting_details",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "sample_eval_empcode",
                    models.CharField(blank=True, max_length=7, null=True),
                ),
            ],
            options={
                "db_table": "lom_alternate",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomAlternateDesgnr",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_alternate_desgnr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomAlternateFields",
            fields=[
                ("field_id", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.IntegerField()),
                ("subcategory", models.IntegerField()),
                ("field_name", models.CharField(blank=True, max_length=100, null=True)),
                ("requiredtrue", models.IntegerField()),
                ("orderbyasc", models.IntegerField()),
                ("direction", models.CharField(blank=True, max_length=2, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_alternate_fields",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomAlternateHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reqid", models.IntegerField()),
                ("ref_id", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("status", models.CharField(blank=True, max_length=100, null=True)),
                ("hold_date", models.DateField()),
                ("comments", models.TextField(blank=True, null=True)),
                ("date", models.DateTimeField()),
                ("assocaite", models.CharField(blank=True, max_length=100, null=True)),
                ("live", models.IntegerField()),
                (
                    "mpnno",
                    models.CharField(
                        blank=True, db_column="mpnNo", max_length=50, null=True
                    ),
                ),
                ("delete1", models.IntegerField()),
                ("apprv_beforeucp", models.IntegerField()),
                ("attachment", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "no_of_active_sources",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "stores_stock",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "pending_order",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "no_of_live_applications",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "reference_tag_no",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("reviewdata", models.CharField(blank=True, max_length=300, null=True)),
                ("expected_date", models.DateField()),
                ("dependent_reqrmnt", models.CharField(max_length=50)),
                ("alternate_partstatus", models.IntegerField()),
                ("rdso_apprv", models.IntegerField()),
                ("cmpsheet", models.IntegerField()),
                ("cmpsheet_remrks", models.TextField(blank=True, null=True)),
                ("desgnr_feedback", models.IntegerField()),
                ("desner_remarks", models.TextField(blank=True, null=True)),
                ("marketng_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("expected_date_sec", models.DateField()),
                (
                    "peer_ver_attach",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
            ],
            options={
                "db_table": "lom_alternate_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomAlternateMpn",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reqid", models.IntegerField()),
                (
                    "partno_flat",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("make_flat", models.CharField(blank=True, max_length=100, null=True)),
                ("spq", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "tapeandreal",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "db_table": "lom_alternate_mpn",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomAlternateParameters",
            fields=[
                ("parameterid", models.AutoField(primary_key=True, serialize=False)),
                ("reqid", models.IntegerField()),
                ("ref_id", models.IntegerField()),
                ("field_id", models.IntegerField()),
                ("field_name", models.CharField(blank=True, max_length=100, null=True)),
                ("empcode", models.IntegerField()),
                ("ext", models.TextField(blank=True, null=True)),
                ("alt", models.TextField(blank=True, null=True)),
                ("uom", models.CharField(blank=True, max_length=20, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("live", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_alternate_parameters",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomAlternateParametersMultiple",
            fields=[
                ("alt_id", models.AutoField(primary_key=True, serialize=False)),
                ("reqid", models.IntegerField()),
                ("ref_id", models.IntegerField()),
                ("field_id", models.IntegerField(blank=True, null=True)),
                ("field_name", models.CharField(blank=True, max_length=100, null=True)),
                ("empcode", models.IntegerField()),
                ("alt_cnt", models.IntegerField(blank=True, null=True)),
                (
                    "alt_cnt_value",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("uom", models.CharField(blank=True, max_length=20, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("live", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "lom_alternate_parameters_multiple",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomAlternateSampleEval",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("reqid", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("sample_no", models.IntegerField()),
                ("part_no", models.CharField(blank=True, max_length=50, null=True)),
                ("make", models.CharField(blank=True, max_length=100, null=True)),
                ("item_code", models.CharField(blank=True, max_length=50, null=True)),
                ("desc", models.CharField(blank=True, max_length=100, null=True)),
                ("qty", models.IntegerField()),
                ("rec_date", models.DateField()),
                ("gatepass_no", models.CharField(blank=True, max_length=50, null=True)),
                ("send_date", models.DateField()),
                ("me_remarks", models.TextField(blank=True, null=True)),
                ("acc_sts", models.IntegerField()),
                ("acc_rej_date", models.DateField()),
                ("user_remarks", models.TextField(blank=True, null=True)),
                ("attach", models.CharField(blank=True, max_length=100, null=True)),
                ("eval_empcode", models.CharField(blank=True, max_length=8, null=True)),
                ("reply_date", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "lom_alternate_sample_eval",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomAlternateSuggested",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reqid", models.IntegerField()),
                (
                    "suggested_alternate",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "suggested_make",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("createdby", models.IntegerField()),
                ("desnr_conclus", models.IntegerField()),
                ("remarks", models.CharField(blank=True, max_length=300, null=True)),
                ("designer", models.IntegerField()),
                ("designer_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_alternate_suggested",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomAlterpart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reqid", models.IntegerField()),
                ("makeext", models.TextField()),
                ("makeatn", models.TextField()),
                ("partnoext", models.TextField()),
                ("partnoatn", models.TextField()),
                ("packageext", models.TextField()),
                ("packageatn", models.TextField()),
                ("physicalext", models.TextField()),
                ("physicalatn", models.TextField()),
                ("ratingext", models.TextField()),
                ("ratingatn", models.TextField()),
                ("materialext", models.TextField()),
                ("materialatn", models.TextField()),
                ("opttempext", models.TextField()),
                ("opttempatn", models.TextField()),
                ("storagetempext", models.TextField()),
                ("storagetempatn", models.TextField()),
                ("lifespanext", models.TextField()),
                ("lifespanatn", models.TextField()),
                ("supplyext", models.TextField()),
                ("supplyatn", models.TextField()),
                ("priceext", models.FloatField()),
                ("priceatn", models.FloatField()),
                ("comparisionsheet", models.CharField(max_length=100)),
                ("datasheet", models.CharField(max_length=100)),
                ("isexits", models.IntegerField()),
                ("replaceall", models.IntegerField()),
                ("testplan", models.TextField()),
                ("trails", models.IntegerField()),
                ("trailstext", models.TextField()),
                ("durationtrails", models.TextField()),
                ("production_i", models.TextField()),
                ("specified", models.IntegerField()),
                ("approvalsug", models.IntegerField()),
                ("live", models.IntegerField()),
                ("me_comments", models.CharField(max_length=500)),
                ("present_status", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "lom_alterpart",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomCategoryMaster",
            fields=[
                ("cateoryid", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
                ("createdby", models.CharField(max_length=7)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "lom_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomCatNewMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.CharField(max_length=30)),
                ("num_id", models.IntegerField()),
                ("categoryname", models.CharField(max_length=40)),
                ("mainfamily", models.IntegerField()),
                ("mainfamilyname", models.CharField(max_length=40)),
                ("metric_size_dig1", models.CharField(max_length=11)),
                ("metric_size_dig2", models.CharField(max_length=11)),
                ("head", models.CharField(max_length=11)),
                ("length_dig1", models.CharField(max_length=11)),
                ("length_dig2", models.CharField(max_length=11)),
                ("material", models.CharField(max_length=11)),
                ("finish", models.CharField(max_length=11)),
                ("suf_dig1", models.CharField(max_length=11)),
                ("suf_dig2", models.CharField(max_length=11)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("deletedby", models.IntegerField()),
            ],
            options={
                "db_table": "lom_cat_new_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomChangesSub",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reqid", models.IntegerField()),
                ("exitsingpart", models.TextField(blank=True, null=True)),
                ("exitsingmake", models.TextField(blank=True, null=True)),
                ("location", models.CharField(blank=True, max_length=100, null=True)),
                ("altermake", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "alterpartno",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "db_table": "lom_changes_sub",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomDialog",
            fields=[
                ("did", models.AutoField(primary_key=True, serialize=False)),
                ("sub_type", models.IntegerField()),
                ("sequence", models.IntegerField()),
                ("module", models.CharField(max_length=10)),
                ("heading", models.CharField(max_length=30)),
                ("value_content", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "lom_dialog",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomFieldsMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.IntegerField()),
                ("typeid", models.IntegerField()),
                ("field_name", models.CharField(max_length=25)),
                ("manditory", models.CharField(max_length=1)),
                ("show", models.CharField(max_length=1)),
                ("default", models.CharField(max_length=10)),
                ("position", models.IntegerField()),
                ("status", models.CharField(max_length=10)),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("deletedby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "lom_fields_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomFieldsNewMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.IntegerField()),
                ("typeid", models.IntegerField()),
                ("sub_type", models.IntegerField()),
                ("field_name", models.CharField(max_length=25)),
                ("manditory", models.CharField(max_length=1)),
                ("show", models.CharField(max_length=1)),
                ("default", models.CharField(max_length=10)),
                ("position", models.IntegerField()),
                ("status", models.CharField(max_length=10)),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("deletedby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "lom_fields_new_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomFunctionMaster",
            fields=[
                ("fid", models.AutoField(primary_key=True, serialize=False)),
                ("field_name", models.CharField(max_length=40)),
                ("field_to_display", models.CharField(max_length=500)),
                ("fnname", models.CharField(max_length=100)),
                ("isitselection", models.IntegerField()),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("deleteddate", models.DateField()),
                ("deletedby", models.CharField(max_length=7)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "lom_function_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reqid", models.IntegerField()),
                ("unit_no", models.IntegerField(blank=True, null=True)),
                ("status", models.CharField(blank=True, max_length=15, null=True)),
                ("comments", models.TextField(blank=True, null=True)),
                ("date", models.DateField()),
                ("assocaite", models.CharField(blank=True, max_length=7, null=True)),
                ("live", models.IntegerField()),
                ("attachment", models.CharField(blank=True, max_length=50, null=True)),
                ("peersap", models.CharField(blank=True, max_length=100, null=True)),
                ("merequired", models.CharField(blank=True, max_length=20, null=True)),
                ("delete1", models.IntegerField()),
                ("mecmmntfordsgner", models.TextField(blank=True, null=True)),
                ("reasonforblock", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("ucpupdate", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "lom_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomInputsSuffix",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("suffix", models.CharField(max_length=10)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("deletedby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
            ],
            options={
                "db_table": "lom_inputs_suffix",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomMakeNtry",
            fields=[
                ("mid", models.AutoField(primary_key=True, serialize=False)),
                ("slno", models.IntegerField()),
                ("lom_makes", models.CharField(max_length=50)),
                ("make_rsn", models.CharField(max_length=100)),
                ("designer", models.CharField(max_length=5)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "lom_make_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomMakes",
            fields=[
                ("lom_pid", models.AutoField(primary_key=True, serialize=False)),
                ("lom_make_id", models.CharField(max_length=4)),
                ("lom_makes", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "lom_makes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomMakesNew",
            fields=[
                ("categoryname", models.CharField(max_length=250)),
                ("lom_pid", models.AutoField(primary_key=True, serialize=False)),
                ("lom_make_id", models.IntegerField()),
                ("mainfamilyname", models.CharField(max_length=250)),
                ("subfamilyname", models.CharField(max_length=250)),
                ("lom_makes", models.CharField(max_length=250)),
            ],
            options={
                "db_table": "lom_makes_new",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomMakesNew1",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("categoryname", models.CharField(max_length=150)),
                ("lom_pid", models.IntegerField()),
                ("lom_make_id", models.IntegerField()),
                ("mainfamilyname", models.CharField(max_length=250)),
                ("subfamilyname", models.CharField(max_length=250)),
            ],
            options={
                "db_table": "lom_makes_new1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomMaterialTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.CharField(max_length=7)),
                ("type", models.CharField(max_length=2)),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "lom_material_team",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomMelist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_melist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNewCategoryMas",
            fields=[
                ("cid", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.CharField(max_length=50)),
                ("cnum", models.CharField(max_length=11)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_new_category_mas",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNewrequest",
            fields=[
                ("reqid", models.AutoField(primary_key=True, serialize=False)),
                ("index_no", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("typeofrequest", models.IntegerField()),
                ("status", models.IntegerField()),
                ("flatfiledwn", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("me_user", models.IntegerField()),
                ("target_date", models.DateField()),
                ("designer", models.IntegerField()),
                ("hod_sts", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("mcode", models.CharField(blank=True, max_length=200, null=True)),
                ("category", models.CharField(blank=True, max_length=70, null=True)),
                ("subcategory", models.IntegerField()),
                ("subunder", models.IntegerField()),
                ("reply", models.IntegerField()),
                ("othercategory", models.TextField(blank=True, null=True)),
                ("mdesc", models.TextField(blank=True, null=True)),
                ("existing", models.TextField(blank=True, null=True)),
                ("suggested", models.TextField(blank=True, null=True)),
                ("reason", models.TextField(blank=True, null=True)),
                ("buydate", models.DateField()),
                ("shipdate", models.DateField()),
                ("date", models.DateField()),
                ("blocking", models.CharField(blank=True, max_length=10, null=True)),
                ("code_r_mpn", models.CharField(blank=True, max_length=10, null=True)),
                ("mcode_new", models.CharField(blank=True, max_length=200, null=True)),
                ("refmail", models.CharField(blank=True, max_length=100, null=True)),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("pcnattach", models.CharField(blank=True, max_length=100, null=True)),
                ("mecomment", models.CharField(blank=True, max_length=300, null=True)),
                (
                    "user_attach",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("me_desc", models.TextField(blank=True, null=True)),
                ("usercomment", models.TextField(blank=True, null=True)),
                ("conclusionbyme", models.TextField(blank=True, null=True)),
                ("rootcause", models.TextField(blank=True, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("applicable", models.TextField(blank=True, null=True)),
                ("purchase_reply", models.TextField(blank=True, null=True)),
                ("master_team", models.IntegerField()),
                ("dateconf", models.DateField()),
                ("actionone", models.IntegerField()),
                ("actiontwo", models.IntegerField()),
                ("actionthree", models.IntegerField()),
                ("actionfour", models.IntegerField()),
                ("actionfive", models.IntegerField()),
                ("hod", models.IntegerField(blank=True, null=True)),
                ("hodapproved", models.CharField(blank=True, max_length=5, null=True)),
                ("partno_flat", models.TextField(blank=True, null=True)),
                ("make_flat", models.TextField(blank=True, null=True)),
                ("meattach", models.CharField(blank=True, max_length=100, null=True)),
                ("peer_team", models.CharField(blank=True, max_length=20, null=True)),
                ("make", models.CharField(blank=True, max_length=500, null=True)),
                ("emp_ass", models.CharField(blank=True, max_length=10, null=True)),
                ("pcn_emp", models.CharField(blank=True, max_length=10, null=True)),
                ("reasonforblock", models.TextField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("mpn_number", models.CharField(max_length=200)),
                ("mnfpart_num", models.CharField(max_length=200)),
                ("hod_tms", models.DateTimeField()),
                ("comments", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "lom_newrequest",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNewSubTypeMas",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("tid", models.IntegerField()),
                ("sub_type", models.CharField(max_length=60)),
                ("snum", models.CharField(max_length=4)),
                ("show3d", models.CharField(max_length=5)),
                ("manufacturer", models.CharField(max_length=200)),
                ("prod_details", models.CharField(max_length=200)),
                ("location", models.CharField(max_length=100)),
                ("web_details", models.CharField(max_length=200)),
            ],
            options={
                "db_table": "lom_new_sub_type_mas",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNewTypeMas",
            fields=[
                ("tid", models.AutoField(primary_key=True, serialize=False)),
                ("cid", models.IntegerField()),
                ("type", models.CharField(max_length=50)),
                ("mnum", models.CharField(max_length=2)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_new_type_mas",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.IntegerField()),
                ("lomtype", models.CharField(blank=True, max_length=5, null=True)),
                ("sub_type", models.IntegerField()),
                ("value", models.CharField(blank=True, max_length=15, null=True)),
                ("malefe", models.CharField(blank=True, max_length=7, null=True)),
                ("noofpins", models.CharField(blank=True, max_length=25, null=True)),
                (
                    "straightright",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("noofrows", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "pcbthickness",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("sqmm", models.IntegerField()),
                ("noofcores", models.IntegerField()),
                ("noofstrands", models.IntegerField()),
                ("strandthickness", models.FloatField()),
                (
                    "voltagerating",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "currentrating",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("od", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "operatingtemperature",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("uom", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "approximateprice",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("aseriescode", models.CharField(blank=True, max_length=15, null=True)),
                ("drawdocref", models.CharField(blank=True, max_length=20, null=True)),
                ("proprietary", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "product_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("connect_pins", models.IntegerField()),
                ("connt_cat", models.IntegerField()),
                ("connt_sub_cat", models.IntegerField()),
                ("ed_no", models.CharField(blank=True, max_length=10, null=True)),
                ("page_r_serial", models.TextField(blank=True, null=True)),
                (
                    "special_ref",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("specialcare", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "specialcaretext",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("periodmaint", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "periodmaint_attach",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("inspectioncriteria", models.TextField(blank=True, null=True)),
                ("partno", models.CharField(max_length=100)),
                ("finishing", models.CharField(blank=True, max_length=10, null=True)),
                ("inserts", models.CharField(max_length=3)),
                ("make", models.CharField(blank=True, max_length=100, null=True)),
                ("tolerance", models.FloatField()),
                ("wattage", models.CharField(blank=True, max_length=25, null=True)),
                ("ppmntcr", models.CharField(blank=True, max_length=10, null=True)),
                ("dimensions", models.CharField(blank=True, max_length=50, null=True)),
                ("package", models.CharField(blank=True, max_length=15, null=True)),
                ("pack_just", models.CharField(blank=True, max_length=300, null=True)),
                (
                    "description",
                    models.TextField(
                        blank=True, db_collation="utf8_general_ci", null=True
                    ),
                ),
                ("part_cat", models.CharField(blank=True, max_length=10, null=True)),
                ("createdby", models.CharField(blank=True, max_length=7, null=True)),
                ("me_user", models.CharField(blank=True, max_length=7, null=True)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(blank=True, max_length=10, null=True)),
                ("timestamp", models.DateTimeField()),
                ("categorymas", models.CharField(blank=True, max_length=11, null=True)),
                ("mainfamily", models.CharField(blank=True, max_length=2, null=True)),
                ("subfamily", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "copper_value",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("sequencenum", models.CharField(blank=True, max_length=5, null=True)),
                ("cmsnum", models.CharField(blank=True, max_length=6, null=True)),
                ("matnum", models.CharField(blank=True, max_length=11, null=True)),
                (
                    "matdescription",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=40,
                        null=True,
                    ),
                ),
                ("status", models.IntegerField()),
                ("me_comments", models.TextField(blank=True, null=True)),
                (
                    "user_comment",
                    models.TextField(
                        blank=True, db_collation="utf8_general_ci", null=True
                    ),
                ),
                ("user_status", models.IntegerField()),
                ("mat_type", models.CharField(blank=True, max_length=50, null=True)),
                ("mat_group", models.CharField(blank=True, max_length=50, null=True)),
                ("prod_alloc", models.CharField(blank=True, max_length=25, null=True)),
                (
                    "ind_std_desc",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("round_val", models.IntegerField()),
                ("purch_group", models.CharField(blank=True, max_length=50, null=True)),
                ("batch_mang", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "purch_order_text",
                    models.TextField(
                        blank=True, db_collation="utf8_general_ci", null=True
                    ),
                ),
                ("stor_loc", models.CharField(max_length=25)),
                (
                    "serial_no_profile",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("inspection_setup", models.CharField(max_length=100)),
                ("valuation_class", models.IntegerField()),
                ("closed_or_not", models.IntegerField()),
                ("completed_date", models.DateTimeField()),
                ("lom_team", models.CharField(blank=True, max_length=7, null=True)),
                (
                    "testcertificate",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                ("fyi", models.CharField(max_length=2)),
                ("contact_details", models.TextField(blank=True, null=True)),
                (
                    "new_or_exist_code",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("leadtime", models.CharField(blank=True, max_length=20, null=True)),
                ("moqdetails", models.CharField(blank=True, max_length=30, null=True)),
                ("replytomeuser", models.TextField(blank=True, null=True)),
                ("sapdownload", models.IntegerField()),
                ("completed", models.IntegerField()),
                ("mail_cc", models.CharField(blank=True, max_length=250, null=True)),
                ("gl", models.CharField(blank=True, max_length=10, null=True)),
                ("glapproved", models.CharField(blank=True, max_length=5, null=True)),
                ("gl_date", models.CharField(blank=True, max_length=20, null=True)),
                ("hod", models.CharField(blank=True, max_length=10, null=True)),
                ("hodapproved", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "approve_date",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("reason", models.IntegerField()),
                ("single_source", models.IntegerField()),
                ("others", models.CharField(blank=True, max_length=200, null=True)),
                ("leadingtime", models.IntegerField()),
                ("moq", models.IntegerField()),
                ("spq", models.IntegerField()),
                ("market_avl", models.IntegerField()),
                ("mark_avail", models.TextField(blank=True, null=True)),
                (
                    "attach_purchase",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("mat_empcode", models.CharField(blank=True, max_length=7, null=True)),
                ("in_sufficient", models.IntegerField()),
                ("in_suff_field1", models.IntegerField()),
                ("in_suff_field2", models.TextField(blank=True, null=True)),
                ("ens_dup", models.IntegerField()),
                ("ensure_txt", models.TextField(blank=True, null=True)),
                ("me_e_r_me_m", models.CharField(max_length=2)),
                ("delete1", models.IntegerField()),
                ("fin_det", models.CharField(blank=True, max_length=10, null=True)),
                ("detail_source", models.IntegerField()),
                (
                    "not_tried_rsn",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("not_date", models.DateField(blank=True, null=True)),
                ("not_date_sts", models.IntegerField()),
                ("mat_code", models.CharField(blank=True, max_length=13, null=True)),
                ("annu_cum", models.CharField(blank=True, max_length=10, null=True)),
                ("applic", models.CharField(blank=True, max_length=150, null=True)),
                ("mtbf", models.CharField(blank=True, max_length=10, null=True)),
                ("msd", models.CharField(blank=True, max_length=10, null=True)),
                ("prog_int", models.CharField(blank=True, max_length=100, null=True)),
                ("prog_toll", models.CharField(blank=True, max_length=100, null=True)),
                ("alt_sts", models.IntegerField()),
                ("file_name", models.CharField(blank=True, max_length=100, null=True)),
                ("product_grade", models.IntegerField()),
                ("intramoving", models.IntegerField()),
                ("dwg_move", models.IntegerField()),
                ("real_move", models.IntegerField()),
                ("datasheet_move", models.IntegerField()),
                (
                    "metric_size_dig1",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "metric_size_dig2",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("head", models.CharField(blank=True, max_length=10, null=True)),
                ("length_dig1", models.CharField(blank=True, max_length=10, null=True)),
                ("length_dig2", models.CharField(blank=True, max_length=10, null=True)),
                ("material", models.CharField(blank=True, max_length=10, null=True)),
                ("finish", models.CharField(blank=True, max_length=10, null=True)),
                ("suf_dig1", models.CharField(blank=True, max_length=10, null=True)),
                ("suf_dig2", models.CharField(blank=True, max_length=10, null=True)),
                ("reas_delay", models.CharField(blank=True, max_length=100, null=True)),
                ("dc_pot", models.CharField(blank=True, max_length=5, null=True)),
                ("user_file", models.CharField(blank=True, max_length=100, null=True)),
                ("ase_ava", models.CharField(blank=True, max_length=100, null=True)),
                ("waranty", models.CharField(blank=True, max_length=4, null=True)),
                ("ethree", models.IntegerField()),
                ("mach_com", models.CharField(blank=True, max_length=2, null=True)),
                ("ctrl_code", models.CharField(max_length=10)),
                ("res_new_code", models.TextField(blank=True, null=True)),
                (
                    "existtool_medha",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "exst_mat_reas",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "db_table": "lom_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNtry01082021",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.IntegerField()),
                ("lomtype", models.CharField(max_length=5)),
                ("sub_type", models.IntegerField()),
                ("value", models.CharField(max_length=15)),
                ("malefe", models.CharField(max_length=7)),
                ("noofpins", models.CharField(max_length=25)),
                ("straightright", models.CharField(max_length=30)),
                ("noofrows", models.CharField(max_length=15)),
                ("pcbthickness", models.CharField(max_length=20)),
                ("sqmm", models.IntegerField()),
                ("noofcores", models.IntegerField()),
                ("noofstrands", models.IntegerField()),
                ("strandthickness", models.FloatField()),
                ("voltagerating", models.CharField(max_length=15)),
                ("currentrating", models.CharField(max_length=15)),
                ("od", models.CharField(max_length=15)),
                ("operatingtemperature", models.CharField(max_length=15)),
                ("uom", models.CharField(max_length=5)),
                ("approximateprice", models.CharField(max_length=15)),
                ("aseriescode", models.CharField(max_length=15)),
                ("drawdocref", models.CharField(max_length=20)),
                ("proprietary", models.CharField(max_length=3)),
                ("product_code", models.CharField(max_length=10)),
                ("connect_pins", models.IntegerField()),
                ("connt_cat", models.IntegerField()),
                ("connt_sub_cat", models.IntegerField()),
                ("ed_no", models.CharField(max_length=10)),
                ("page_r_serial", models.CharField(max_length=10)),
                ("special_ref", models.CharField(max_length=200)),
                ("specialcare", models.CharField(max_length=3)),
                ("specialcaretext", models.CharField(max_length=50)),
                ("periodmaint", models.CharField(max_length=3)),
                ("periodmaint_attach", models.CharField(max_length=250)),
                ("inspectioncriteria", models.TextField()),
                ("partno", models.IntegerField()),
                ("finishing", models.CharField(max_length=10)),
                ("inserts", models.CharField(max_length=3)),
                ("make", models.CharField(max_length=25)),
                ("tolerance", models.FloatField()),
                ("wattage", models.CharField(max_length=25)),
                ("ppmntcr", models.CharField(max_length=10)),
                ("dimensions", models.CharField(max_length=15)),
                ("package", models.CharField(max_length=15)),
                ("pack_just", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("part_cat", models.CharField(max_length=10)),
                ("createdby", models.CharField(max_length=7)),
                ("me_user", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("categorymas", models.CharField(max_length=11)),
                ("mainfamily", models.CharField(max_length=2)),
                ("subfamily", models.CharField(max_length=3)),
                ("copper_value", models.CharField(max_length=10)),
                ("sequencenum", models.CharField(max_length=5)),
                ("cmsnum", models.CharField(max_length=6)),
                ("matnum", models.CharField(max_length=11)),
                ("matdescription", models.CharField(max_length=40)),
                ("status", models.IntegerField()),
                ("me_comments", models.TextField()),
                ("user_comment", models.TextField()),
                ("user_status", models.IntegerField()),
                ("mat_type", models.CharField(max_length=50)),
                ("mat_group", models.CharField(max_length=50)),
                ("prod_alloc", models.CharField(max_length=25)),
                ("ind_std_desc", models.CharField(max_length=50)),
                ("round_val", models.IntegerField()),
                ("purch_group", models.CharField(max_length=50)),
                ("batch_mang", models.CharField(max_length=100)),
                ("purch_order_text", models.TextField()),
                ("stor_loc", models.CharField(max_length=25)),
                ("serial_no_profile", models.CharField(max_length=50)),
                ("inspection_setup", models.CharField(max_length=100)),
                ("valuation_class", models.IntegerField()),
                ("closed_or_not", models.IntegerField()),
                ("completed_date", models.DateTimeField()),
                ("lom_team", models.CharField(max_length=7)),
                ("testcertificate", models.CharField(max_length=2)),
                ("fyi", models.CharField(max_length=2)),
                ("contact_details", models.TextField()),
                ("new_or_exist_code", models.CharField(max_length=5)),
                ("leadtime", models.CharField(max_length=20)),
                ("moqdetails", models.CharField(max_length=30)),
                ("replytomeuser", models.TextField()),
                ("sapdownload", models.IntegerField()),
                ("completed", models.IntegerField()),
                ("mail_cc", models.CharField(max_length=250)),
                ("gl", models.CharField(max_length=10)),
                ("glapproved", models.CharField(max_length=5)),
                ("gl_date", models.CharField(max_length=20)),
                ("hod", models.CharField(max_length=10)),
                ("hodapproved", models.CharField(max_length=5)),
                ("approve_date", models.CharField(max_length=20)),
                ("reason", models.IntegerField()),
                ("single_source", models.IntegerField()),
                ("others", models.CharField(max_length=200)),
                ("leadingtime", models.IntegerField()),
                ("moq", models.IntegerField()),
                ("spq", models.IntegerField()),
                ("market_avl", models.IntegerField()),
                ("mark_avail", models.TextField()),
                ("attach_purchase", models.CharField(max_length=100)),
                ("mat_empcode", models.CharField(max_length=7)),
                ("in_sufficient", models.IntegerField()),
                ("in_suff_field1", models.IntegerField()),
                ("in_suff_field2", models.TextField()),
                ("ens_dup", models.IntegerField()),
                ("ensure_txt", models.TextField()),
                ("me_e_r_me_m", models.CharField(max_length=2)),
                ("delete1", models.IntegerField()),
                ("fin_det", models.CharField(max_length=10)),
                ("detail_source", models.IntegerField()),
                ("not_tried_rsn", models.CharField(max_length=500)),
                ("not_date", models.DateField(blank=True, null=True)),
                ("not_date_sts", models.IntegerField()),
                ("mat_code", models.CharField(max_length=13)),
                ("annu_cum", models.CharField(max_length=10)),
                ("applic", models.CharField(max_length=20)),
                ("mtbf", models.CharField(max_length=10)),
                ("msd", models.CharField(max_length=10)),
                ("prog_int", models.CharField(max_length=100)),
                ("prog_toll", models.CharField(max_length=100)),
                ("alt_sts", models.IntegerField()),
                ("file_name", models.CharField(max_length=100)),
                ("product_grade", models.IntegerField()),
                ("intramoving", models.IntegerField()),
                ("dwg_move", models.IntegerField()),
                ("real_move", models.IntegerField()),
                ("datasheet_move", models.IntegerField()),
                ("metric_size_dig1", models.CharField(max_length=10)),
                ("metric_size_dig2", models.CharField(max_length=10)),
                ("head", models.CharField(max_length=10)),
                ("length_dig1", models.CharField(max_length=10)),
                ("length_dig2", models.CharField(max_length=10)),
                ("material", models.CharField(max_length=10)),
                ("finish", models.CharField(max_length=10)),
                ("suf_dig1", models.CharField(max_length=10)),
                ("suf_dig2", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "lom_ntry_01_08_2021",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNtry07112022",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.IntegerField()),
                ("lomtype", models.CharField(blank=True, max_length=5, null=True)),
                ("sub_type", models.IntegerField()),
                ("value", models.CharField(blank=True, max_length=15, null=True)),
                ("malefe", models.CharField(blank=True, max_length=7, null=True)),
                ("noofpins", models.CharField(blank=True, max_length=25, null=True)),
                (
                    "straightright",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("noofrows", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "pcbthickness",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("sqmm", models.IntegerField()),
                ("noofcores", models.IntegerField()),
                ("noofstrands", models.IntegerField()),
                ("strandthickness", models.FloatField()),
                (
                    "voltagerating",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "currentrating",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("od", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "operatingtemperature",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("uom", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "approximateprice",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("aseriescode", models.CharField(blank=True, max_length=15, null=True)),
                ("drawdocref", models.CharField(blank=True, max_length=20, null=True)),
                ("proprietary", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "product_code",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("connect_pins", models.IntegerField()),
                ("connt_cat", models.IntegerField()),
                ("connt_sub_cat", models.IntegerField()),
                ("ed_no", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "page_r_serial",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "special_ref",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("specialcare", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "specialcaretext",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("periodmaint", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "periodmaint_attach",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("inspectioncriteria", models.TextField(blank=True, null=True)),
                ("partno", models.IntegerField()),
                ("finishing", models.CharField(blank=True, max_length=10, null=True)),
                ("inserts", models.CharField(max_length=3)),
                ("make", models.CharField(blank=True, max_length=25, null=True)),
                ("tolerance", models.FloatField()),
                ("wattage", models.CharField(blank=True, max_length=25, null=True)),
                ("ppmntcr", models.CharField(blank=True, max_length=10, null=True)),
                ("dimensions", models.CharField(blank=True, max_length=15, null=True)),
                ("package", models.CharField(blank=True, max_length=15, null=True)),
                ("pack_just", models.CharField(blank=True, max_length=100, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("part_cat", models.CharField(blank=True, max_length=10, null=True)),
                ("createdby", models.CharField(blank=True, max_length=7, null=True)),
                ("me_user", models.CharField(blank=True, max_length=7, null=True)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(blank=True, max_length=10, null=True)),
                ("timestamp", models.DateTimeField()),
                ("categorymas", models.CharField(blank=True, max_length=11, null=True)),
                ("mainfamily", models.CharField(blank=True, max_length=2, null=True)),
                ("subfamily", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "copper_value",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("sequencenum", models.CharField(blank=True, max_length=5, null=True)),
                ("cmsnum", models.CharField(blank=True, max_length=6, null=True)),
                ("matnum", models.CharField(blank=True, max_length=11, null=True)),
                (
                    "matdescription",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("status", models.IntegerField()),
                ("me_comments", models.TextField(blank=True, null=True)),
                ("user_comment", models.TextField(blank=True, null=True)),
                ("user_status", models.IntegerField()),
                ("mat_type", models.CharField(blank=True, max_length=50, null=True)),
                ("mat_group", models.CharField(blank=True, max_length=50, null=True)),
                ("prod_alloc", models.CharField(blank=True, max_length=25, null=True)),
                (
                    "ind_std_desc",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("round_val", models.IntegerField()),
                ("purch_group", models.CharField(blank=True, max_length=50, null=True)),
                ("batch_mang", models.CharField(blank=True, max_length=100, null=True)),
                ("purch_order_text", models.TextField(blank=True, null=True)),
                ("stor_loc", models.CharField(max_length=25)),
                (
                    "serial_no_profile",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("inspection_setup", models.CharField(max_length=100)),
                ("valuation_class", models.IntegerField()),
                ("closed_or_not", models.IntegerField()),
                ("completed_date", models.DateTimeField()),
                ("lom_team", models.CharField(blank=True, max_length=7, null=True)),
                (
                    "testcertificate",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                ("fyi", models.CharField(max_length=2)),
                ("contact_details", models.TextField(blank=True, null=True)),
                (
                    "new_or_exist_code",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("leadtime", models.CharField(blank=True, max_length=20, null=True)),
                ("moqdetails", models.CharField(blank=True, max_length=30, null=True)),
                ("replytomeuser", models.TextField(blank=True, null=True)),
                ("sapdownload", models.IntegerField()),
                ("completed", models.IntegerField()),
                ("mail_cc", models.CharField(blank=True, max_length=250, null=True)),
                ("gl", models.CharField(blank=True, max_length=10, null=True)),
                ("glapproved", models.CharField(blank=True, max_length=5, null=True)),
                ("gl_date", models.CharField(blank=True, max_length=20, null=True)),
                ("hod", models.CharField(blank=True, max_length=10, null=True)),
                ("hodapproved", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "approve_date",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("reason", models.IntegerField()),
                ("single_source", models.IntegerField()),
                ("others", models.CharField(blank=True, max_length=200, null=True)),
                ("leadingtime", models.IntegerField()),
                ("moq", models.IntegerField()),
                ("spq", models.IntegerField()),
                ("market_avl", models.IntegerField()),
                ("mark_avail", models.TextField(blank=True, null=True)),
                (
                    "attach_purchase",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("mat_empcode", models.CharField(blank=True, max_length=7, null=True)),
                ("in_sufficient", models.IntegerField()),
                ("in_suff_field1", models.IntegerField()),
                ("in_suff_field2", models.TextField(blank=True, null=True)),
                ("ens_dup", models.IntegerField()),
                ("ensure_txt", models.TextField(blank=True, null=True)),
                ("me_e_r_me_m", models.CharField(max_length=2)),
                ("delete1", models.IntegerField()),
                ("fin_det", models.CharField(blank=True, max_length=10, null=True)),
                ("detail_source", models.IntegerField()),
                (
                    "not_tried_rsn",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("not_date", models.DateField(blank=True, null=True)),
                ("not_date_sts", models.IntegerField()),
                ("mat_code", models.CharField(blank=True, max_length=13, null=True)),
                ("annu_cum", models.CharField(blank=True, max_length=10, null=True)),
                ("applic", models.CharField(blank=True, max_length=20, null=True)),
                ("mtbf", models.CharField(blank=True, max_length=10, null=True)),
                ("msd", models.CharField(blank=True, max_length=10, null=True)),
                ("prog_int", models.CharField(blank=True, max_length=100, null=True)),
                ("prog_toll", models.CharField(blank=True, max_length=100, null=True)),
                ("alt_sts", models.IntegerField()),
                ("file_name", models.CharField(blank=True, max_length=100, null=True)),
                ("product_grade", models.IntegerField()),
                ("intramoving", models.IntegerField()),
                ("dwg_move", models.IntegerField()),
                ("real_move", models.IntegerField()),
                ("datasheet_move", models.IntegerField()),
                (
                    "metric_size_dig1",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "metric_size_dig2",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("head", models.CharField(blank=True, max_length=10, null=True)),
                ("length_dig1", models.CharField(blank=True, max_length=10, null=True)),
                ("length_dig2", models.CharField(blank=True, max_length=10, null=True)),
                ("material", models.CharField(blank=True, max_length=10, null=True)),
                ("finish", models.CharField(blank=True, max_length=10, null=True)),
                ("suf_dig1", models.CharField(blank=True, max_length=10, null=True)),
                ("suf_dig2", models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                "db_table": "lom_ntry_07_11_2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNtry31072021",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.IntegerField()),
                ("lomtype", models.CharField(max_length=5)),
                ("sub_type", models.IntegerField()),
                ("value", models.CharField(max_length=15)),
                ("malefe", models.CharField(max_length=7)),
                ("noofpins", models.CharField(max_length=25)),
                ("straightright", models.CharField(max_length=30)),
                ("noofrows", models.CharField(max_length=15)),
                ("pcbthickness", models.CharField(max_length=20)),
                ("sqmm", models.IntegerField()),
                ("noofcores", models.IntegerField()),
                ("noofstrands", models.IntegerField()),
                ("strandthickness", models.FloatField()),
                ("voltagerating", models.CharField(max_length=15)),
                ("currentrating", models.CharField(max_length=15)),
                ("od", models.CharField(max_length=15)),
                ("operatingtemperature", models.CharField(max_length=15)),
                ("uom", models.CharField(max_length=5)),
                ("approximateprice", models.CharField(max_length=15)),
                ("aseriescode", models.CharField(max_length=15)),
                ("drawdocref", models.CharField(max_length=20)),
                ("proprietary", models.CharField(max_length=3)),
                ("product_code", models.CharField(max_length=10)),
                ("connect_pins", models.IntegerField()),
                ("connt_cat", models.IntegerField()),
                ("connt_sub_cat", models.IntegerField()),
                ("ed_no", models.CharField(max_length=10)),
                ("page_r_serial", models.CharField(max_length=10)),
                ("special_ref", models.CharField(max_length=200)),
                ("specialcare", models.CharField(max_length=3)),
                ("specialcaretext", models.CharField(max_length=50)),
                ("periodmaint", models.CharField(max_length=3)),
                ("periodmaint_attach", models.CharField(max_length=250)),
                ("inspectioncriteria", models.TextField()),
                ("partno", models.IntegerField()),
                ("finishing", models.CharField(max_length=10)),
                ("inserts", models.CharField(max_length=3)),
                ("make", models.CharField(max_length=25)),
                ("tolerance", models.FloatField()),
                ("wattage", models.CharField(max_length=25)),
                ("ppmntcr", models.CharField(max_length=10)),
                ("dimensions", models.CharField(max_length=15)),
                ("package", models.CharField(max_length=15)),
                ("pack_just", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("part_cat", models.CharField(max_length=10)),
                ("createdby", models.CharField(max_length=7)),
                ("me_user", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("categorymas", models.CharField(max_length=11)),
                ("mainfamily", models.CharField(max_length=2)),
                ("subfamily", models.CharField(max_length=3)),
                ("copper_value", models.CharField(max_length=10)),
                ("sequencenum", models.CharField(max_length=5)),
                ("cmsnum", models.CharField(max_length=6)),
                ("matnum", models.CharField(max_length=11)),
                ("matdescription", models.CharField(max_length=40)),
                ("status", models.IntegerField()),
                ("me_comments", models.TextField()),
                ("user_comment", models.TextField()),
                ("user_status", models.IntegerField()),
                ("mat_type", models.CharField(max_length=50)),
                ("mat_group", models.CharField(max_length=50)),
                ("prod_alloc", models.CharField(max_length=25)),
                ("ind_std_desc", models.CharField(max_length=50)),
                ("round_val", models.IntegerField()),
                ("purch_group", models.CharField(max_length=50)),
                ("batch_mang", models.CharField(max_length=100)),
                ("purch_order_text", models.TextField()),
                ("stor_loc", models.CharField(max_length=25)),
                ("serial_no_profile", models.CharField(max_length=50)),
                ("inspection_setup", models.CharField(max_length=100)),
                ("valuation_class", models.IntegerField()),
                ("closed_or_not", models.IntegerField()),
                ("completed_date", models.DateTimeField()),
                ("lom_team", models.CharField(max_length=7)),
                ("testcertificate", models.CharField(max_length=2)),
                ("fyi", models.CharField(max_length=2)),
                ("contact_details", models.TextField()),
                ("new_or_exist_code", models.CharField(max_length=5)),
                ("leadtime", models.CharField(max_length=20)),
                ("moqdetails", models.CharField(max_length=30)),
                ("replytomeuser", models.TextField()),
                ("sapdownload", models.IntegerField()),
                ("completed", models.IntegerField()),
                ("mail_cc", models.CharField(max_length=250)),
                ("gl", models.CharField(max_length=10)),
                ("glapproved", models.CharField(max_length=5)),
                ("gl_date", models.CharField(max_length=20)),
                ("hod", models.CharField(max_length=10)),
                ("hodapproved", models.CharField(max_length=5)),
                ("approve_date", models.CharField(max_length=20)),
                ("reason", models.IntegerField()),
                ("single_source", models.IntegerField()),
                ("others", models.CharField(max_length=200)),
                ("leadingtime", models.IntegerField()),
                ("moq", models.IntegerField()),
                ("spq", models.IntegerField()),
                ("market_avl", models.IntegerField()),
                ("mark_avail", models.TextField()),
                ("attach_purchase", models.CharField(max_length=100)),
                ("mat_empcode", models.CharField(max_length=7)),
                ("in_sufficient", models.IntegerField()),
                ("in_suff_field1", models.IntegerField()),
                ("in_suff_field2", models.TextField()),
                ("ens_dup", models.IntegerField()),
                ("ensure_txt", models.TextField()),
                ("me_e_r_me_m", models.CharField(max_length=2)),
                ("delete1", models.IntegerField()),
                ("fin_det", models.CharField(max_length=10)),
                ("detail_source", models.IntegerField()),
                ("not_tried_rsn", models.CharField(max_length=500)),
                ("not_date", models.DateField(blank=True, null=True)),
                ("not_date_sts", models.IntegerField()),
                ("mat_code", models.CharField(max_length=13)),
                ("annu_cum", models.CharField(max_length=10)),
                ("applic", models.CharField(max_length=20)),
                ("mtbf", models.CharField(max_length=10)),
                ("msd", models.CharField(max_length=10)),
                ("prog_int", models.CharField(max_length=100)),
                ("prog_toll", models.CharField(max_length=100)),
                ("alt_sts", models.IntegerField()),
                ("file_name", models.CharField(max_length=100)),
                ("product_grade", models.IntegerField()),
                ("intramoving", models.IntegerField()),
                ("dwg_move", models.IntegerField()),
                ("real_move", models.IntegerField()),
                ("datasheet_move", models.IntegerField()),
                ("metric_size_dig1", models.CharField(max_length=10)),
                ("metric_size_dig2", models.CharField(max_length=10)),
                ("head", models.CharField(max_length=10)),
                ("length_dig1", models.CharField(max_length=10)),
                ("length_dig2", models.CharField(max_length=10)),
                ("material", models.CharField(max_length=10)),
                ("finish", models.CharField(max_length=10)),
                ("suf_dig1", models.CharField(max_length=10)),
                ("suf_dig2", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "lom_ntry_31-07-2021",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNtryAlternate",
            fields=[
                ("alt_id", models.AutoField(primary_key=True, serialize=False)),
                ("slno", models.IntegerField()),
                ("category", models.IntegerField()),
                ("main_cat", models.CharField(max_length=11)),
                ("sub_cat", models.CharField(max_length=11)),
                ("ntry_date", models.DateField()),
                ("createdby", models.CharField(max_length=6)),
                ("hod", models.IntegerField()),
                ("hod_sts", models.IntegerField()),
                ("hod_comm", models.CharField(max_length=50)),
                ("hod_date", models.DateField()),
                ("meteam_sts", models.IntegerField()),
                ("meteam", models.CharField(max_length=6)),
                ("meteam_comm", models.CharField(max_length=50)),
                ("peer_sts", models.IntegerField()),
                ("peer", models.CharField(max_length=6)),
                ("peer_comm", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "lom_ntry_alternate",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNtryBack",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.IntegerField()),
                ("lomtype", models.CharField(max_length=5)),
                ("sub_type", models.IntegerField()),
                ("value", models.CharField(max_length=15)),
                ("malefe", models.CharField(max_length=7)),
                ("noofpins", models.CharField(max_length=25)),
                ("straightright", models.CharField(max_length=30)),
                ("noofrows", models.CharField(max_length=15)),
                ("pcbthickness", models.CharField(max_length=20)),
                ("sqmm", models.IntegerField()),
                ("noofcores", models.IntegerField()),
                ("noofstrands", models.IntegerField()),
                ("strandthickness", models.FloatField()),
                ("voltagerating", models.CharField(max_length=15)),
                ("currentrating", models.CharField(max_length=15)),
                ("od", models.CharField(max_length=15)),
                ("operatingtemperature", models.CharField(max_length=15)),
                ("uom", models.CharField(max_length=5)),
                ("approximateprice", models.CharField(max_length=15)),
                ("aseriescode", models.CharField(max_length=15)),
                ("drawdocref", models.CharField(max_length=20)),
                ("proprietary", models.CharField(max_length=3)),
                ("product_code", models.CharField(max_length=10)),
                ("connect_pins", models.IntegerField()),
                ("connt_cat", models.IntegerField()),
                ("connt_sub_cat", models.IntegerField()),
                ("ed_no", models.CharField(max_length=10)),
                ("page_r_serial", models.CharField(max_length=10)),
                ("special_ref", models.CharField(max_length=200)),
                ("specialcare", models.CharField(max_length=3)),
                ("specialcaretext", models.CharField(max_length=50)),
                ("periodmaint", models.CharField(max_length=3)),
                ("periodmaint_attach", models.CharField(max_length=250)),
                ("inspectioncriteria", models.TextField()),
                ("partno", models.IntegerField()),
                ("finishing", models.CharField(max_length=10)),
                ("inserts", models.CharField(max_length=3)),
                ("make", models.CharField(max_length=25)),
                ("tolerance", models.FloatField()),
                ("wattage", models.CharField(max_length=25)),
                ("ppmntcr", models.CharField(max_length=10)),
                ("dimensions", models.CharField(max_length=15)),
                ("package", models.CharField(max_length=15)),
                ("pack_just", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("part_cat", models.CharField(max_length=10)),
                ("createdby", models.CharField(max_length=7)),
                ("me_user", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("categorymas", models.CharField(max_length=11)),
                ("mainfamily", models.CharField(max_length=2)),
                ("subfamily", models.CharField(max_length=3)),
                ("copper_value", models.CharField(max_length=10)),
                ("sequencenum", models.CharField(max_length=5)),
                ("cmsnum", models.CharField(max_length=6)),
                ("matnum", models.CharField(max_length=11)),
                ("matdescription", models.CharField(max_length=40)),
                ("status", models.IntegerField()),
                ("me_comments", models.TextField()),
                ("user_comment", models.TextField()),
                ("user_status", models.IntegerField()),
                ("mat_type", models.CharField(max_length=50)),
                ("mat_group", models.CharField(max_length=50)),
                ("prod_alloc", models.CharField(max_length=25)),
                ("ind_std_desc", models.CharField(max_length=50)),
                ("round_val", models.IntegerField()),
                ("purch_group", models.CharField(max_length=50)),
                ("batch_mang", models.CharField(max_length=100)),
                ("purch_order_text", models.TextField()),
                ("stor_loc", models.CharField(max_length=25)),
                ("serial_no_profile", models.CharField(max_length=50)),
                ("inspection_setup", models.CharField(max_length=100)),
                ("valuation_class", models.IntegerField()),
                ("closed_or_not", models.IntegerField()),
                ("completed_date", models.DateTimeField()),
                ("lom_team", models.CharField(max_length=7)),
                ("testcertificate", models.CharField(max_length=2)),
                ("fyi", models.CharField(max_length=2)),
                ("contact_details", models.TextField()),
                ("new_or_exist_code", models.CharField(max_length=5)),
                ("leadtime", models.CharField(max_length=20)),
                ("moqdetails", models.CharField(max_length=30)),
                ("replytomeuser", models.TextField()),
                ("sapdownload", models.IntegerField()),
                ("completed", models.IntegerField()),
                ("mail_cc", models.CharField(max_length=250)),
                ("gl", models.CharField(max_length=10)),
                ("glapproved", models.CharField(max_length=5)),
                ("gl_date", models.CharField(max_length=20)),
                ("hod", models.CharField(max_length=10)),
                ("hodapproved", models.CharField(max_length=5)),
                ("approve_date", models.CharField(max_length=20)),
                ("reason", models.IntegerField()),
                ("single_source", models.IntegerField()),
                ("others", models.CharField(max_length=200)),
                ("leadingtime", models.IntegerField()),
                ("moq", models.IntegerField()),
                ("spq", models.IntegerField()),
                ("market_avl", models.IntegerField()),
                ("mark_avail", models.TextField()),
                ("attach_purchase", models.CharField(max_length=100)),
                ("mat_empcode", models.CharField(max_length=7)),
                ("in_sufficient", models.IntegerField()),
                ("in_suff_field1", models.IntegerField()),
                ("in_suff_field2", models.TextField()),
                ("ens_dup", models.IntegerField()),
                ("ensure_txt", models.TextField()),
                ("me_e_r_me_m", models.CharField(max_length=2)),
                ("delete1", models.IntegerField()),
                ("fin_det", models.CharField(max_length=10)),
                ("detail_source", models.IntegerField()),
                ("not_tried_rsn", models.CharField(max_length=500)),
                ("not_date", models.DateField(blank=True, null=True)),
                ("not_date_sts", models.IntegerField()),
                ("mat_code", models.CharField(max_length=13)),
                ("annu_cum", models.CharField(max_length=10)),
                ("applic", models.CharField(max_length=20)),
                ("mtbf", models.CharField(max_length=10)),
                ("msd", models.CharField(max_length=10)),
                ("prog_int", models.CharField(max_length=100)),
                ("prog_toll", models.CharField(max_length=100)),
                ("alt_sts", models.IntegerField()),
                ("file_name", models.CharField(max_length=100)),
                ("product_grade", models.IntegerField()),
                ("intramoving", models.IntegerField()),
                ("dwg_move", models.IntegerField()),
                ("real_move", models.IntegerField()),
                ("datasheet_move", models.IntegerField()),
                ("metric_size_dig1", models.CharField(max_length=10)),
                ("metric_size_dig2", models.CharField(max_length=10)),
                ("head", models.CharField(max_length=10)),
                ("length_dig1", models.CharField(max_length=10)),
                ("length_dig2", models.CharField(max_length=10)),
                ("material", models.CharField(max_length=10)),
                ("finish", models.CharField(max_length=10)),
                ("suf_dig1", models.CharField(max_length=10)),
                ("suf_dig2", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "lom_ntry_back",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNtryBackup",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.IntegerField()),
                ("lomtype", models.CharField(max_length=5)),
                ("sub_type", models.IntegerField()),
                ("value", models.CharField(max_length=15)),
                ("malefe", models.CharField(max_length=7)),
                ("noofpins", models.CharField(max_length=25)),
                ("straightright", models.CharField(max_length=30)),
                ("noofrows", models.CharField(max_length=15)),
                ("pcbthickness", models.CharField(max_length=20)),
                ("sqmm", models.IntegerField()),
                ("noofcores", models.IntegerField()),
                ("noofstrands", models.IntegerField()),
                ("strandthickness", models.FloatField()),
                ("voltagerating", models.CharField(max_length=15)),
                ("currentrating", models.CharField(max_length=15)),
                ("od", models.CharField(max_length=15)),
                ("operatingtemperature", models.CharField(max_length=15)),
                ("uom", models.CharField(max_length=5)),
                ("approximateprice", models.CharField(max_length=15)),
                ("aseriescode", models.CharField(max_length=15)),
                ("drawdocref", models.CharField(max_length=20)),
                ("proprietary", models.CharField(max_length=3)),
                ("product_code", models.CharField(max_length=10)),
                ("connect_pins", models.IntegerField()),
                ("connt_cat", models.IntegerField()),
                ("connt_sub_cat", models.IntegerField()),
                ("ed_no", models.CharField(max_length=10)),
                ("page_r_serial", models.CharField(max_length=10)),
                ("special_ref", models.CharField(max_length=200)),
                ("specialcare", models.CharField(max_length=3)),
                ("specialcaretext", models.CharField(max_length=50)),
                ("periodmaint", models.CharField(max_length=3)),
                ("periodmaint_attach", models.CharField(max_length=250)),
                ("inspectioncriteria", models.TextField()),
                ("partno", models.IntegerField()),
                ("finishing", models.CharField(max_length=10)),
                ("inserts", models.CharField(max_length=3)),
                ("make", models.CharField(max_length=25)),
                ("tolerance", models.FloatField()),
                ("wattage", models.CharField(max_length=25)),
                ("ppmntcr", models.CharField(max_length=10)),
                ("dimensions", models.CharField(max_length=15)),
                ("package", models.CharField(max_length=15)),
                ("pack_just", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("part_cat", models.CharField(max_length=10)),
                ("createdby", models.CharField(max_length=7)),
                ("me_user", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("categorymas", models.CharField(max_length=11)),
                ("mainfamily", models.CharField(max_length=2)),
                ("subfamily", models.CharField(max_length=3)),
                ("copper_value", models.CharField(max_length=10)),
                ("sequencenum", models.CharField(max_length=5)),
                ("cmsnum", models.CharField(max_length=6)),
                ("matnum", models.CharField(max_length=11)),
                ("matdescription", models.CharField(max_length=40)),
                ("status", models.IntegerField()),
                ("me_comments", models.TextField()),
                ("user_comment", models.TextField()),
                ("user_status", models.IntegerField()),
                ("mat_type", models.CharField(max_length=50)),
                ("mat_group", models.CharField(max_length=50)),
                ("prod_alloc", models.CharField(max_length=25)),
                ("ind_std_desc", models.CharField(max_length=50)),
                ("round_val", models.IntegerField()),
                ("purch_group", models.CharField(max_length=50)),
                ("batch_mang", models.CharField(max_length=100)),
                ("purch_order_text", models.TextField()),
                ("stor_loc", models.CharField(max_length=25)),
                ("serial_no_profile", models.CharField(max_length=50)),
                ("inspection_setup", models.CharField(max_length=100)),
                ("valuation_class", models.IntegerField()),
                ("closed_or_not", models.IntegerField()),
                ("completed_date", models.DateTimeField()),
                ("lom_team", models.CharField(max_length=7)),
                ("testcertificate", models.CharField(max_length=2)),
                ("fyi", models.CharField(max_length=2)),
                ("contact_details", models.TextField()),
                ("new_or_exist_code", models.CharField(max_length=5)),
                ("leadtime", models.CharField(max_length=20)),
                ("moqdetails", models.CharField(max_length=30)),
                ("replytomeuser", models.TextField()),
                ("sapdownload", models.IntegerField()),
                ("completed", models.IntegerField()),
                ("mail_cc", models.CharField(max_length=250)),
                ("gl", models.CharField(max_length=10)),
                ("glapproved", models.CharField(max_length=5)),
                ("gl_date", models.CharField(max_length=20)),
                ("hod", models.CharField(max_length=10)),
                ("hodapproved", models.CharField(max_length=5)),
                ("approve_date", models.CharField(max_length=20)),
                ("reason", models.IntegerField()),
                ("single_source", models.IntegerField()),
                ("others", models.CharField(max_length=200)),
                ("leadingtime", models.IntegerField()),
                ("moq", models.IntegerField()),
                ("spq", models.IntegerField()),
                ("market_avl", models.IntegerField()),
                ("mark_avail", models.TextField()),
                ("attach_purchase", models.CharField(max_length=100)),
                ("mat_empcode", models.CharField(max_length=7)),
                ("in_sufficient", models.IntegerField()),
                ("in_suff_field1", models.IntegerField()),
                ("in_suff_field2", models.TextField()),
                ("ens_dup", models.IntegerField()),
                ("ensure_txt", models.TextField()),
                ("me_e_r_me_m", models.CharField(max_length=2)),
                ("delete1", models.IntegerField()),
                ("fin_det", models.CharField(max_length=10)),
                ("detail_source", models.IntegerField()),
                ("not_tried_rsn", models.CharField(max_length=500)),
                ("not_date", models.DateField(blank=True, null=True)),
                ("not_date_sts", models.IntegerField()),
                ("mat_code", models.CharField(max_length=13)),
                ("annu_cum", models.CharField(max_length=10)),
                ("applic", models.CharField(max_length=20)),
                ("mtbf", models.CharField(max_length=10)),
                ("msd", models.CharField(max_length=10)),
                ("prog_int", models.CharField(max_length=100)),
                ("prog_toll", models.CharField(max_length=100)),
                ("alt_sts", models.IntegerField()),
                ("file_name", models.CharField(max_length=100)),
                ("product_grade", models.IntegerField()),
                ("intramoving", models.IntegerField()),
                ("dwg_move", models.IntegerField()),
                ("real_move", models.IntegerField()),
                ("datasheet_move", models.IntegerField()),
                ("metric_size_dig1", models.CharField(max_length=10)),
                ("metric_size_dig2", models.CharField(max_length=10)),
                ("head", models.CharField(max_length=10)),
                ("length_dig1", models.CharField(max_length=10)),
                ("length_dig2", models.CharField(max_length=10)),
                ("material", models.CharField(max_length=10)),
                ("finish", models.CharField(max_length=10)),
                ("suf_dig1", models.CharField(max_length=10)),
                ("suf_dig2", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "lom_ntry_backup",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNtryOld",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.IntegerField()),
                ("lomtype", models.CharField(max_length=5)),
                ("sub_type", models.IntegerField()),
                ("value", models.CharField(max_length=15)),
                ("malefe", models.CharField(max_length=7)),
                ("noofpins", models.CharField(max_length=25)),
                ("straightright", models.CharField(max_length=30)),
                ("noofrows", models.CharField(max_length=15)),
                ("pcbthickness", models.CharField(max_length=20)),
                ("sqmm", models.IntegerField()),
                ("noofcores", models.IntegerField()),
                ("noofstrands", models.IntegerField()),
                ("strandthickness", models.FloatField()),
                ("voltagerating", models.CharField(max_length=15)),
                ("currentrating", models.CharField(max_length=15)),
                ("od", models.CharField(max_length=15)),
                ("operatingtemperature", models.CharField(max_length=15)),
                ("uom", models.CharField(max_length=5)),
                ("approximateprice", models.CharField(max_length=15)),
                ("aseriescode", models.CharField(max_length=15)),
                ("drawdocref", models.CharField(max_length=20)),
                ("proprietary", models.CharField(max_length=3)),
                ("product_code", models.CharField(max_length=10)),
                ("connect_pins", models.IntegerField()),
                ("connt_cat", models.IntegerField()),
                ("connt_sub_cat", models.IntegerField()),
                ("ed_no", models.CharField(max_length=10)),
                ("page_r_serial", models.CharField(max_length=10)),
                ("special_ref", models.CharField(max_length=200)),
                ("specialcare", models.CharField(max_length=3)),
                ("specialcaretext", models.CharField(max_length=50)),
                ("periodmaint", models.CharField(max_length=3)),
                ("periodmaint_attach", models.CharField(max_length=250)),
                ("inspectioncriteria", models.TextField()),
                ("partno", models.IntegerField()),
                ("finishing", models.CharField(max_length=10)),
                ("inserts", models.CharField(max_length=3)),
                ("make", models.CharField(max_length=25)),
                ("tolerance", models.FloatField()),
                ("wattage", models.CharField(max_length=25)),
                ("ppmntcr", models.CharField(max_length=10)),
                ("dimensions", models.CharField(max_length=15)),
                ("package", models.CharField(max_length=15)),
                ("pack_just", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("part_cat", models.CharField(max_length=10)),
                ("createdby", models.CharField(max_length=7)),
                ("me_user", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("categorymas", models.CharField(max_length=11)),
                ("mainfamily", models.CharField(max_length=2)),
                ("subfamily", models.CharField(max_length=3)),
                ("copper_value", models.CharField(max_length=10)),
                ("sequencenum", models.CharField(max_length=5)),
                ("cmsnum", models.CharField(max_length=6)),
                ("matnum", models.CharField(max_length=11)),
                ("matdescription", models.CharField(max_length=40)),
                ("status", models.IntegerField()),
                ("me_comments", models.TextField()),
                ("user_comment", models.TextField()),
                ("user_status", models.IntegerField()),
                ("mat_type", models.CharField(max_length=50)),
                ("mat_group", models.CharField(max_length=50)),
                ("prod_alloc", models.CharField(max_length=25)),
                ("ind_std_desc", models.CharField(max_length=50)),
                ("round_val", models.IntegerField()),
                ("purch_group", models.CharField(max_length=50)),
                ("batch_mang", models.CharField(max_length=100)),
                ("purch_order_text", models.TextField()),
                ("stor_loc", models.CharField(max_length=25)),
                ("serial_no_profile", models.CharField(max_length=50)),
                ("inspection_setup", models.CharField(max_length=100)),
                ("valuation_class", models.IntegerField()),
                ("closed_or_not", models.IntegerField()),
                ("completed_date", models.DateTimeField()),
                ("lom_team", models.CharField(max_length=7)),
                ("testcertificate", models.CharField(max_length=2)),
                ("fyi", models.CharField(max_length=2)),
                ("contact_details", models.TextField()),
                ("new_or_exist_code", models.CharField(max_length=5)),
                ("leadtime", models.CharField(max_length=20)),
                ("moqdetails", models.CharField(max_length=30)),
                ("replytomeuser", models.TextField()),
                ("sapdownload", models.IntegerField()),
                ("completed", models.IntegerField()),
                ("mail_cc", models.CharField(max_length=250)),
                ("gl", models.CharField(max_length=10)),
                ("glapproved", models.CharField(max_length=5)),
                ("gl_date", models.CharField(max_length=20)),
                ("hod", models.CharField(max_length=10)),
                ("hodapproved", models.CharField(max_length=5)),
                ("approve_date", models.CharField(max_length=20)),
                ("reason", models.IntegerField()),
                ("single_source", models.IntegerField()),
                ("others", models.CharField(max_length=200)),
                ("leadingtime", models.IntegerField()),
                ("moq", models.IntegerField()),
                ("spq", models.IntegerField()),
                ("market_avl", models.IntegerField()),
                ("mark_avail", models.TextField()),
                ("attach_purchase", models.CharField(max_length=100)),
                ("mat_empcode", models.CharField(max_length=7)),
                ("in_sufficient", models.IntegerField()),
                ("in_suff_field1", models.IntegerField()),
                ("in_suff_field2", models.TextField()),
                ("ens_dup", models.IntegerField()),
                ("ensure_txt", models.TextField()),
                ("me_e_r_me_m", models.CharField(max_length=2)),
                ("delete1", models.IntegerField()),
                ("fin_det", models.CharField(max_length=10)),
                ("detail_source", models.IntegerField()),
                ("not_tried_rsn", models.CharField(max_length=500)),
                ("not_date", models.DateField(blank=True, null=True)),
                ("not_date_sts", models.IntegerField()),
                ("mat_code", models.CharField(max_length=13)),
                ("annu_cum", models.CharField(max_length=10)),
                ("applic", models.CharField(max_length=20)),
                ("mtbf", models.CharField(max_length=10)),
                ("msd", models.CharField(max_length=10)),
                ("prog_int", models.CharField(max_length=100)),
                ("prog_toll", models.CharField(max_length=100)),
                ("alt_sts", models.IntegerField()),
                ("file_name", models.CharField(max_length=100)),
                ("product_grade", models.IntegerField()),
                ("intramoving", models.IntegerField()),
                ("dwg_move", models.IntegerField()),
                ("real_move", models.IntegerField()),
                ("datasheet_move", models.IntegerField()),
                ("metric_size_dig1", models.CharField(max_length=10)),
                ("metric_size_dig2", models.CharField(max_length=10)),
                ("head", models.CharField(max_length=10)),
                ("length_dig1", models.CharField(max_length=10)),
                ("length_dig2", models.CharField(max_length=10)),
                ("material", models.CharField(max_length=10)),
                ("finish", models.CharField(max_length=10)),
                ("suf_dig1", models.CharField(max_length=10)),
                ("suf_dig2", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "lom_ntry_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNumMaster",
            fields=[
                ("num_id", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.IntegerField()),
                ("categoryname", models.CharField(max_length=100)),
                ("mainfamily", models.CharField(max_length=2)),
                ("mainfamilyname", models.CharField(max_length=200)),
                ("subfamily", models.CharField(max_length=3)),
                ("subfamilyname", models.CharField(max_length=500)),
                ("startnum", models.CharField(max_length=5)),
                ("subfalimy_shortname", models.CharField(max_length=100)),
                ("sd_num", models.CharField(max_length=8)),
                ("round_val", models.IntegerField()),
                ("msd_valid", models.IntegerField()),
                ("cate_name", models.CharField(max_length=15)),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("deletedby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
            ],
            options={
                "db_table": "lom_num_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomNumMasterOld",
            fields=[
                ("category", models.CharField(max_length=1)),
                ("num_id", models.AutoField(primary_key=True, serialize=False)),
                ("categoryname", models.CharField(max_length=100)),
                ("mainfamily", models.CharField(max_length=2)),
                ("mainfamilyname", models.CharField(max_length=200)),
                ("subfamily", models.CharField(max_length=3)),
                ("subfamilyname", models.CharField(max_length=500)),
                ("startnum", models.CharField(max_length=5)),
                ("subfalimy_shortname", models.CharField(max_length=100)),
                ("sd_num", models.CharField(max_length=8)),
                ("round_val", models.IntegerField()),
                ("msd_valid", models.IntegerField()),
                ("cate_name", models.CharField(max_length=15)),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("deletedby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
            ],
            options={
                "db_table": "lom_num_master_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomPartnoNtry",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("ischecked", models.CharField(max_length=2)),
                ("slno", models.IntegerField()),
                (
                    "partno",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=170,
                        null=True,
                    ),
                ),
                ("make", models.CharField(blank=True, max_length=50, null=True)),
                ("spq", models.CharField(blank=True, max_length=100, null=True)),
                ("packing", models.CharField(blank=True, max_length=100, null=True)),
                ("mark_code", models.CharField(blank=True, max_length=25, null=True)),
                ("part_cat", models.CharField(blank=True, max_length=20, null=True)),
                ("rdso", models.CharField(blank=True, max_length=15, null=True)),
                ("units", models.CharField(blank=True, max_length=50, null=True)),
                ("rel_data", models.CharField(blank=True, max_length=50, null=True)),
                ("datasheetstatus", models.CharField(max_length=1)),
                (
                    "datasheet_filename",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "datasheet_last_update",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("pcn_name", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "pcn_attach",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "pcn_last_update",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("sapdownload", models.IntegerField()),
                (
                    "market_aval",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("due_date", models.DateField()),
                ("file_name", models.CharField(blank=True, max_length=200, null=True)),
                ("real_file", models.CharField(blank=True, max_length=100, null=True)),
                ("valu", models.CharField(blank=True, max_length=20, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                (
                    "in_suff_field5",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("del_by", models.CharField(blank=True, max_length=10, null=True)),
                ("dwg", models.CharField(blank=True, max_length=50, null=True)),
                ("intramoving", models.IntegerField()),
                ("dwg_move", models.IntegerField()),
                ("real_move", models.IntegerField()),
                ("datasheet_move", models.IntegerField()),
                ("rohs", models.IntegerField(blank=True, null=True)),
                ("temperat", models.CharField(blank=True, max_length=20, null=True)),
                ("createdby", models.IntegerField()),
                ("mpndesc", models.CharField(blank=True, max_length=50, null=True)),
                ("pack", models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                "db_table": "lom_partno_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomPartnoNtry31072021",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("ischecked", models.CharField(max_length=2)),
                ("slno", models.IntegerField()),
                ("partno", models.CharField(max_length=35)),
                ("make", models.CharField(max_length=25)),
                ("spq", models.CharField(max_length=100)),
                ("packing", models.CharField(max_length=100)),
                ("mark_code", models.CharField(max_length=25)),
                ("part_cat", models.CharField(max_length=20)),
                ("rdso", models.CharField(max_length=15)),
                ("units", models.CharField(max_length=50)),
                ("rel_data", models.CharField(max_length=50)),
                ("datasheetstatus", models.CharField(max_length=1)),
                ("datasheet_filename", models.CharField(max_length=500)),
                ("datasheet_last_update", models.CharField(max_length=500)),
                ("pcn_name", models.CharField(max_length=1000)),
                ("pcn_attach", models.CharField(max_length=1000)),
                ("pcn_last_update", models.CharField(max_length=500)),
                ("sapdownload", models.IntegerField()),
                ("market_aval", models.CharField(max_length=100)),
                ("due_date", models.DateField()),
                ("file_name", models.CharField(max_length=200)),
                ("real_file", models.CharField(max_length=100)),
                ("valu", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("in_suff_field5", models.CharField(max_length=10)),
                ("del_by", models.CharField(max_length=10)),
                ("dwg", models.CharField(max_length=30)),
                ("intramoving", models.IntegerField()),
                ("dwg_move", models.IntegerField()),
                ("real_move", models.IntegerField()),
                ("datasheet_move", models.IntegerField()),
            ],
            options={
                "db_table": "lom_partno_ntry_31-07-2021",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomPartnoNtryTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("matnum", models.CharField(max_length=15)),
                ("matdesc", models.CharField(max_length=100)),
                ("partno", models.CharField(max_length=50)),
                ("make", models.CharField(max_length=50)),
                ("market_aval", models.CharField(max_length=50)),
                ("due_date", models.DateField()),
            ],
            options={
                "db_table": "lom_partno_ntry_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomSelMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("category", models.IntegerField()),
                ("master_type", models.CharField(blank=True, max_length=50, null=True)),
                ("selection", models.CharField(blank=True, max_length=100, null=True)),
                ("suffix", models.CharField(blank=True, max_length=20, null=True)),
                ("sufixes", models.IntegerField()),
                ("conditions", models.CharField(blank=True, max_length=10, null=True)),
                ("createdby", models.CharField(blank=True, max_length=7, null=True)),
                ("delete1", models.IntegerField()),
                ("deletedate", models.DateField()),
                ("deletedby", models.CharField(blank=True, max_length=7, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "lom_sel_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomSelVerMas",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value_id", models.CharField(max_length=50)),
                ("short_form", models.CharField(max_length=200)),
                ("mat_type_group", models.CharField(max_length=100)),
                ("status", models.CharField(max_length=20)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_sel_ver_mas",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomStatusMaster",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=7)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("deletedby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
            ],
            options={
                "db_table": "lom_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomTargetdays",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_id", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("task", models.IntegerField()),
                ("othertask", models.CharField(blank=True, max_length=400, null=True)),
                ("days", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_targetdays",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomTargetdaysUpdt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_id", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("task", models.IntegerField()),
                ("othertask", models.CharField(max_length=400)),
                ("days", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_targetdays_updt",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomTargethis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_id", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("target_date", models.DateField()),
                (
                    "justification",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("total_days", models.IntegerField()),
                ("date", models.DateField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_targethis",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomTargethisUpdt",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("request_id", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("target_date", models.DateField()),
                ("justification", models.CharField(max_length=300)),
                ("total_days", models.IntegerField()),
                ("date", models.DateField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_targethis_updt",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomTeam",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lom_team",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomType",
            fields=[
                ("typeid", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.IntegerField()),
                ("typename", models.CharField(max_length=500)),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("deleteby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "lom_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LomUserMeHis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("status", models.IntegerField()),
                ("comments", models.TextField(blank=True, null=True)),
                ("date", models.DateField()),
                ("assocaite", models.CharField(blank=True, max_length=7, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "lom_user_me_his",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Ltcreimbursesubdata",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("ref_no", models.IntegerField()),
                ("jrny_begin", models.DateField()),
                ("jrny_end", models.DateField()),
                ("claming_amount", models.FloatField()),
                ("jrny_strtpoint", models.CharField(max_length=500)),
                ("jrny_endpoint", models.CharField(max_length=500)),
                ("travelmode", models.CharField(max_length=50)),
                ("clasoftravel", models.CharField(max_length=50)),
                ("ticketno", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "ltcreimbursesubdata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LugsMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("wfno", models.CharField(max_length=25)),
                ("title", models.CharField(max_length=100)),
                ("type", models.CharField(max_length=100)),
                ("to_lug_type", models.CharField(max_length=15)),
                ("to_ferrule", models.CharField(max_length=50)),
                ("size", models.CharField(max_length=15)),
                ("to_from", models.CharField(max_length=4)),
                ("length", models.IntegerField()),
                ("from_lug_type", models.CharField(max_length=15)),
                ("from_ferrule", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lugs_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LugsMasterTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("wfno", models.CharField(max_length=25)),
                ("title", models.CharField(max_length=100)),
                ("type", models.CharField(max_length=100)),
                ("to_lug_type", models.CharField(max_length=15)),
                ("to_ferrule", models.CharField(max_length=50)),
                ("size", models.CharField(max_length=15)),
                ("to_from", models.CharField(max_length=4)),
            ],
            options={
                "db_table": "lugs_master_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LugsMatnrMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.CharField(max_length=15)),
                ("desc", models.CharField(max_length=50)),
                ("color", models.CharField(max_length=15)),
                ("photo_type", models.CharField(max_length=5)),
                ("createb_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "lugs_matnr_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LunchEntrys",
            fields=[
                ("lunch_id", models.AutoField(primary_key=True, serialize=False)),
                ("ass_guest", models.CharField(max_length=2)),
                ("type_lunch", models.CharField(max_length=2)),
                ("type_guest", models.CharField(max_length=2)),
                ("empcode", models.CharField(max_length=7)),
                ("lunch_desc", models.CharField(max_length=250)),
                ("qty", models.CharField(max_length=3)),
                ("lucch_time", models.CharField(max_length=1)),
                ("lunch_code", models.CharField(max_length=5)),
                ("lunch_date", models.DateField()),
                ("lunch_timestamp", models.DateTimeField()),
                ("enteredby", models.CharField(max_length=7)),
                ("released", models.CharField(max_length=1)),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "lunch_entrys",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="LunchMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("lunch_mid", models.IntegerField()),
                ("lunch_name", models.CharField(max_length=50)),
                ("lunch_type", models.CharField(max_length=1)),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "lunch_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Mail",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("from_field", models.IntegerField(db_column="from")),
                ("to", models.IntegerField()),
                ("desc", models.CharField(max_length=500)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mail",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MailDat",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("msg", models.CharField(max_length=150)),
                ("rcvr", models.IntegerField()),
                ("sts", models.CharField(max_length=15)),
                ("date", models.DateField()),
                ("break_field", models.IntegerField(db_column="break")),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mail_dat",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainDvlprLgin",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("date", models.DateField()),
                ("in_field", models.TimeField(db_column="in")),
                ("out", models.TimeField()),
                ("type", models.CharField(max_length=20)),
                ("tot_hr", models.TimeField()),
                ("wrkd_hr", models.TimeField()),
                ("rmn_hr", models.TimeField()),
                ("max_updt_time", models.TimeField()),
                ("on_off", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "main_dvlpr_lgin",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainEmpTothrs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("tot_hrs", models.CharField(max_length=20)),
                ("dvlpr_type", models.CharField(max_length=1)),
                ("module_type", models.CharField(max_length=5)),
                ("empname", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "main_emp_tothrs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainFspecOuttype",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("outtype_name", models.CharField(max_length=50)),
                ("type", models.CharField(max_length=10)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "main_fspec_outtype",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainFspecTblLgc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_no", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("tbl", models.CharField(max_length=50)),
                ("tbl_desc", models.CharField(max_length=500)),
                ("type", models.CharField(max_length=150)),
                ("mod", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "main_fspec_tbl_lgc",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainPrgTypeMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("prg_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.IntegerField()),
            ],
            options={
                "db_table": "main_prg_type_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainPrgTypeNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_no", models.IntegerField()),
                ("prg_slno", models.IntegerField()),
                ("prg_desc", models.CharField(max_length=500)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "main_prg_type_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainSpecIpFlds",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_no", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("fld_name", models.CharField(max_length=50)),
                ("fld_ip_type", models.IntegerField()),
                ("mndtry", models.IntegerField()),
                ("rmrks", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "main_spec_ip_flds",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainSpecMain",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_no", models.IntegerField()),
                ("prcsng_lgc_desc", models.CharField(max_length=1000)),
                ("op_alv", models.CharField(max_length=500)),
                ("op_smrt", models.TextField()),
                ("smrt_ext", models.CharField(max_length=100)),
                ("op_msg", models.CharField(max_length=500)),
                ("fnl_att", models.TextField()),
                ("fnl_ext", models.CharField(max_length=100)),
                ("note", models.CharField(max_length=500)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "main_spec_main",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainSpecPrcsngLgc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_no", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("prsng_val", models.CharField(max_length=1000)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "main_spec_prcsng_lgc",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainSpecSrtOrdr",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_no", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("srt_name", models.CharField(max_length=50)),
                ("srt_type", models.CharField(max_length=4)),
                ("prty", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "main_spec_srt_ordr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTagTime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_no", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("sts", models.IntegerField()),
                ("update_sts", models.IntegerField()),
                ("timestamp", models.CharField(max_length=25)),
                ("last_update_tag", models.IntegerField()),
                ("last_update_tag_timestamp", models.CharField(max_length=50)),
                ("temp_time", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "main_tag_time",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceCategoryMaster",
            fields=[
                ("cat_no", models.AutoField(primary_key=True, serialize=False)),
                ("location", models.CharField(max_length=8)),
                ("cat_name", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceCotegoryMaster",
            fields=[
                ("cat_no", models.AutoField(primary_key=True, serialize=False)),
                ("cat_name", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_cotegory_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceEntry",
            fields=[
                ("main_id", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("maintenance_serial_no", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.TimeField()),
                ("desc", models.TextField(blank=True, null=True)),
                ("repeat_mainid", models.IntegerField()),
                ("status", models.IntegerField()),
                ("category", models.IntegerField()),
                ("sub_cat_no", models.IntegerField()),
                ("ss_cat_no", models.IntegerField()),
                ("req_type", models.IntegerField()),
                ("hod_code", models.IntegerField()),
                ("hod_appr", models.IntegerField()),
                ("hod_date", models.DateTimeField()),
                (
                    "assign_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "sup_asgn_code",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("completed_date", models.DateField()),
                ("completed_time", models.TimeField()),
                ("total_time", models.IntegerField(blank=True, null=True)),
                ("area", models.CharField(blank=True, max_length=5, null=True)),
                ("rating", models.IntegerField()),
                ("cost", models.IntegerField()),
                ("attachment", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceEntry211123",
            fields=[
                ("main_id", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("maintenance_serial_no", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.TimeField()),
                ("desc", models.TextField(blank=True, null=True)),
                ("repeat_mainid", models.IntegerField()),
                ("status", models.IntegerField()),
                ("category", models.IntegerField()),
                ("sub_cat_no", models.IntegerField()),
                ("ss_cat_no", models.IntegerField()),
                ("req_type", models.IntegerField()),
                ("hod_code", models.IntegerField()),
                ("hod_appr", models.IntegerField()),
                ("hod_date", models.DateTimeField()),
                (
                    "assign_code",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "sup_asgn_code",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("completed_date", models.DateField()),
                ("completed_time", models.TimeField()),
                ("total_time", models.IntegerField(blank=True, null=True)),
                ("area", models.CharField(blank=True, max_length=5, null=True)),
                ("rating", models.IntegerField()),
                ("cost", models.IntegerField()),
                ("attachment", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_entry_21_11_23",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceHistory",
            fields=[
                ("seq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("main_id", models.IntegerField()),
                ("status", models.IntegerField()),
                ("comments", models.CharField(max_length=200)),
                ("ntry_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "maintenance_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceNtry",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("req", models.IntegerField()),
                ("date", models.DateField()),
                ("req_time", models.TimeField()),
                ("desc", models.CharField(blank=True, max_length=5000, null=True)),
                (
                    "usr_return_comments",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("dept", models.IntegerField()),
                ("category", models.IntegerField()),
                ("sub_cat_no", models.IntegerField()),
                ("type", models.IntegerField()),
                ("approval", models.IntegerField()),
                ("hod_aprl_sent_date", models.DateField()),
                ("hod_aprl_sent_time", models.TimeField()),
                ("hod", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("hod_time", models.TimeField()),
                (
                    "hod_remarks",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("hod_sts", models.IntegerField()),
                ("ass", models.IntegerField()),
                ("suppport", models.CharField(blank=True, max_length=100, null=True)),
                ("re_ass", models.IntegerField()),
                ("sts_slno", models.IntegerField()),
                ("adopt_type", models.CharField(blank=True, max_length=1, null=True)),
                (
                    "adopt_remarks",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("adopt_date", models.DateField()),
                ("adopt_time", models.TimeField()),
                ("completed_date", models.DateField()),
                ("completed_time", models.TimeField()),
                ("area", models.CharField(blank=True, max_length=5, null=True)),
                ("loc", models.CharField(blank=True, max_length=5, null=True)),
                ("ss_cat_no", models.IntegerField()),
                ("hours", models.IntegerField()),
                ("cost", models.FloatField()),
                (
                    "time_applicability",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                (
                    "rating_applicability",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                ("rating", models.IntegerField()),
                ("ucp_hold_hours", models.TimeField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("exceed", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceRatingNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("feedback_desc", models.IntegerField()),
                ("rating", models.IntegerField()),
                ("remarks", models.CharField(blank=True, max_length=250, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.DateField()),
                (
                    "delete_reason",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
            ],
            options={
                "db_table": "maintenance_rating_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceSsCategoryMaster",
            fields=[
                ("ssub_id", models.AutoField(primary_key=True, serialize=False)),
                ("cat_no", models.IntegerField(blank=True, null=True)),
                ("sub_cat_no", models.IntegerField(blank=True, null=True)),
                ("ss_cat_no", models.IntegerField(blank=True, null=True)),
                (
                    "ss_cat_name",
                    models.CharField(blank=True, max_length=164, null=True),
                ),
                ("min", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                "db_table": "maintenance_ss_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceSsCategoryMasterOld",
            fields=[
                ("ssub_id", models.AutoField(primary_key=True, serialize=False)),
                ("cat_no", models.IntegerField()),
                ("sub_cat_no", models.IntegerField()),
                ("ss_cat_no", models.IntegerField()),
                ("ss_cat_name", models.CharField(max_length=250)),
                ("min", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_ss_category_master_OLD",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceSsCotegoryMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_no", models.IntegerField()),
                ("sub_cat_no", models.IntegerField()),
                ("ss_cat_no", models.IntegerField()),
                (
                    "ss_cat_name",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("hours", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_ss_cotegory_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceStatusMasterNew",
            fields=[
                ("sts_slno", models.AutoField(primary_key=True, serialize=False)),
                ("show_no", models.IntegerField()),
                ("sts_desc", models.CharField(max_length=50)),
                ("mail_des", models.CharField(blank=True, max_length=30, null=True)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_status_master_new",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceStsNtry",
            fields=[
                ("uniq_slno", models.IntegerField()),
                ("comments", models.CharField(blank=True, max_length=500, null=True)),
                ("date", models.DateField()),
                ("sts", models.IntegerField()),
                ("re_ass", models.IntegerField()),
                ("ntry_by", models.IntegerField()),
                ("seq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("ucp_hold_up_sts", models.IntegerField()),
                ("timestampp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_sts_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceSubCategoryMaster",
            fields=[
                ("sub_id", models.AutoField(primary_key=True, serialize=False)),
                ("cat_no", models.IntegerField(blank=True, null=True)),
                ("sub_cat_no", models.IntegerField(blank=True, null=True)),
                (
                    "sub_cat_name",
                    models.CharField(blank=True, max_length=64, null=True),
                ),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.CharField(blank=True, max_length=19, null=True)),
            ],
            options={
                "db_table": "maintenance_sub_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceSubCategoryMasterOld",
            fields=[
                ("sub_id", models.AutoField(primary_key=True, serialize=False)),
                ("cat_no", models.IntegerField()),
                ("sub_cat_no", models.IntegerField()),
                (
                    "sub_cat_name",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_sub_category_master_OLD",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceSubCotegoryMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_no", models.IntegerField()),
                ("sub_cat_no", models.IntegerField()),
                (
                    "sub_cat_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_sub_cotegory_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceTimecal",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("main_id", models.IntegerField()),
                ("empcode", models.CharField(blank=True, max_length=6, null=True)),
                ("date", models.DateField()),
                ("time", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenance_timecal",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenanceTypeMaster",
            fields=[
                ("type_slno", models.AutoField(primary_key=True, serialize=False)),
                ("type_desc", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.IntegerField()),
            ],
            options={
                "db_table": "maintenance_type_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenenceSubCat",
            fields=[
                ("sub_cat_id", models.AutoField(primary_key=True, serialize=False)),
                ("cat_id", models.IntegerField()),
                (
                    "sub_cat_desc",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("created_by", models.IntegerField(db_column="created by")),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenence_sub_cat",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintenenceSubCategory",
            fields=[
                ("sub_cat_id", models.AutoField(primary_key=True, serialize=False)),
                ("cat_id", models.IntegerField(blank=True, null=True)),
                (
                    "sub_cat_desc",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "created_by",
                    models.IntegerField(blank=True, db_column="created by", null=True),
                ),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "maintenence_sub_category",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaintIndexValues",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("maint_entry", models.IntegerField()),
                ("plant", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "maint_index_values",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTr",
            fields=[
                ("tag_no", models.AutoField(primary_key=True, serialize=False)),
                ("tag_desc", models.TextField(blank=True, null=True)),
                ("req", models.CharField(blank=True, max_length=100, null=True)),
                ("dept", models.IntegerField()),
                ("rq_forum", models.CharField(blank=True, max_length=20, null=True)),
                ("rq_desc", models.CharField(blank=True, max_length=100, null=True)),
                ("priority", models.CharField(blank=True, max_length=20, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                ("issue_cat", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "issue_sub_cat",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("status", models.CharField(blank=True, max_length=100, null=True)),
                ("tag_ass", models.CharField(blank=True, max_length=100, null=True)),
                ("support", models.CharField(blank=True, max_length=100, null=True)),
                ("pr_start_date", models.DateField()),
                ("pr_cmpltd_date", models.DateField()),
                ("actual_date", models.DateField()),
                ("act_cmpltd_date", models.DateField()),
                ("confirm", models.CharField(max_length=5)),
                ("createdby", models.IntegerField()),
                ("tag_re_ass", models.CharField(blank=True, max_length=20, null=True)),
                ("mod", models.CharField(blank=True, max_length=20, null=True)),
                ("ccat_name", models.CharField(blank=True, max_length=50, null=True)),
                ("tcode", models.CharField(blank=True, max_length=100, null=True)),
                ("prgrm", models.CharField(blank=True, max_length=500, null=True)),
                ("acptby", models.CharField(blank=True, max_length=50, null=True)),
                ("ac_rmrks", models.CharField(blank=True, max_length=250, null=True)),
                ("req_type", models.IntegerField()),
                ("spnd_time", models.TimeField()),
                ("rating", models.IntegerField()),
                ("poor_avg", models.CharField(blank=True, max_length=500, null=True)),
                ("final_closed", models.IntegerField()),
                ("final_closed_by", models.IntegerField()),
                ("final_closed_date", models.DateField()),
                (
                    "rating_aplicability",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                ("kaizen_user", models.IntegerField()),
                ("last_update_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("supporters", models.CharField(blank=True, max_length=100, null=True)),
                ("prop_compltn_days", models.IntegerField()),
                ("act_compltn_days", models.IntegerField()),
                ("delayed_flag", models.IntegerField()),
                ("new_req_revisionno", models.IntegerField()),
                (
                    "highpriority",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "good_reason",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "tag_no_inti",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "closed_app_sts",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("delete1", models.IntegerField()),
                ("reqt_type", models.IntegerField()),
                ("module_nm", models.TextField(blank=True, null=True)),
                ("reson_fr", models.CharField(blank=True, max_length=1000, null=True)),
                ("assign_date", models.DateField()),
            ],
            options={
                "db_table": "main_tr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTr1",
            fields=[
                ("tag_no", models.AutoField(primary_key=True, serialize=False)),
                ("tag_desc", models.TextField(blank=True, null=True)),
                ("req", models.CharField(blank=True, max_length=100, null=True)),
                ("dept", models.IntegerField()),
                ("rq_forum", models.CharField(blank=True, max_length=20, null=True)),
                ("rq_desc", models.CharField(blank=True, max_length=100, null=True)),
                ("priority", models.CharField(blank=True, max_length=20, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                ("issue_cat", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "issue_sub_cat",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("status", models.CharField(blank=True, max_length=100, null=True)),
                ("tag_ass", models.CharField(blank=True, max_length=100, null=True)),
                ("support", models.CharField(blank=True, max_length=100, null=True)),
                ("pr_start_date", models.DateField()),
                ("pr_cmpltd_date", models.DateField()),
                ("actual_date", models.DateField()),
                ("act_cmpltd_date", models.DateField()),
                ("confirm", models.CharField(max_length=5)),
                ("createdby", models.IntegerField()),
                ("tag_re_ass", models.CharField(blank=True, max_length=20, null=True)),
                ("mod", models.CharField(blank=True, max_length=20, null=True)),
                ("ccat_name", models.CharField(blank=True, max_length=50, null=True)),
                ("tcode", models.CharField(blank=True, max_length=100, null=True)),
                ("prgrm", models.CharField(blank=True, max_length=500, null=True)),
                ("acptby", models.CharField(blank=True, max_length=50, null=True)),
                ("ac_rmrks", models.CharField(blank=True, max_length=250, null=True)),
                ("req_type", models.IntegerField()),
                ("spnd_time", models.TimeField()),
                ("rating", models.IntegerField()),
                ("poor_avg", models.CharField(blank=True, max_length=500, null=True)),
                ("final_closed", models.IntegerField()),
                ("final_closed_by", models.IntegerField()),
                ("final_closed_date", models.DateField()),
                (
                    "rating_aplicability",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                ("kaizen_user", models.IntegerField()),
                ("last_update_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("supporters", models.CharField(blank=True, max_length=100, null=True)),
                ("prop_compltn_days", models.IntegerField()),
                ("act_compltn_days", models.IntegerField()),
                ("delayed_flag", models.IntegerField()),
                ("new_req_revisionno", models.IntegerField()),
                (
                    "highpriority",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "good_reason",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "tag_no_inti",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "closed_app_sts",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("delete1", models.IntegerField()),
                ("reqt_type", models.IntegerField()),
                ("module_nm", models.CharField(blank=True, max_length=350, null=True)),
                ("reson_fr", models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                "db_table": "main_tr1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTr1801",
            fields=[
                ("tag_no", models.AutoField(primary_key=True, serialize=False)),
                ("tag_desc", models.TextField(blank=True, null=True)),
                ("req", models.CharField(blank=True, max_length=100, null=True)),
                ("dept", models.IntegerField()),
                ("rq_forum", models.CharField(blank=True, max_length=20, null=True)),
                ("rq_desc", models.CharField(blank=True, max_length=100, null=True)),
                ("priority", models.CharField(blank=True, max_length=20, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                ("issue_cat", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "issue_sub_cat",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("status", models.CharField(blank=True, max_length=100, null=True)),
                ("tag_ass", models.CharField(blank=True, max_length=100, null=True)),
                ("support", models.CharField(blank=True, max_length=100, null=True)),
                ("pr_start_date", models.DateField()),
                ("pr_cmpltd_date", models.DateField()),
                ("actual_date", models.DateField()),
                ("act_cmpltd_date", models.DateField()),
                ("confirm", models.CharField(max_length=5)),
                ("createdby", models.IntegerField()),
                ("tag_re_ass", models.CharField(blank=True, max_length=20, null=True)),
                ("mod", models.CharField(blank=True, max_length=20, null=True)),
                ("ccat_name", models.CharField(blank=True, max_length=50, null=True)),
                ("tcode", models.CharField(blank=True, max_length=100, null=True)),
                ("prgrm", models.CharField(blank=True, max_length=500, null=True)),
                ("acptby", models.CharField(blank=True, max_length=50, null=True)),
                ("ac_rmrks", models.CharField(blank=True, max_length=250, null=True)),
                ("req_type", models.IntegerField()),
                ("spnd_time", models.TimeField()),
                ("rating", models.IntegerField()),
                ("poor_avg", models.CharField(blank=True, max_length=500, null=True)),
                ("final_closed", models.IntegerField()),
                ("final_closed_by", models.IntegerField()),
                ("final_closed_date", models.DateField()),
                (
                    "rating_aplicability",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                ("kaizen_user", models.IntegerField()),
                ("last_update_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("supporters", models.CharField(blank=True, max_length=100, null=True)),
                ("prop_compltn_days", models.IntegerField()),
                ("act_compltn_days", models.IntegerField()),
                ("delayed_flag", models.IntegerField()),
                ("new_req_revisionno", models.IntegerField()),
                (
                    "highpriority",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "good_reason",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "tag_no_inti",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "closed_app_sts",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("delete1", models.IntegerField()),
                ("reqt_type", models.IntegerField()),
                ("module_nm", models.CharField(blank=True, max_length=350, null=True)),
            ],
            options={
                "db_table": "main_tr_18-01",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrAttachments",
            fields=[
                ("attach_slno", models.AutoField(primary_key=True, serialize=False)),
                ("tag_no", models.IntegerField()),
                ("main_tag_no", models.IntegerField(blank=True, null=True)),
                ("name", models.CharField(blank=True, max_length=150, null=True)),
                ("ext", models.CharField(blank=True, max_length=50, null=True)),
                ("slno", models.IntegerField()),
                ("slno_no", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "main_tr_attachments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrDeveloperAttach",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_no", models.IntegerField()),
                ("original_attach_filename", models.CharField(max_length=200)),
                ("rename_attach_filename", models.CharField(max_length=200)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "main_tr_developer_attach",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrImproveMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("desc", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.DateField()),
                ("delete_reason", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "main_tr_improve_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrNdHistry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("main_tr_slno", models.IntegerField()),
                ("resp", models.IntegerField()),
                ("user", models.IntegerField()),
                ("date", models.DateField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("status", models.IntegerField()),
            ],
            options={
                "db_table": "main_tr_nd_histry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrNdUsr",
            fields=[
                ("rqstnr", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("desc", models.TextField(blank=True, null=True)),
                ("rqstd_date", models.DateField()),
                (
                    "rqstd_date_time",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("sts", models.IntegerField()),
                ("module", models.CharField(blank=True, max_length=20, null=True)),
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("assgn_tag_no", models.IntegerField()),
                ("rmrks", models.CharField(blank=True, max_length=1000, null=True)),
                ("req_up_sts", models.IntegerField()),
                ("tag_confirm_type", models.IntegerField()),
                ("aprove_type", models.CharField(blank=True, max_length=2, null=True)),
                ("usr_sts", models.IntegerField()),
                ("usr_date", models.CharField(blank=True, max_length=20, null=True)),
                ("approve_sts", models.IntegerField()),
                ("approve_by", models.IntegerField(blank=True, null=True)),
                ("appr_by_hd_dr", models.IntegerField()),
                ("hd_app_sts", models.IntegerField()),
                ("hd_app_date", models.CharField(max_length=20)),
                (
                    "approve_timestamp",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "attach_file_rename",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "attach_file_original",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("update_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("highpriority_tag", models.CharField(max_length=10)),
                ("high_prioritytag_sts", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("module_nm", models.TextField(blank=True, null=True)),
                ("reqt_type", models.IntegerField()),
                ("loc", models.CharField(blank=True, max_length=50, null=True)),
                ("other_dept", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "main_tr_nd_usr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrNdUsr0723",
            fields=[
                ("rqstnr", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("desc", models.TextField(blank=True, null=True)),
                ("rqstd_date", models.DateField()),
                (
                    "rqstd_date_time",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("sts", models.IntegerField()),
                ("module", models.CharField(blank=True, max_length=20, null=True)),
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("assgn_tag_no", models.IntegerField()),
                ("rmrks", models.CharField(blank=True, max_length=1000, null=True)),
                ("req_up_sts", models.IntegerField()),
                ("tag_confirm_type", models.IntegerField()),
                ("aprove_type", models.CharField(blank=True, max_length=2, null=True)),
                ("usr_sts", models.IntegerField()),
                ("usr_date", models.CharField(blank=True, max_length=20, null=True)),
                ("approve_sts", models.IntegerField()),
                ("approve_by", models.IntegerField(blank=True, null=True)),
                ("appr_by_hd_dr", models.IntegerField()),
                ("hd_app_sts", models.IntegerField()),
                ("hd_app_date", models.CharField(max_length=20)),
                (
                    "approve_timestamp",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "attach_file_rename",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "attach_file_original",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("update_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("highpriority_tag", models.CharField(max_length=10)),
                ("high_prioritytag_sts", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("module_nm", models.TextField(blank=True, null=True)),
                ("reqt_type", models.IntegerField()),
                ("loc", models.CharField(blank=True, max_length=50, null=True)),
                ("other_dept", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "main_tr_nd_usr_07_23",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrNdUsr0909",
            fields=[
                ("rqstnr", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("desc", models.TextField(blank=True, null=True)),
                ("rqstd_date", models.DateField()),
                (
                    "rqstd_date_time",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("sts", models.IntegerField()),
                ("module", models.CharField(blank=True, max_length=20, null=True)),
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("assgn_tag_no", models.IntegerField()),
                ("rmrks", models.CharField(blank=True, max_length=1000, null=True)),
                ("req_up_sts", models.IntegerField()),
                ("tag_confirm_type", models.IntegerField()),
                ("aprove_type", models.CharField(blank=True, max_length=2, null=True)),
                ("usr_sts", models.IntegerField()),
                ("usr_date", models.CharField(blank=True, max_length=20, null=True)),
                ("approve_sts", models.IntegerField()),
                ("approve_by", models.IntegerField(blank=True, null=True)),
                ("appr_by_hd_dr", models.IntegerField()),
                ("hd_app_sts", models.IntegerField()),
                ("hd_app_date", models.CharField(max_length=20)),
                (
                    "approve_timestamp",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "attach_file_rename",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "attach_file_original",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("update_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("highpriority_tag", models.CharField(max_length=10)),
                ("high_prioritytag_sts", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("module_nm", models.TextField(blank=True, null=True)),
                ("reqt_type", models.IntegerField()),
                ("loc", models.CharField(blank=True, max_length=50, null=True)),
                ("other_dept", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "main_tr_nd_usr_09_09",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrNdUsrOld",
            fields=[
                ("rqstnr", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("desc", models.TextField(blank=True, null=True)),
                ("rqstd_date", models.DateField()),
                (
                    "rqstd_date_time",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("sts", models.IntegerField()),
                ("module", models.CharField(blank=True, max_length=20, null=True)),
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("assgn_tag_no", models.IntegerField()),
                ("rmrks", models.CharField(blank=True, max_length=1000, null=True)),
                ("req_up_sts", models.IntegerField()),
                ("tag_confirm_type", models.IntegerField()),
                ("aprove_type", models.CharField(blank=True, max_length=2, null=True)),
                ("usr_sts", models.IntegerField()),
                ("usr_date", models.CharField(blank=True, max_length=20, null=True)),
                ("approve_sts", models.IntegerField()),
                ("approve_by", models.IntegerField(blank=True, null=True)),
                ("appr_by_hd_dr", models.IntegerField()),
                ("hd_app_sts", models.IntegerField()),
                ("hd_app_date", models.CharField(max_length=20)),
                (
                    "approve_timestamp",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "attach_file_rename",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "attach_file_original",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("update_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("highpriority_tag", models.CharField(max_length=10)),
                ("high_prioritytag_sts", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("module_nm", models.TextField(blank=True, null=True)),
                ("reqt_type", models.IntegerField()),
                ("loc", models.CharField(blank=True, max_length=50, null=True)),
                ("other_dept", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "main_tr_nd_usr_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrOld",
            fields=[
                ("tag_no", models.AutoField(primary_key=True, serialize=False)),
                ("tag_desc", models.TextField(blank=True, null=True)),
                ("req", models.CharField(blank=True, max_length=100, null=True)),
                ("dept", models.IntegerField()),
                ("rq_forum", models.CharField(blank=True, max_length=20, null=True)),
                ("rq_desc", models.CharField(blank=True, max_length=100, null=True)),
                ("priority", models.CharField(blank=True, max_length=20, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                ("issue_cat", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "issue_sub_cat",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("status", models.CharField(blank=True, max_length=100, null=True)),
                ("tag_ass", models.CharField(blank=True, max_length=100, null=True)),
                ("support", models.CharField(blank=True, max_length=100, null=True)),
                ("pr_start_date", models.DateField()),
                ("pr_cmpltd_date", models.DateField()),
                ("actual_date", models.DateField()),
                ("act_cmpltd_date", models.DateField()),
                ("confirm", models.CharField(max_length=5)),
                ("createdby", models.IntegerField()),
                ("tag_re_ass", models.CharField(blank=True, max_length=20, null=True)),
                ("mod", models.CharField(blank=True, max_length=20, null=True)),
                ("ccat_name", models.CharField(blank=True, max_length=50, null=True)),
                ("tcode", models.CharField(blank=True, max_length=100, null=True)),
                ("prgrm", models.CharField(blank=True, max_length=500, null=True)),
                ("acptby", models.CharField(blank=True, max_length=50, null=True)),
                ("ac_rmrks", models.CharField(blank=True, max_length=250, null=True)),
                ("req_type", models.IntegerField()),
                ("spnd_time", models.TimeField()),
                ("rating", models.IntegerField()),
                ("poor_avg", models.CharField(blank=True, max_length=500, null=True)),
                ("final_closed", models.IntegerField()),
                ("final_closed_by", models.IntegerField()),
                ("final_closed_date", models.DateField()),
                (
                    "rating_aplicability",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                ("kaizen_user", models.IntegerField()),
                ("last_update_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("supporters", models.CharField(blank=True, max_length=100, null=True)),
                ("prop_compltn_days", models.IntegerField()),
                ("act_compltn_days", models.IntegerField()),
                ("delayed_flag", models.IntegerField()),
                ("new_req_revisionno", models.IntegerField()),
                (
                    "highpriority",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "good_reason",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "tag_no_inti",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "closed_app_sts",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("delete1", models.IntegerField()),
                ("reqt_type", models.IntegerField()),
                ("module_nm", models.CharField(blank=True, max_length=350, null=True)),
            ],
            options={
                "db_table": "main_tr_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrRatingNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_no", models.IntegerField()),
                ("feedback_desc", models.IntegerField()),
                ("rating", models.IntegerField()),
                ("remarks", models.CharField(max_length=250)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.DateField()),
                ("delete_reason", models.CharField(max_length=200)),
            ],
            options={
                "db_table": "main_tr_rating_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrReqDisp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.CharField(blank=True, max_length=6, null=True)),
                ("module", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.CharField(blank=True, max_length=11, null=True)),
            ],
            options={
                "db_table": "main_tr_req_disp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrSuppAssign",
            fields=[
                ("sup_slno", models.AutoField(primary_key=True, serialize=False)),
                ("tag_no", models.IntegerField()),
                ("assign_index", models.IntegerField()),
                ("empcode", models.CharField(blank=True, max_length=7, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "main_tr_supp_assign",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MainTrTimeCalcu",
            fields=[
                ("tag_no", models.IntegerField()),
                ("status", models.IntegerField()),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                ("on_off", models.IntegerField()),
                ("brk", models.IntegerField()),
                ("brk_date", models.DateField()),
                ("brk_time", models.TimeField()),
                ("updt_date", models.DateField()),
                ("updt_time", models.TimeField()),
                ("tot_time", models.TimeField()),
                ("createdby", models.IntegerField()),
                ("max_no", models.AutoField(primary_key=True, serialize=False)),
                ("cmplt_date", models.DateField()),
                ("cmplt_time", models.TimeField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "main_tr_time_calcu",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MarketHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sno", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("status", models.IntegerField()),
                ("description", models.TextField()),
                ("createdby", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("deleteddate", models.DateField()),
            ],
            options={
                "db_table": "market_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MarketingDept",
            fields=[
                ("deptno", models.IntegerField(primary_key=True, serialize=False)),
                ("dept", models.CharField(max_length=10)),
                ("empcodes", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=7)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("deletedby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
            ],
            options={
                "db_table": "marketing_dept",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MarketingDivisions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("did", models.IntegerField()),
                ("zone", models.IntegerField()),
                ("divisions", models.CharField(max_length=150)),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("deletedby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "marketing_divisions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MarketingStatusMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sid", models.IntegerField()),
                ("status", models.CharField(max_length=50)),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("deleteby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "marketing_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MarketingZones",
            fields=[
                ("zid", models.AutoField(primary_key=True, serialize=False)),
                ("zone", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("deletedby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "marketing_zones",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MarketNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("createdby", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("stn_name", models.CharField(max_length=50)),
                ("division", models.CharField(max_length=50)),
                ("zone", models.CharField(max_length=10)),
                ("contractor", models.CharField(max_length=7)),
                ("ordering_auth", models.CharField(max_length=7)),
                ("consignee", models.CharField(max_length=50)),
                ("primary_assoc", models.CharField(max_length=7)),
                ("primary_contact", models.CharField(max_length=11)),
                ("design_assoc", models.CharField(max_length=7)),
                ("design_contact", models.CharField(max_length=11)),
                ("fieldwork_assoc", models.CharField(max_length=7)),
                ("fieldwork_contact", models.CharField(max_length=11)),
                ("fn_involed", models.CharField(max_length=100)),
                ("prime_resposible", models.CharField(max_length=7)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("status", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("actual_startdate", models.DateField()),
                ("actual_enddate", models.DateField()),
            ],
            options={
                "db_table": "market_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MarketProjExec",
            fields=[
                ("id", models.CharField(max_length=20)),
                ("sequence_no", models.AutoField(primary_key=True, serialize=False)),
                ("majoractivity", models.CharField(max_length=500)),
                ("description", models.CharField(max_length=500)),
                ("responsibility", models.CharField(max_length=50)),
                ("support", models.CharField(max_length=50)),
                ("dependent", models.CharField(max_length=30)),
                ("leadtime", models.IntegerField()),
                ("status", models.CharField(max_length=10)),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("deletedby", models.CharField(max_length=7)),
                ("deleteddate", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "market_proj_exec",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MarketScheduling",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("slno", models.IntegerField()),
                ("id", models.CharField(max_length=11)),
                ("sequence_no", models.IntegerField()),
                ("leadtime", models.IntegerField(blank=True, null=True)),
                ("activity_startdate", models.DateField()),
                ("activity_enddate", models.DateField()),
                ("actualstartdate", models.DateField()),
                ("actualenddate", models.DateField()),
                ("status", models.IntegerField()),
                ("createdby", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "market_scheduling",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MaterialMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mat_code", models.CharField(blank=True, max_length=20, null=True)),
                ("mat_desc", models.TextField(blank=True, null=True)),
                ("uom", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "material_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MbomCategory",
            fields=[
                ("category", models.AutoField(primary_key=True, serialize=False)),
                (
                    "categoryname",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("code", models.CharField(blank=True, max_length=10, null=True)),
                ("type", models.IntegerField()),
                ("userid", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "mbom_category",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MbomEntry",
            fields=[
                ("mbom_id", models.AutoField(primary_key=True, serialize=False)),
                ("mbom_project", models.IntegerField()),
                ("partdesc", models.CharField(max_length=500)),
                ("mbom_project_e", models.CharField(max_length=7)),
                ("mbom_project_m", models.CharField(max_length=7)),
                ("mbom_code", models.CharField(blank=True, max_length=200, null=True)),
                ("spec_code", models.CharField(blank=True, max_length=200, null=True)),
                ("mbomdesc", models.CharField(blank=True, max_length=50, null=True)),
                ("created_by", models.IntegerField()),
                ("mbom_date", models.DateField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "mbom_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MbomIndexCodes",
            fields=[
                ("dwg_mcode_id", models.AutoField(primary_key=True, serialize=False)),
                ("dwg_tot_id", models.IntegerField()),
                ("dwg_mcode", models.CharField(max_length=11)),
                ("dwg_category", models.CharField(max_length=3)),
                ("qty", models.IntegerField()),
                ("mqty", models.IntegerField()),
                ("dwg_mcode_ref", models.CharField(max_length=11)),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "mbom_index_codes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MdchtMsgs",
            fields=[
                ("ordr", models.AutoField(primary_key=True, serialize=False)),
                ("sndr", models.CharField(max_length=15)),
                ("rcvr", models.CharField(max_length=15)),
                ("msg", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "mdcht_msgs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MdlDataContent",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("fieldid", models.PositiveBigIntegerField()),
                ("recordid", models.PositiveBigIntegerField()),
                ("content", models.TextField(blank=True, null=True)),
                ("content1", models.TextField(blank=True, null=True)),
                ("content2", models.TextField(blank=True, null=True)),
                ("content3", models.TextField(blank=True, null=True)),
                ("content4", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "mdl_data_content",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MdlDataRecords",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("userid", models.PositiveBigIntegerField()),
                ("groupid", models.PositiveBigIntegerField()),
                ("dataid", models.PositiveBigIntegerField()),
                ("timecreated", models.PositiveBigIntegerField()),
                ("timemodified", models.PositiveBigIntegerField()),
                ("approved", models.PositiveSmallIntegerField()),
            ],
            options={
                "db_table": "mdl_data_records",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutoIndividualCardMaster",
            fields=[
                ("indvdl_no", models.AutoField(primary_key=True, serialize=False)),
                ("indvdl_name", models.CharField(max_length=5000)),
                ("dept", models.CharField(max_length=5000)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "me_auto_individual_card_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationAdditinlHistry",
            fields=[
                ("his_id", models.AutoField(primary_key=True, serialize=False)),
                ("subid", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("comments", models.TextField()),
                ("date", models.DateField()),
                ("user_file", models.CharField(max_length=150)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_additinl_histry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationAttchment",
            fields=[
                ("att_id", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("subid", models.IntegerField()),
                ("other_attachment", models.CharField(max_length=340)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_attchment",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationAutoTtl",
            fields=[
                ("title_no", models.AutoField(primary_key=True, serialize=False)),
                ("title_name", models.CharField(max_length=5000)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "me_automation_auto_ttl",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationCallreview",
            fields=[
                ("call_id", models.AutoField(primary_key=True, serialize=False)),
                ("subid", models.IntegerField()),
                ("mailsubj", models.CharField(max_length=100)),
                ("mailtext", models.CharField(max_length=500)),
                ("mail_to", models.CharField(max_length=100)),
                ("mail_cc", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_callreview",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationChcklstdoc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subid", models.IntegerField()),
                ("upload_type", models.IntegerField()),
                ("attachment", models.CharField(max_length=200)),
                ("prev_revision", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_chcklstdoc",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationDbNum",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subid", models.IntegerField()),
                ("dbcardlvl", models.IntegerField()),
                ("dbcardname", models.CharField(max_length=150)),
                ("auto_no", models.CharField(max_length=100)),
                ("auto_ttlmastr", models.CharField(max_length=150)),
                ("indv_no", models.CharField(max_length=100)),
                ("indv_ttlmastr", models.CharField(max_length=150)),
                ("created_by", models.IntegerField()),
                ("timesatmp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_db_num",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("main_request", models.IntegerField()),
                ("sub_request", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("entrydate", models.DateField()),
                ("project", models.IntegerField()),
                ("jigdate", models.DateField()),
                ("file_attach", models.CharField(max_length=100)),
                ("req_desc", models.TextField(blank=True, null=True)),
                ("jig_priority", models.IntegerField()),
                ("costng_attach", models.CharField(max_length=100)),
                ("service_cat", models.IntegerField()),
                ("sub_cat", models.IntegerField()),
                ("test_jigno", models.IntegerField()),
                ("test_jigtitle", models.CharField(max_length=100)),
                ("new_instrmnt", models.IntegerField()),
                ("instr_hod", models.IntegerField()),
                ("instr_hod_sts", models.IntegerField()),
                ("instr_uip_date", models.DateField()),
                ("instr_hod_date", models.DateField()),
                ("instr_hod_cmmnts", models.TextField(blank=True, null=True)),
                ("instr_mehod", models.IntegerField()),
                ("instr_mehod_date", models.DateField()),
                ("instr_mehod_cmmnts", models.TextField(blank=True, null=True)),
                ("assignedtome", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("target_date", models.DateField()),
                ("future_date_updatd", models.DateField()),
                ("compl_instr_attach", models.CharField(max_length=50)),
                ("dtsr_emp", models.IntegerField()),
                ("dtsr_sts", models.IntegerField()),
                ("newjg_subtype", models.IntegerField()),
                ("inst_subcat", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationFinalhis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subid", models.IntegerField()),
                ("end_sts", models.IntegerField()),
                ("fnl_attch", models.CharField(max_length=150)),
                ("comments", models.CharField(blank=True, max_length=3000, null=True)),
                ("test_jig_effc_date", models.DateField()),
                ("date", models.DateField()),
                ("replied", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("fnlusr_attch", models.CharField(max_length=200)),
                (
                    "delay_reason",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_finalhis",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationIndvCard",
            fields=[
                ("indvdl_no", models.AutoField(primary_key=True, serialize=False)),
                ("indvdl_name", models.CharField(max_length=5000)),
                ("dept", models.CharField(max_length=5000)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "me_automation_indv_card",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationInstrtargtParams",
            fields=[
                ("param_id", models.AutoField(primary_key=True, serialize=False)),
                ("param", models.CharField(max_length=250)),
                ("days", models.IntegerField()),
                ("type", models.IntegerField()),
                ("createdby", models.DateTimeField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_instrtargt_params",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationInstrtargtStore",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("param_id", models.IntegerField()),
                ("id", models.IntegerField()),
                ("type", models.IntegerField()),
                ("value", models.IntegerField()),
                ("remarks", models.TextField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_instrtargt_store",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationInstrumentHistry",
            fields=[
                ("his_id", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("comments", models.TextField()),
                ("status", models.IntegerField()),
                ("rootcause", models.CharField(blank=True, max_length=400, null=True)),
                ("impact", models.CharField(blank=True, max_length=50, null=True)),
                ("ecr_no", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "delay_reason",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("inputattch", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "compl_instr_attach",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("empna", models.IntegerField()),
                ("reply", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_instrument_histry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationRqststs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subid", models.IntegerField()),
                ("req_type", models.IntegerField()),
                ("rqst_sts", models.IntegerField()),
                ("test_jig_ttl", models.CharField(max_length=100)),
                ("priority_reqst", models.IntegerField()),
                ("reqrddate", models.DateField()),
                ("reqst_attch", models.CharField(max_length=150)),
                ("reqstremarks", models.CharField(max_length=400)),
                ("resposibily_rqst", models.CharField(max_length=200)),
                ("date", models.DateField()),
                ("replied", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("initialusr_attch", models.CharField(max_length=200)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_rqststs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationRwmom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subid", models.IntegerField()),
                ("actn_observ", models.CharField(max_length=200)),
                ("resposibily_rw", models.IntegerField()),
                ("priority_rw", models.IntegerField()),
                ("dateofcomple", models.DateField()),
                ("point_sts", models.IntegerField()),
                ("closed_date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_rwmom",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationStatusMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("status", models.CharField(max_length=60)),
                ("instr_hod_sts", models.CharField(max_length=50)),
                ("any_remarks", models.CharField(max_length=200)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationSubentry",
            fields=[
                ("subid", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("mat_code", models.CharField(max_length=50)),
                ("qtyperm", models.IntegerField()),
                ("tipermin", models.IntegerField()),
                ("tipermonth", models.IntegerField()),
                ("attch", models.CharField(max_length=100)),
                ("jg_priority", models.IntegerField()),
                ("target_date", models.DateField()),
                ("hod_sts", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("hod", models.IntegerField()),
                ("hod_comm", models.TextField(blank=True, null=True)),
                ("mehod", models.IntegerField()),
                ("mehod_date", models.DateField()),
                ("mehod_comm", models.TextField(blank=True, null=True)),
                ("additional_ipts_commnts", models.TextField(blank=True, null=True)),
                ("assignedto", models.IntegerField()),
                ("generated_req_no", models.CharField(max_length=100)),
                ("rej_file", models.CharField(max_length=100)),
                ("assignedtoplnng", models.IntegerField()),
                ("plann_from", models.DateField()),
                ("plann_to", models.DateField()),
                ("plann_qty", models.IntegerField()),
                ("plann_attch", models.CharField(max_length=100)),
                ("plann_date", models.DateField()),
                ("plann_reply", models.IntegerField()),
                ("mailsubj", models.CharField(max_length=200)),
                ("mailtext", models.TextField(blank=True, null=True)),
                ("mail_to", models.CharField(max_length=200)),
                ("mail_cc", models.CharField(max_length=150)),
                ("call_revw_sts", models.IntegerField()),
                ("members_present", models.CharField(max_length=200)),
                ("req_type", models.IntegerField()),
                ("rqst_sts", models.IntegerField()),
                ("resposibily_rqst", models.CharField(max_length=400)),
                ("endmail_to", models.CharField(max_length=200)),
                ("endmail_cc", models.CharField(max_length=200)),
                ("endusersubj", models.CharField(max_length=300)),
                ("endusertext", models.TextField(blank=True, null=True)),
                ("end_sts", models.IntegerField()),
                ("test_jig_effc_date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("new_req_type", models.IntegerField()),
                ("verification", models.IntegerField()),
                ("approval", models.IntegerField()),
                ("type", models.IntegerField()),
                ("new_or_existngjig", models.IntegerField()),
                ("existng_jigid", models.IntegerField()),
                ("exesup_txt", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "me_automation_subentry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationTargtParams",
            fields=[
                ("param_id", models.AutoField(primary_key=True, serialize=False)),
                ("param", models.CharField(max_length=50)),
                ("signle_dut", models.IntegerField()),
                ("multiple_dut", models.IntegerField()),
                ("software_dut", models.IntegerField()),
                ("software_mdut", models.IntegerField()),
                ("manual_jig", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_targt_params",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationTargtStore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("param_id", models.IntegerField()),
                ("subid", models.IntegerField()),
                ("type", models.IntegerField()),
                ("value", models.IntegerField()),
                ("remarks", models.TextField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_targt_store",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationTestjig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("test_setup", models.CharField(max_length=100)),
                ("increment", models.IntegerField()),
                ("title", models.CharField(max_length=300)),
                ("instrument_type", models.IntegerField()),
                ("level", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_testjig",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationTestjigdoc",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subid", models.IntegerField()),
                ("upload_type", models.IntegerField()),
                ("attachment", models.CharField(max_length=200)),
                ("prev_revision", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_testjigdoc",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutomationTestjigNumbr",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("subid", models.IntegerField()),
                ("testjg_type", models.IntegerField()),
                ("unit_cardlvl", models.IntegerField()),
                ("test_set_type", models.IntegerField()),
                ("unit_cardname", models.CharField(max_length=100)),
                ("path", models.CharField(max_length=200)),
                ("svn_path", models.CharField(blank=True, max_length=500, null=True)),
                ("test_setup_id", models.IntegerField()),
                ("test_setupno", models.TextField(blank=True, null=True)),
                (
                    "test_setupttl",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("created_by", models.IntegerField()),
                ("timesatmp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_automation_testjig_numbr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutoTitleMaster",
            fields=[
                ("title_no", models.AutoField(primary_key=True, serialize=False)),
                ("title_name", models.CharField(max_length=5000)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.PositiveIntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "me_auto_title_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutoUserMaster",
            fields=[
                ("empcode", models.IntegerField(primary_key=True, serialize=False)),
                ("empname", models.CharField(max_length=50)),
                ("dept", models.CharField(max_length=30)),
                ("design", models.CharField(max_length=50)),
                ("password", models.CharField(max_length=50)),
                ("role", models.CharField(max_length=15)),
            ],
            options={
                "db_table": "me_auto_user_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeAutoUserPrivileges",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("form_name", models.CharField(max_length=50)),
                ("save", models.IntegerField()),
                ("veiw", models.IntegerField()),
                ("update1", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "me_auto_user_privileges",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeetingProjList",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("meeting_name", models.IntegerField()),
                ("project", models.IntegerField()),
                ("priority", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "meeting_proj_list",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MeetingProjMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("meetingname", models.CharField(max_length=150)),
                ("empcode", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "meeting_proj_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MenusList",
            fields=[
                ("mid", models.AutoField(primary_key=True, serialize=False)),
                ("menu", models.CharField(max_length=50)),
                ("shtcut", models.CharField(max_length=10)),
                ("url", models.CharField(max_length=500)),
                ("sm", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "menus_list",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MetrackerHistory",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("rid", models.IntegerField()),
                ("response", models.CharField(max_length=6)),
                ("comments", models.CharField(blank=True, max_length=500, null=True)),
                ("action", models.CharField(max_length=50)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "metracker_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MetrackerMainType",
            fields=[
                ("main_id", models.AutoField(primary_key=True, serialize=False)),
                ("main_request", models.CharField(max_length=30)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "metracker_main_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MetrackerMatNtry",
            fields=[
                ("mid", models.AutoField(primary_key=True, serialize=False)),
                ("rid", models.IntegerField()),
                ("materialcode", models.CharField(max_length=20)),
                ("qtyperm", models.IntegerField()),
                ("tipermin", models.IntegerField()),
                ("tipermonth", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("revno", models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                "db_table": "metracker_mat_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MetrackerNtry",
            fields=[
                ("rid", models.AutoField(primary_key=True, serialize=False)),
                ("main_request", models.IntegerField()),
                ("sub_request", models.IntegerField()),
                ("project", models.IntegerField()),
                ("req_date", models.DateField()),
                ("mail_cc", models.CharField(max_length=100)),
                ("me_user", models.IntegerField()),
                ("file_attach", models.CharField(max_length=100)),
                ("descript", models.CharField(max_length=2000)),
                ("service_cat", models.CharField(max_length=50)),
                ("sub_cat", models.CharField(max_length=50)),
                ("date", models.DateField()),
                ("empcode", models.CharField(max_length=6)),
                ("delete1", models.IntegerField()),
                ("hod_sts", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("hod_comm", models.CharField(max_length=100)),
                ("hod_date", models.DateField()),
                ("me_assign", models.CharField(max_length=6)),
                ("me_track_sts", models.IntegerField()),
                ("me_assign_date", models.DateField()),
                ("support", models.IntegerField()),
                ("me_hod_comm", models.CharField(max_length=200)),
                ("me_assign_comm", models.CharField(max_length=300)),
                ("hodate", models.DateField()),
                ("mailto", models.CharField(max_length=7)),
                ("completed_date", models.DateField()),
                ("ecrno_reason", models.CharField(max_length=50)),
                ("feedback", models.CharField(max_length=100)),
                ("benefits", models.CharField(blank=True, max_length=500, null=True)),
                ("quantity", models.CharField(blank=True, max_length=10, null=True)),
                ("pquantity", models.CharField(blank=True, max_length=10, null=True)),
                ("activity", models.CharField(blank=True, max_length=300, null=True)),
                ("b_improv", models.CharField(blank=True, max_length=300, null=True)),
                (
                    "aftr_improv",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("result", models.CharField(blank=True, max_length=300, null=True)),
                ("safety", models.CharField(blank=True, max_length=20, null=True)),
                ("money", models.FloatField()),
                ("detail_feedback", models.IntegerField()),
                ("designer_verific", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "metracker_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MetrackerServiceCatgry",
            fields=[
                ("cat_id", models.AutoField(primary_key=True, serialize=False)),
                ("service_cat", models.CharField(max_length=1000)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "metracker_service_catgry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MetrackerServiceSubcatgry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sub_cat", models.CharField(max_length=100)),
                ("cat_id", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "metracker_service_subcatgry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MetrackerSubType",
            fields=[
                ("sub_id", models.AutoField(primary_key=True, serialize=False)),
                ("main_id", models.IntegerField()),
                ("sub_request", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "metracker_sub_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MmchangeAddrootcause",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("rootcause", models.CharField(blank=True, max_length=100, null=True)),
                ("type", models.IntegerField()),
                ("empcode", models.CharField(blank=True, max_length=6, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "mmchange_addrootcause",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ModuleMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mod_code", models.IntegerField()),
                ("mod_desc", models.CharField(max_length=100)),
                ("team_mail_id", models.CharField(max_length=500)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "module_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MosModules",
            fields=[
                ("index_no", models.AutoField(primary_key=True, serialize=False)),
                ("module_name", models.CharField(max_length=100)),
                ("createby", models.IntegerField()),
                ("module_value", models.IntegerField()),
                ("primary", models.CharField(blank=True, max_length=20, null=True)),
                ("secondary", models.CharField(blank=True, max_length=10, null=True)),
                ("show_sts", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "mos_modules",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MozillaVerions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip", models.CharField(max_length=50)),
                ("sys_name", models.CharField(max_length=50)),
                ("version", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "mozilla_verions",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MrDataMainSubAssMstr",
            fields=[
                ("matnr", models.BigIntegerField(primary_key=True, serialize=False)),
                ("type", models.CharField(max_length=1)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mr_data_main_sub_ass_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MrDataMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("matnr", models.CharField(max_length=20)),
                ("tot_qty", models.IntegerField()),
                ("rej", models.IntegerField()),
                ("rew", models.IntegerField()),
                ("on_off", models.IntegerField()),
                ("type", models.CharField(max_length=1)),
                ("createdby", models.IntegerField()),
                ("timstamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mr_data_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MrDataSubMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("matnr", models.CharField(max_length=20)),
                ("eqpmnt", models.IntegerField()),
                ("type", models.IntegerField()),
                ("on_off", models.IntegerField()),
                ("createdby", models.IntegerField()),
            ],
            options={
                "db_table": "mr_data_sub_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MrDataSubTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("matnr", models.CharField(max_length=20)),
                ("eqpmnt", models.IntegerField()),
                ("type", models.IntegerField()),
            ],
            options={
                "db_table": "mr_data_sub_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MrDataTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("matnr", models.CharField(max_length=20)),
                ("tot_qty", models.IntegerField()),
                ("rej", models.IntegerField()),
                ("rew", models.IntegerField()),
            ],
            options={
                "db_table": "mr_data_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MrsMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mrs_slno", models.IntegerField()),
                ("matnr", models.CharField(max_length=15)),
                ("desc", models.CharField(max_length=100)),
                ("slno", models.IntegerField()),
                ("project", models.CharField(max_length=50)),
                ("no_sets", models.IntegerField()),
                ("qty_set", models.FloatField()),
                ("stock", models.FloatField()),
                ("mrs", models.FloatField()),
                ("bal", models.FloatField()),
                ("temp_bal", models.CharField(max_length=10)),
                ("order_slno", models.IntegerField()),
                ("tot_short", models.CharField(max_length=10)),
                ("tot_value", models.CharField(max_length=1500)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mrs_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MrsMaterialCode",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("mrs_no", models.CharField(max_length=50)),
                ("material_code", models.CharField(max_length=50)),
                ("batch_number", models.CharField(max_length=50)),
                ("system_ip", models.CharField(max_length=50)),
                ("emp_code", models.IntegerField()),
                ("entry_date", models.CharField(max_length=50)),
                ("entry_time", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "Mrs_material_code",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MrsSlnoMaster",
            fields=[
                ("mrs_slno", models.AutoField(primary_key=True, serialize=False)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mrs_slno_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MrsTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.CharField(max_length=20)),
                ("desc", models.CharField(max_length=50)),
                ("slno", models.IntegerField()),
                ("project", models.CharField(max_length=50)),
                ("no_sets", models.IntegerField()),
                ("qty_set", models.FloatField()),
                ("stock", models.FloatField()),
                ("mrs", models.FloatField()),
                ("temp_bal", models.CharField(max_length=11)),
            ],
            options={
                "db_table": "mrs_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Mtpl5WhyMaster",
            fields=[
                ("why_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nc_tag_slno",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("why", models.CharField(blank=True, max_length=500, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "mtpl_5why_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Mtplassembly",
            fields=[
                ("assid", models.IntegerField(primary_key=True, serialize=False)),
                ("daterec", models.DateField()),
                ("proje", models.IntegerField()),
                ("compo", models.CharField(blank=True, max_length=20, null=True)),
                ("compsno", models.IntegerField()),
                ("rust", models.CharField(max_length=1)),
                ("rota", models.CharField(max_length=1)),
                ("accum", models.CharField(max_length=1)),
                ("trap", models.CharField(max_length=1)),
                ("duedate", models.DateField()),
                ("dispatch", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mtplassembly",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplAttachments",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("file_name", models.CharField(max_length=50)),
                ("file_type", models.CharField(max_length=50)),
                ("file_path", models.CharField(max_length=50)),
                ("full_path", models.CharField(max_length=50)),
                ("raw_name", models.CharField(max_length=50)),
                ("orig_name", models.CharField(max_length=50)),
                ("client_name", models.CharField(max_length=50)),
                ("file_ext", models.CharField(max_length=50)),
                ("file_size", models.CharField(max_length=50)),
                ("is_image", models.CharField(max_length=50)),
                ("image_width", models.CharField(max_length=50)),
                ("image_height", models.CharField(max_length=50)),
                ("image_type", models.CharField(max_length=50)),
                ("image_size_str", models.CharField(max_length=50)),
                ("type", models.CharField(max_length=25)),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "mtpl_attachments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplCaAction",
            fields=[
                ("ca_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nc_tag_slno",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "corr_action",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("date_initiation", models.DateField()),
                (
                    "caresponce",
                    models.CharField(
                        blank=True, db_column="CAresponce", max_length=250, null=True
                    ),
                ),
                ("ca_target", models.DateField(db_column="CA_Target")),
                (
                    "castatus",
                    models.CharField(
                        blank=True, db_column="CAstatus", max_length=250, null=True
                    ),
                ),
                (
                    "catype",
                    models.CharField(
                        blank=True, db_column="CAType", max_length=250, null=True
                    ),
                ),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "mtpl_ca_action",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplComponent",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("date", models.DateField(blank=True, null=True)),
                ("project", models.CharField(max_length=15)),
                ("component", models.CharField(max_length=15)),
                (
                    "componentsr",
                    models.CharField(db_column="componentSr", max_length=15),
                ),
                ("rust", models.CharField(max_length=15)),
                ("rotation", models.CharField(max_length=15)),
                ("cleaning", models.CharField(max_length=15)),
                ("tarpaulin", models.CharField(max_length=15)),
                ("nextdate", models.DateField(blank=True, null=True)),
                ("dispatch", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("empcode", models.CharField(max_length=50)),
                ("ntrydate", models.DateField()),
                ("due_date_over", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mtpl_component",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplDomainMaster",
            fields=[
                ("domain_id", models.AutoField(primary_key=True, serialize=False)),
                ("domain_name", models.CharField(max_length=50)),
                ("fullname", models.CharField(db_column="Fullname", max_length=250)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "mtpl_domain_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplFailureCategory",
            fields=[
                ("fc_no", models.AutoField(primary_key=True, serialize=False)),
                ("fc_name", models.CharField(max_length=50)),
                ("createdby", models.SmallIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mtpl_failure_category",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplGeneration",
            fields=[
                ("uniq_slno", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "nc_tag_slno",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("sub_uniq_slno", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("deptcode", models.IntegerField()),
                ("requesteddate", models.DateField()),
                ("date_of_nc", models.DateField()),
                ("nc_details", models.CharField(blank=True, max_length=500, null=True)),
                ("nc_observed_at", models.IntegerField()),
                (
                    "responcesibility",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("target_date", models.DateField()),
                (
                    "tracebility_no",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("prob_desc", models.CharField(blank=True, max_length=500, null=True)),
                ("project", models.CharField(blank=True, max_length=500, null=True)),
                ("nc_title", models.CharField(blank=True, max_length=250, null=True)),
                ("domain_id", models.IntegerField()),
                ("category_id", models.CharField(blank=True, max_length=30, null=True)),
                ("assign", models.CharField(blank=True, max_length=500, null=True)),
                ("lot_qty", models.CharField(blank=True, max_length=250, null=True)),
                ("aff_qty", models.CharField(blank=True, max_length=250, null=True)),
                ("def_qty", models.CharField(blank=True, max_length=250, null=True)),
                ("wt_prob", models.CharField(blank=True, max_length=500, null=True)),
                ("wh_happend", models.CharField(blank=True, max_length=500, null=True)),
                ("who", models.CharField(blank=True, max_length=250, null=True)),
                ("how", models.CharField(blank=True, max_length=500, null=True)),
                ("who_owner", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "detect_with_prasent",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "nc_prob_attach",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "caaction",
                    models.CharField(
                        blank=True, db_column="CAaction", max_length=500, null=True
                    ),
                ),
                (
                    "respca",
                    models.CharField(
                        blank=True, db_column="respCA", max_length=500, null=True
                    ),
                ),
                (
                    "ca_date_completion",
                    models.CharField(
                        blank=True,
                        db_column="CA_date_completion",
                        max_length=500,
                        null=True,
                    ),
                ),
                (
                    "proc_root_cause",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "escape_root_cause",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "closed_attach",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "nc_closing_stmt",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "nc_analysis",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("end_user", models.IntegerField()),
                ("date_nc_closer", models.DateField()),
                ("status", models.IntegerField()),
                ("hod_code", models.IntegerField()),
                ("hod_status", models.IntegerField()),
                (
                    "hod_remarks",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("hod_approve_date", models.DateTimeField()),
                ("edp_code", models.IntegerField()),
                ("edp_status", models.IntegerField()),
                (
                    "edp_remarks",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("edp_approve_date", models.DateTimeField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("no_of_days", models.IntegerField()),
                ("cost_non", models.CharField(blank=True, max_length=500, null=True)),
                ("dfmea", models.CharField(blank=True, max_length=100, null=True)),
                ("pfmea", models.CharField(blank=True, max_length=100, null=True)),
                ("prev_nc", models.CharField(blank=True, max_length=100, null=True)),
                ("reopen_reson", models.TextField(blank=True, null=True)),
                ("area", models.CharField(blank=True, max_length=150, null=True)),
                ("company", models.IntegerField()),
            ],
            options={
                "db_table": "mtpl_generation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplLaAction",
            fields=[
                ("la_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nc_tag_slno",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("proj", models.CharField(blank=True, max_length=250, null=True)),
                ("la_details", models.CharField(blank=True, max_length=250, null=True)),
                ("la_respon", models.CharField(blank=True, max_length=250, null=True)),
                ("la_status", models.CharField(blank=True, max_length=250, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "mtpl_la_action",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplMachineMaster",
            fields=[
                ("machine_id", models.AutoField(primary_key=True, serialize=False)),
                ("machine_name", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "mtpl_machine_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplmoduleNtry",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("deptcode", models.IntegerField()),
                ("requesteddate", models.DateField()),
                ("date_of_nc", models.DateField()),
                ("nc_details", models.CharField(blank=True, max_length=500, null=True)),
                ("area_of_nc", models.IntegerField()),
                ("area", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "responcesibility",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("target_date", models.DateField()),
                (
                    "tracebility_no",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("rework_no", models.IntegerField()),
                ("prob_desc", models.CharField(blank=True, max_length=500, null=True)),
                ("project", models.CharField(blank=True, max_length=500, null=True)),
                ("nc_generation_status", models.IntegerField()),
                ("prev_nc", models.CharField(blank=True, max_length=100, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("company", models.IntegerField()),
            ],
            options={
                "db_table": "mtplmodule_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplNtry",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("req", models.CharField(max_length=11)),
                ("date", models.DateField()),
                ("req_time", models.TimeField()),
                ("desc", models.CharField(blank=True, max_length=200, null=True)),
                ("loccode", models.CharField(blank=True, max_length=11, null=True)),
                ("category", models.IntegerField()),
                ("subcat", models.IntegerField()),
                ("machine_id", models.IntegerField()),
                ("deptcode", models.IntegerField()),
                ("type_id", models.IntegerField()),
                ("assigned", models.IntegerField()),
                ("approval", models.IntegerField()),
                ("hod_code", models.CharField(max_length=11)),
                ("hod_status", models.IntegerField()),
                (
                    "hod_remarks",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("hod_apprd_date", models.DateField()),
                (
                    "adopttype",
                    models.CharField(
                        blank=True, db_column="adoptType", max_length=150, null=True
                    ),
                ),
                ("cost", models.IntegerField()),
                ("remarks", models.CharField(blank=True, max_length=200, null=True)),
                ("user_rmrks", models.CharField(blank=True, max_length=400, null=True)),
                ("comments", models.CharField(blank=True, max_length=200, null=True)),
                ("status", models.IntegerField()),
                ("initiate_date", models.DateField()),
                ("initiate_time", models.TimeField()),
                ("target_date", models.DateField(blank=True, null=True)),
                ("completed_date", models.DateField()),
                ("completed_time", models.TimeField()),
                ("completed_by", models.IntegerField()),
                ("dept_type", models.CharField(blank=True, max_length=100, null=True)),
                ("att_me", models.CharField(blank=True, max_length=1000, null=True)),
                ("rating", models.IntegerField()),
                ("feedback_comments", models.TextField(blank=True, null=True)),
                ("rating_me", models.IntegerField()),
                ("feedbk_cmnts_me", models.TextField(blank=True, null=True)),
                ("sts", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=50, null=True)),
                ("user_cmnts", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "mtpl_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplPrevAction",
            fields=[
                ("prev_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nc_tag_slno",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("docno", models.CharField(blank=True, max_length=500, null=True)),
                ("revno", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "prev_respon",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "prev_status",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("doctype", models.CharField(blank=True, max_length=250, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "mtpl_prev_action",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplreworkCompdata",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("code", models.CharField(blank=True, max_length=20, null=True)),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("qty", models.IntegerField()),
                ("uom", models.CharField(blank=True, max_length=100, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "mtplrework_compdata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplreworkNtry",
            fields=[
                ("reworkno", models.AutoField(primary_key=True, serialize=False)),
                ("fromdept", models.IntegerField()),
                ("todept", models.IntegerField()),
                ("toassoc", models.IntegerField()),
                ("faildate", models.DateField(blank=True, null=True)),
                ("failserno", models.IntegerField()),
                ("project", models.IntegerField()),
                ("drawno", models.CharField(blank=True, max_length=20, null=True)),
                ("promdesc", models.CharField(max_length=200)),
                ("idestage", models.IntegerField()),
                ("subassem", models.CharField(blank=True, max_length=200, null=True)),
                ("attach", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.IntegerField()),
                ("ntrydate", models.DateField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                (
                    "corrections",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("pro_cat", models.CharField(blank=True, max_length=100, null=True)),
                ("todept_date", models.DateField(blank=True, null=True)),
                ("status", models.IntegerField()),
                ("results", models.CharField(blank=True, max_length=500, null=True)),
                ("releaseto", models.CharField(blank=True, max_length=500, null=True)),
            ],
            options={
                "db_table": "mtplrework_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplscarDrawMaster",
            fields=[
                ("did", models.AutoField(primary_key=True, serialize=False)),
                ("project", models.IntegerField()),
                ("drawing", models.CharField(max_length=25)),
                ("description", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "mtplscar_draw_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplscarNtry",
            fields=[
                ("scrap_id", models.AutoField(primary_key=True, serialize=False)),
                ("dept_type", models.CharField(max_length=5)),
                ("ipa_qpa", models.CharField(max_length=10)),
                ("pno", models.CharField(max_length=50)),
                ("supplier", models.CharField(max_length=6)),
                ("raw_supp", models.CharField(max_length=10)),
                ("ref_doc_no", models.CharField(max_length=20)),
                ("attach_file", models.CharField(max_length=50)),
                ("ntry_date", models.DateField()),
                ("created_by", models.CharField(max_length=6)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("hod", models.CharField(max_length=6)),
                ("hod_aprl_sts", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("fur_action", models.CharField(blank=True, max_length=500, null=True)),
                ("buyer", models.CharField(max_length=6)),
                ("inform", models.CharField(max_length=100)),
                ("fin_des", models.CharField(max_length=1000)),
                ("ver_sts", models.IntegerField()),
                ("ver_date", models.DateField()),
                ("verified_by", models.IntegerField()),
                ("copq", models.CharField(max_length=5)),
                ("copq_cst", models.CharField(max_length=11)),
                ("copq_act", models.CharField(max_length=100)),
                ("copq_act_det", models.CharField(max_length=100)),
                ("verify_comments", models.TextField(blank=True, null=True)),
                ("rej_area", models.IntegerField()),
                ("capa_file", models.CharField(max_length=50)),
                ("copq_buyer", models.CharField(blank=True, max_length=6, null=True)),
                ("copq_inform", models.CharField(blank=True, max_length=6, null=True)),
                ("final_sts", models.IntegerField()),
                ("final_date", models.DateField()),
                ("finalised_by", models.CharField(blank=True, max_length=6, null=True)),
                ("final_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("cpa_req", models.CharField(blank=True, max_length=5, null=True)),
                ("store_sts", models.IntegerField()),
                ("store_date", models.DateField()),
                ("store_comm", models.CharField(blank=True, max_length=100, null=True)),
                ("store_by", models.IntegerField()),
                ("final_by", models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                "db_table": "mtplscar_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplscarSelMaster",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("master_type", models.CharField(max_length=10)),
                ("value", models.CharField(max_length=50)),
                ("show_val", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=6)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mtplscar_sel_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplscarSubNtry",
            fields=[
                ("subid", models.AutoField(primary_key=True, serialize=False)),
                ("scrap_id", models.IntegerField()),
                ("com_sno", models.CharField(blank=True, max_length=100, null=True)),
                ("project", models.IntegerField()),
                ("drawringno", models.IntegerField()),
                ("part_desc", models.CharField(max_length=50)),
                ("quality", models.IntegerField()),
                ("reason", models.CharField(max_length=1000)),
                ("capa_num", models.CharField(max_length=200)),
                ("root_cause", models.CharField(max_length=200)),
                ("cor_actn", models.CharField(max_length=200)),
                ("cor_actn2", models.CharField(max_length=200)),
                ("closed_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mtplscar_sub_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplSerDept",
            fields=[
                ("dept", models.IntegerField(primary_key=True, serialize=False)),
                ("deptname", models.CharField(max_length=20)),
                ("responsible", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "mtpl_ser_dept",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplSerHis",
            fields=[
                ("his_id", models.AutoField(primary_key=True, serialize=False)),
                ("req_id", models.IntegerField()),
                ("admin_tar_date", models.DateField()),
                ("admin_rmks", models.CharField(max_length=200)),
                ("status", models.IntegerField()),
                ("response", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mtpl_ser_his",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplSerStatus",
            fields=[
                ("sts_id", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=20)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "mtpl_ser_status",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplSerTrack",
            fields=[
                ("req_id", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("dept", models.IntegerField()),
                ("nat_of_work", models.TextField()),
                ("req_tar_date", models.DateField()),
                ("status", models.IntegerField()),
                ("response", models.IntegerField()),
                ("admin_tar_date", models.DateField()),
                ("admin_rmks", models.CharField(max_length=300)),
                ("use_req", models.CharField(max_length=200)),
                ("man_hrs", models.CharField(max_length=20)),
                ("mach_hrs", models.CharField(max_length=20)),
                ("cmplt_date", models.DateField()),
                ("user_feed_bck", models.IntegerField()),
                ("user_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "mtpl_ser_track",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplServiceMultipleRoot",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("reportno", models.IntegerField()),
                (
                    "matcode_multi",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("from_loc", models.CharField(blank=True, max_length=100, null=True)),
                ("to_loc", models.CharField(blank=True, max_length=100, null=True)),
                ("root_sts_dept_from", models.IntegerField()),
                ("root_dept", models.IntegerField()),
                ("root_cause_multi", models.TextField(blank=True, null=True)),
                (
                    "action_yn_multi",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("ca_multi", models.TextField(blank=True, null=True)),
                ("datef_impl_multi", models.DateField()),
                (
                    "ecr_no_multi",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "root_sts_dept_to",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("root_from_date", models.DateField()),
                ("root_route_date", models.DateField()),
                ("rc_sts", models.IntegerField()),
                ("route_value", models.IntegerField()),
                ("hod_sts", models.CharField(blank=True, max_length=15, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("root_time", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "rework_time",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("reason_delay", models.TextField(blank=True, null=True)),
                (
                    "knowledge_appli_multi",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("consult_asso_multi", models.IntegerField()),
                ("mod_det", models.CharField(blank=True, max_length=200, null=True)),
                ("db_type", models.IntegerField()),
                ("type_ref", models.IntegerField()),
                ("type", models.IntegerField()),
                (
                    "master_slno",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "mtpl_service_multiple_root",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplServiceReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reportno", models.PositiveBigIntegerField()),
                (
                    "detailsreceivedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("reportedby", models.CharField(blank=True, max_length=40, null=True)),
                ("reporteddate", models.DateField(blank=True, null=True)),
                ("actualdate", models.DateField(blank=True, null=True)),
                ("report_completed_date", models.DateField()),
                ("actual_time", models.TimeField()),
                (
                    "typeofservice",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("startdate", models.DateField(blank=True, null=True)),
                ("mfddate", models.DateField()),
                ("start_time", models.TimeField()),
                ("completeddate", models.DateField(blank=True, null=True)),
                ("complited_time", models.TimeField()),
                ("zone", models.CharField(blank=True, max_length=40, null=True)),
                ("depot", models.CharField(blank=True, max_length=40, null=True)),
                ("coach", models.CharField(blank=True, max_length=40, null=True)),
                ("shed", models.CharField(blank=True, max_length=40, null=True)),
                ("locono", models.CharField(blank=True, max_length=40, null=True)),
                ("locotype", models.CharField(blank=True, max_length=40, null=True)),
                ("factory", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "engineercode",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("mcode", models.CharField(blank=True, max_length=20, null=True)),
                ("ecode", models.CharField(max_length=20)),
                (
                    "problemdesc",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "rd_analysis",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("ecr_no", models.CharField(blank=True, max_length=50, null=True)),
                ("symptoms", models.CharField(blank=True, max_length=500, null=True)),
                ("reworkdone", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "failurecategory",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                (
                    "failuredetails",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "pr_sup_eng_comm",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "serviceempcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("checkedby", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "authorizedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("enteredby", models.CharField(blank=True, max_length=40, null=True)),
                ("rework_report", models.IntegerField()),
                ("dept_to", models.CharField(blank=True, max_length=8, null=True)),
                ("project", models.CharField(blank=True, max_length=30, null=True)),
                ("unittype", models.CharField(blank=True, max_length=10, null=True)),
                ("unitno", models.CharField(blank=True, max_length=20, null=True)),
                ("finalsave", models.CharField(max_length=5)),
                ("srvchod_vrjct", models.CharField(max_length=50)),
                ("to_dept_hod", models.IntegerField()),
                ("altd_user", models.IntegerField()),
                ("from_dept_user_report_taken", models.IntegerField()),
                ("createdby", models.BigIntegerField()),
                ("flre_reported_time", models.TimeField()),
                ("datef_cmsn", models.DateField()),
                ("version", models.CharField(max_length=50)),
                ("rplcd_unitslno", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("dump", models.IntegerField()),
                ("aglcode", models.IntegerField()),
                ("agl_sts", models.CharField(max_length=30)),
                ("agl_timestamp", models.CharField(max_length=30)),
                ("disp_act", models.CharField(max_length=1000)),
                ("days", models.IntegerField()),
                ("hours", models.IntegerField()),
                ("mins", models.IntegerField()),
                ("ser_days", models.IntegerField()),
                ("ser_hours", models.IntegerField()),
                ("ser_mins", models.IntegerField()),
                ("ser_time_update_sts", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("loco_avlbl_sts", models.CharField(max_length=1)),
                ("rack_no", models.CharField(blank=True, max_length=15, null=True)),
                (
                    "attend_at_fact",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("report_ntry_date", models.DateField()),
                ("failure_reported_date", models.DateField()),
                ("failure_reported_time", models.TimeField()),
                ("handed_over_date", models.DateField()),
                ("attachment", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "failure_unit_comments",
                    models.CharField(blank=True, max_length=10000, null=True),
                ),
                (
                    "failure_unit_analysis",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "failur_unit_location",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("repaly_mail_date", models.DateField()),
                ("ffa_by", models.IntegerField()),
                ("mat_rev_date", models.DateField()),
                ("mat_sent_date", models.DateField()),
                ("mat_loccode", models.CharField(blank=True, max_length=30, null=True)),
                ("mat_dept", models.IntegerField()),
                (
                    "mat_problemcategory",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "knowledge_appli",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("consult_asso", models.IntegerField()),
                (
                    "noproblem_zone",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                (
                    "no_prob_shed",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                (
                    "no_prob_loco",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("fitted_date", models.DateField()),
                ("remarks", models.CharField(blank=True, max_length=300, null=True)),
                ("status", models.IntegerField()),
                ("to_rd_date", models.DateField()),
                ("capa_eff", models.TextField(blank=True, null=True)),
                ("service_ext_no", models.IntegerField()),
                ("review_corr", models.TextField(blank=True, null=True)),
                ("review_sts", models.IntegerField()),
                (
                    "ntry_date_ext",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("reviewdate", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "entry_ext_int",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("third_type", models.IntegerField()),
                ("close_sts", models.IntegerField()),
                ("num_per", models.IntegerField()),
                (
                    "serv_engg_time_mm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("new_version_date", models.DateField()),
            ],
            options={
                "db_table": "mtpl_service_report",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplServicereportAttachments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("report_no", models.IntegerField(unique=True)),
                ("file_name", models.CharField(max_length=50, unique=True)),
                ("extension", models.CharField(max_length=20)),
                ("file_size", models.CharField(max_length=50)),
                ("seq_no", models.IntegerField()),
            ],
            options={
                "db_table": "mtpl_servicereport_attachments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplServiceSubassemblies",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("servicereportno", models.PositiveIntegerField(blank=True, null=True)),
                ("fitemdesc", models.CharField(blank=True, max_length=100, null=True)),
                ("fitemsno", models.CharField(blank=True, max_length=45, null=True)),
                ("fitemmcode", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "replaceditemsno",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("dtf_mnf", models.CharField(max_length=50)),
                ("replaced_item_tested_date", models.CharField(max_length=50)),
                ("ref_sa_code", models.CharField(max_length=200)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("repeat", models.IntegerField()),
                ("service_status", models.IntegerField()),
                ("third_type", models.IntegerField()),
                ("broght_type", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "mtpl_service_subassemblies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplStatusMaster",
            fields=[
                ("status", models.SmallAutoField(primary_key=True, serialize=False)),
                ("status_name", models.CharField(max_length=30)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "mtpl_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplSubcatMaster",
            fields=[
                ("subcat_id", models.AutoField(primary_key=True, serialize=False)),
                ("subcat_name", models.CharField(max_length=50)),
                ("main_id", models.IntegerField()),
                ("location", models.CharField(max_length=20)),
                ("dept_code", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "mtpl_subcat_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplSuppDetails",
            fields=[
                ("uniq", models.AutoField(primary_key=True, serialize=False)),
                ("prjscope", models.CharField(max_length=5)),
                (
                    "fai_item_drw",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "fai_quo_com",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "fai_drawfile",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "fai_purch_or",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "faisampcomm",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "faisamppleact",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("startdate", models.DateField()),
                ("targetdate", models.DateField()),
                ("duration", models.CharField(blank=True, max_length=11, null=True)),
                ("itemname", models.CharField(max_length=20)),
                ("commadity", models.IntegerField()),
                ("supp_loc", models.CharField(blank=True, max_length=50, null=True)),
                ("supplier", models.IntegerField()),
                ("suptype", models.IntegerField()),
                ("prj_team", models.IntegerField()),
                ("prj_mentor", models.IntegerField()),
                ("prjtargets", models.CharField(max_length=250)),
                ("model", models.IntegerField()),
                ("ntry_by", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("vd_head_sts", models.IntegerField()),
                ("vdhead", models.IntegerField()),
                ("vdhead_date", models.DateField()),
                (
                    "prj_app_comm",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "prj_ext_lead",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("prj_risk", models.CharField(blank=True, max_length=70, null=True)),
                ("prjteam", models.CharField(blank=True, max_length=70, null=True)),
                ("pre_study_sts", models.IntegerField()),
                ("pre_study_ntry", models.IntegerField()),
                ("presstudy_date", models.DateField()),
                ("com_reg_doc", models.CharField(blank=True, max_length=70, null=True)),
                ("tech_com", models.CharField(blank=True, max_length=70, null=True)),
                ("quo_pri", models.CharField(blank=True, max_length=70, null=True)),
                ("anoth_file", models.CharField(blank=True, max_length=100, null=True)),
                ("iso_cer", models.CharField(blank=True, max_length=100, null=True)),
                ("other_comm", models.CharField(blank=True, max_length=70, null=True)),
                ("tarprice", models.CharField(blank=True, max_length=11, null=True)),
                ("tarquantity", models.CharField(blank=True, max_length=11, null=True)),
                ("vdhead_pre_sts", models.IntegerField()),
                ("vdhead_pre_ntry", models.IntegerField()),
                (
                    "vdhead_pre_comm",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("vdhead_pre_date", models.DateField()),
                ("sam_fai_pm_sts", models.IntegerField()),
                ("sam_fai_pm_ntry", models.IntegerField()),
                ("sam_fai_pm_date", models.DateField()),
                ("itdrawno", models.CharField(blank=True, max_length=50, null=True)),
                ("draw_rev", models.CharField(blank=True, max_length=20, null=True)),
                ("quo_com", models.CharField(blank=True, max_length=100, null=True)),
                ("drawfile", models.CharField(blank=True, max_length=100, null=True)),
                ("purch_or", models.CharField(blank=True, max_length=100, null=True)),
                ("sam_comm", models.TextField(blank=True, null=True)),
                ("sam_act_date", models.DateField()),
                ("sam_fai_qa_sts", models.IntegerField()),
                ("sam_fai_qa_ntry", models.IntegerField()),
                ("sam_fai_qa_date", models.DateField()),
                (
                    "processflow",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("faireports", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "faianalysis",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("tsacomm", models.CharField(blank=True, max_length=100, null=True)),
                ("fai_comm", models.CharField(blank=True, max_length=500, null=True)),
                ("act_sam_date", models.DateField()),
                ("sample_sts", models.IntegerField()),
                ("app_sub", models.CharField(blank=True, max_length=3, null=True)),
                ("app_test", models.CharField(blank=True, max_length=3, null=True)),
                ("fit_assoc", models.CharField(blank=True, max_length=20, null=True)),
                ("test_assoc", models.CharField(blank=True, max_length=20, null=True)),
                ("fai_comms", models.CharField(blank=True, max_length=500, null=True)),
                ("tsacomms", models.CharField(blank=True, max_length=100, null=True)),
                ("faiana", models.CharField(blank=True, max_length=100, null=True)),
                ("secsam_date", models.DateField()),
                ("phasethree_sts", models.IntegerField()),
                ("fit_comm", models.CharField(blank=True, max_length=500, null=True)),
                ("test_comm", models.CharField(blank=True, max_length=500, null=True)),
                ("fit_att", models.CharField(blank=True, max_length=100, null=True)),
                ("test_att", models.CharField(blank=True, max_length=100, null=True)),
                ("sam_prod_sts", models.IntegerField()),
                ("vdhead_gates_sts", models.IntegerField()),
                (
                    "vdhead_gates_comm",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("vdhead_gaes_ntry", models.IntegerField()),
                ("vhead_gates_date", models.DateField()),
                ("gate_three_sts", models.IntegerField()),
                ("audit_comm", models.CharField(blank=True, max_length=500, null=True)),
                ("auditrep", models.CharField(blank=True, max_length=100, null=True)),
                ("cor_file", models.CharField(blank=True, max_length=100, null=True)),
                ("audit_ntry", models.IntegerField()),
                ("audit_date", models.DateField()),
                ("auditdate", models.DateField()),
                ("audit_list", models.CharField(blank=True, max_length=500, null=True)),
                ("ramp_sts", models.IntegerField()),
                ("ramprep", models.CharField(blank=True, max_length=100, null=True)),
                ("ramp_comm", models.CharField(blank=True, max_length=500, null=True)),
                ("cont_comm", models.CharField(blank=True, max_length=500, null=True)),
                ("rampqty", models.CharField(blank=True, max_length=11, null=True)),
                ("contqty", models.IntegerField()),
                ("contrep", models.CharField(blank=True, max_length=100, null=True)),
                ("ramp_ntry", models.IntegerField()),
                ("ramp_date", models.DateField()),
                ("eva_sts", models.IntegerField()),
                ("prj_fin", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "prj_del_comm",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("tar_set", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "tar_set_comm",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("best_part", models.CharField(blank=True, max_length=200, null=True)),
                ("learning", models.CharField(blank=True, max_length=200, null=True)),
                ("eval_ntry", models.IntegerField()),
                ("eval_date", models.DateField()),
                ("prj_com_sts", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mtpl_supp_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplSuppSelMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sel_type", models.CharField(max_length=30)),
                ("sel_value", models.CharField(max_length=50)),
                ("createdby", models.CharField(max_length=6)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "mtpl_supp_sel_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplTypeMaster",
            fields=[
                ("type_id", models.AutoField(primary_key=True, serialize=False)),
                ("type_name", models.CharField(max_length=50)),
                ("location", models.CharField(max_length=20)),
                ("dept", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "mtpl_type_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="MtplVeAction",
            fields=[
                ("ve_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nc_tag_slno",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("ve_action", models.CharField(blank=True, max_length=500, null=True)),
                ("ve_respon", models.CharField(blank=True, max_length=250, null=True)),
                ("ve_status", models.CharField(blank=True, max_length=250, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "mtpl_ve_action",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NayabFieldsMaster",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(max_length=150)),
                ("issue_no", models.CharField(max_length=10)),
                ("spec_nyt", models.CharField(max_length=50)),
                ("mdy", models.CharField(max_length=50)),
                ("pages", models.IntegerField()),
                ("pn", models.CharField(max_length=1)),
                ("sn", models.CharField(max_length=1)),
                ("tester", models.CharField(max_length=1)),
                ("date", models.CharField(max_length=1)),
                ("record_blank", models.CharField(max_length=1)),
                ("record_blank_title", models.CharField(max_length=100)),
                ("table", models.CharField(max_length=1)),
                ("bottom_tester", models.CharField(max_length=1)),
                ("bottom_date", models.CharField(max_length=1)),
                ("bottom_start_no", models.IntegerField()),
                ("copyrigth", models.CharField(max_length=150)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nayab_fields_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NayabFieldsNtry",
            fields=[
                (
                    "report_uniq_slno",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("uniq_slno", models.IntegerField()),
                ("pn", models.CharField(max_length=20)),
                ("sn", models.CharField(max_length=20)),
                ("tester", models.CharField(max_length=20)),
                ("date", models.CharField(max_length=20)),
                ("bottom_tester", models.CharField(max_length=20)),
                ("bottom_date", models.CharField(max_length=20)),
                ("ntry_sts", models.CharField(max_length=1)),
                ("createdby", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "nayab_fields_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NayabHeaderMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("h1", models.CharField(max_length=150)),
                ("h2", models.CharField(max_length=150)),
                ("h3", models.CharField(max_length=150)),
                ("rows", models.IntegerField()),
                ("break_point", models.IntegerField()),
            ],
            options={
                "db_table": "nayab_header_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NayabSubHeaderMaster",
            fields=[
                ("uniq_slno", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("seq_slno", models.IntegerField()),
                ("sno", models.CharField(max_length=11)),
                ("subh1", models.CharField(max_length=100)),
                ("subh2", models.CharField(max_length=100)),
                ("type", models.CharField(max_length=30)),
                ("break_point", models.IntegerField()),
                ("auto_inc_slno", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "nayab_sub_header_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NayabSubHeaderNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("report_uniq_slno", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("seq_slno", models.IntegerField()),
                ("sno", models.CharField(max_length=11)),
                ("subh1", models.CharField(max_length=100)),
                ("subh2", models.CharField(max_length=100)),
                ("type", models.CharField(max_length=30)),
                ("break_point", models.IntegerField()),
            ],
            options={
                "db_table": "nayab_sub_header_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NayabTableNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("report_uniq_slno", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("rot_switch_pos", models.IntegerField()),
                ("l_limit", models.CharField(max_length=20)),
                ("u_limit", models.CharField(max_length=20)),
                ("number_24vdc", models.CharField(db_column="24vdc", max_length=20)),
                ("number_48vdc", models.CharField(db_column="48vdc", max_length=20)),
                ("number_18vdc", models.CharField(db_column="18vdc", max_length=20)),
                ("pf", models.CharField(max_length=11)),
            ],
            options={
                "db_table": "nayab_table_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Nc5WhyMaster",
            fields=[
                ("why_id", models.AutoField(primary_key=True, serialize=False)),
                ("nc_tag_slno", models.CharField(max_length=250)),
                ("why", models.CharField(blank=True, max_length=500, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "nc_5why_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcAppHist",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("date", models.DateField()),
                ("status", models.IntegerField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nc_app_hist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcAttachments",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("file_name", models.CharField(blank=True, max_length=500, null=True)),
                ("file_type", models.CharField(blank=True, max_length=50, null=True)),
                ("file_path", models.CharField(blank=True, max_length=100, null=True)),
                ("full_path", models.CharField(blank=True, max_length=100, null=True)),
                ("raw_name", models.CharField(blank=True, max_length=50, null=True)),
                ("orig_name", models.CharField(blank=True, max_length=50, null=True)),
                ("client_name", models.CharField(blank=True, max_length=50, null=True)),
                ("file_ext", models.CharField(blank=True, max_length=50, null=True)),
                ("file_size", models.CharField(blank=True, max_length=50, null=True)),
                ("is_image", models.CharField(blank=True, max_length=50, null=True)),
                ("image_width", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "image_height",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("image_type", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "image_size_str",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("type", models.CharField(blank=True, max_length=25, null=True)),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                "db_table": "nc_attachments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcCaAction",
            fields=[
                ("ca_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nc_tag_slno",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "corr_action",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("date_initiation", models.DateField()),
                (
                    "caresponce",
                    models.CharField(
                        blank=True, db_column="CAresponce", max_length=250, null=True
                    ),
                ),
                ("ca_target", models.DateField(db_column="CA_Target")),
                (
                    "castatus",
                    models.CharField(
                        blank=True, db_column="CAstatus", max_length=500, null=True
                    ),
                ),
                (
                    "catype",
                    models.CharField(
                        blank=True, db_column="CAType", max_length=250, null=True
                    ),
                ),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "nc_ca_action",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcCategoryMaster",
            fields=[
                ("category_id", models.AutoField(primary_key=True, serialize=False)),
                ("category_name", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "nc_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcDomainMaster",
            fields=[
                ("domain_id", models.AutoField(primary_key=True, serialize=False)),
                ("domain_name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "fullname",
                    models.CharField(
                        blank=True, db_column="Fullname", max_length=250, null=True
                    ),
                ),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "nc_domain_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcGeneration",
            fields=[
                ("uniq_slno", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "nc_tag_slno",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("sub_uniq_slno", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("deptcode", models.IntegerField()),
                ("requesteddate", models.DateField()),
                ("date_of_nc", models.DateField()),
                ("nc_details", models.CharField(blank=True, max_length=500, null=True)),
                ("loctn", models.CharField(blank=True, max_length=50, null=True)),
                ("nc_observed_at", models.IntegerField()),
                (
                    "responcesibility",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("target_date", models.DateField()),
                (
                    "tracebility_no",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("prob_desc", models.CharField(blank=True, max_length=500, null=True)),
                ("project", models.CharField(blank=True, max_length=500, null=True)),
                ("nc_title", models.CharField(blank=True, max_length=250, null=True)),
                ("domain_id", models.IntegerField()),
                ("category_id", models.CharField(blank=True, max_length=30, null=True)),
                ("assign", models.CharField(blank=True, max_length=500, null=True)),
                ("lot_qty", models.CharField(blank=True, max_length=250, null=True)),
                ("aff_qty", models.CharField(blank=True, max_length=250, null=True)),
                ("def_qty", models.CharField(blank=True, max_length=250, null=True)),
                ("wt_prob", models.CharField(blank=True, max_length=500, null=True)),
                ("wh_happend", models.CharField(blank=True, max_length=500, null=True)),
                ("who", models.CharField(blank=True, max_length=250, null=True)),
                ("how", models.CharField(blank=True, max_length=500, null=True)),
                ("who_owner", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "detect_with_prasent",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "nc_prob_attach",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "caaction",
                    models.CharField(
                        blank=True, db_column="CAaction", max_length=500, null=True
                    ),
                ),
                (
                    "respca",
                    models.CharField(
                        blank=True, db_column="respCA", max_length=500, null=True
                    ),
                ),
                (
                    "ca_date_completion",
                    models.CharField(
                        blank=True,
                        db_column="CA_date_completion",
                        max_length=500,
                        null=True,
                    ),
                ),
                ("proc_root_cause", models.TextField()),
                ("escape_root_cause", models.TextField()),
                (
                    "closed_attach",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "nc_closing_stmt",
                    models.TextField(
                        blank=True, db_collation="utf8_unicode_ci", null=True
                    ),
                ),
                (
                    "nc_analysis",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("end_user", models.IntegerField()),
                ("date_nc_closer", models.DateField()),
                ("status", models.IntegerField()),
                ("hod_code", models.IntegerField()),
                ("hod_status", models.IntegerField()),
                (
                    "hod_remarks",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("hod_approve_date", models.DateTimeField()),
                ("edp_code", models.IntegerField()),
                ("edp_status", models.IntegerField()),
                (
                    "edp_remarks",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("edp_approve_date", models.DateTimeField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("no_of_days", models.IntegerField()),
                ("cost_non", models.CharField(blank=True, max_length=500, null=True)),
                ("dfmea", models.CharField(blank=True, max_length=100, null=True)),
                ("pfmea", models.CharField(blank=True, max_length=100, null=True)),
                ("prev_nc", models.CharField(blank=True, max_length=100, null=True)),
                ("assoc_prev", models.CharField(blank=True, max_length=60, null=True)),
                ("reopen_reson", models.TextField()),
                ("futuredt_check", models.IntegerField()),
                ("date_future_trg", models.DateField()),
            ],
            options={
                "db_table": "nc_generation",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcLaAction",
            fields=[
                ("la_id", models.AutoField(primary_key=True, serialize=False)),
                ("nc_tag_slno", models.CharField(max_length=250)),
                ("proj", models.IntegerField()),
                ("la_details", models.CharField(blank=True, max_length=250, null=True)),
                ("la_respon", models.CharField(blank=True, max_length=250, null=True)),
                ("la_status", models.CharField(blank=True, max_length=250, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "nc_la_action",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcModuleMeeting",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("desc", models.CharField(blank=True, max_length=2000, null=True)),
                ("type", models.CharField(blank=True, max_length=500, null=True)),
                ("created_by", models.IntegerField()),
                ("created_date", models.DateField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "nc_module_meeting",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcmoduleNtry",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("deptcode", models.IntegerField()),
                ("requesteddate", models.DateField()),
                ("date_of_nc", models.DateField()),
                ("nc_details", models.CharField(blank=True, max_length=500, null=True)),
                ("loctn", models.CharField(blank=True, max_length=10, null=True)),
                ("area_of_nc", models.IntegerField()),
                (
                    "responcesibility",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("target_date", models.DateField()),
                ("rework_no", models.IntegerField()),
                ("prob_desc", models.CharField(blank=True, max_length=500, null=True)),
                ("project", models.CharField(blank=True, max_length=500, null=True)),
                ("nc_generation_status", models.IntegerField()),
                ("prev_nc", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "tracebility_no",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.IntegerField()),
                ("del_by", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "ncmodule_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcPrevAction",
            fields=[
                ("prev_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nc_tag_slno",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("docno", models.CharField(blank=True, max_length=500, null=True)),
                ("revno", models.CharField(blank=True, max_length=250, null=True)),
                (
                    "prev_respon",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "prev_status",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("doctype", models.CharField(blank=True, max_length=250, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "nc_prev_action",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcStatusMaster",
            fields=[
                ("status", models.SmallAutoField(primary_key=True, serialize=False)),
                ("status_name", models.CharField(max_length=100)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "nc_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NcVeAction",
            fields=[
                ("ve_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "nc_tag_slno",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("ve_action", models.CharField(blank=True, max_length=500, null=True)),
                ("ve_respon", models.CharField(blank=True, max_length=250, null=True)),
                ("ve_status", models.CharField(blank=True, max_length=250, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "nc_ve_action",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsCatMaster",
            fields=[
                ("catid", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.CharField(blank=True, max_length=20, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_cat_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsCatSubMaster",
            fields=[
                ("scatid", models.AutoField(primary_key=True, serialize=False)),
                ("catid", models.IntegerField()),
                ("typeid", models.IntegerField(blank=True, null=True)),
                ("subcategory", models.CharField(max_length=50)),
                ("appsts", models.CharField(blank=True, max_length=10, null=True)),
                ("duration", models.FloatField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_cat_sub_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsCattypeMaster",
            fields=[
                ("typeid", models.AutoField(primary_key=True, serialize=False)),
                ("catid", models.IntegerField(blank=True, null=True)),
                ("typename", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_cattype_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsHrReqType",
            fields=[
                ("hr_id", models.AutoField(primary_key=True, serialize=False)),
                ("type", models.CharField(blank=True, max_length=20, null=True)),
                ("name", models.CharField(blank=True, max_length=50, null=True)),
                ("catid", models.IntegerField()),
                ("typeid", models.IntegerField()),
                ("scatid", models.IntegerField()),
                ("appr", models.CharField(blank=True, max_length=10, null=True)),
                ("sts", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "nns_hr_req_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("slno_multi", models.IntegerField()),
                ("desc", models.CharField(blank=True, max_length=5000, null=True)),
                ("date", models.DateField()),
                ("ntryby", models.IntegerField()),
                ("sts_up", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsPbTypeMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("pb_type", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "pb_sub_type",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("pb_no", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("aprl_type", models.CharField(blank=True, max_length=1, null=True)),
                ("direct_mail", models.IntegerField()),
                ("duration", models.FloatField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_pb_type_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsProjMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("proj_master", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_proj_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsPrtyMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("prty", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_prty_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsRatingNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tag_no", models.IntegerField()),
                ("feedback_desc", models.IntegerField()),
                ("rating", models.IntegerField()),
                ("remarks", models.CharField(max_length=250)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.DateField()),
                ("delete_reason", models.CharField(max_length=200)),
            ],
            options={
                "db_table": "nns_rating_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsReq",
            fields=[
                ("req_id", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("ntry_date", models.DateField(blank=True, null=True)),
                ("descrp", models.CharField(blank=True, max_length=600, null=True)),
                ("req_src", models.IntegerField(blank=True, null=True)),
                ("sys_type", models.CharField(blank=True, max_length=10, null=True)),
                ("sys_no", models.CharField(blank=True, max_length=20, null=True)),
                ("catid", models.IntegerField()),
                ("typeid", models.IntegerField(blank=True, null=True)),
                ("scatid", models.IntegerField()),
                ("sts", models.IntegerField()),
                ("approval", models.IntegerField()),
                ("hod_sts", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("md_sts", models.IntegerField()),
                ("md", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                (
                    "attachments",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("priority", models.IntegerField()),
                ("scat_ft", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "attachment_two",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("assign", models.IntegerField(blank=True, null=True)),
                ("loc", models.CharField(blank=True, max_length=50, null=True)),
                ("dept", models.IntegerField(blank=True, null=True)),
                ("close_type", models.IntegerField(blank=True, null=True)),
                ("sts_tms", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_req",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsReqCloseTypeMaster",
            fields=[
                ("cid", models.AutoField(primary_key=True, serialize=False)),
                ("close_catid", models.IntegerField(blank=True, null=True)),
                ("close_cattype", models.IntegerField(blank=True, null=True)),
                ("close_subcat", models.IntegerField(blank=True, null=True)),
                ("close_typename", models.CharField(max_length=100)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_req_close_type_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsReqHistory",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("req_id", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("comments", models.CharField(blank=True, max_length=500, null=True)),
                ("status", models.CharField(blank=True, max_length=20, null=True)),
                ("stage", models.CharField(max_length=5)),
                ("his_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("work_min", models.IntegerField()),
            ],
            options={
                "db_table": "nns_req_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsReqHistoryUpload",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("req_id", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("comments", models.CharField(blank=True, max_length=500, null=True)),
                ("status", models.CharField(blank=True, max_length=20, null=True)),
                ("stage", models.CharField(max_length=5)),
                ("his_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("work_min", models.IntegerField()),
            ],
            options={
                "db_table": "nns_req_history_upload",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsReqMore",
            fields=[
                ("req_id", models.AutoField(primary_key=True, serialize=False)),
                ("start_date", models.DateField()),
                ("start_time", models.TimeField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("end_time", models.TimeField()),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "nns_req_more",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsReqSrcMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("req_src", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_req_src_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsStsMstr",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("desc", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_sts_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsStsUpdtMstr",
            fields=[
                ("slno", models.IntegerField(primary_key=True, serialize=False)),
                ("desc", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("ind1", models.IntegerField()),
            ],
            options={
                "db_table": "nns_sts_updt_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsSysNumbers",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("location", models.CharField(blank=True, max_length=10, null=True)),
                ("sys_type", models.CharField(blank=True, max_length=10, null=True)),
                ("sys_initial", models.CharField(blank=True, max_length=10, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "nns_sys_numbers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsTimespentRequests",
            fields=[
                ("tid", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField(blank=True, null=True)),
                ("his_date", models.DateField(blank=True, null=True)),
                ("req_id", models.IntegerField(blank=True, null=True)),
                ("time_spent", models.TimeField()),
                ("ts_sts", models.IntegerField()),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("dup_t", models.CharField(blank=True, max_length=12, null=True)),
            ],
            options={
                "db_table": "nns_timespent_requests",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsUsrNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("mod", models.IntegerField()),
                ("req_desc", models.CharField(blank=True, max_length=5000, null=True)),
                ("rqstdby", models.IntegerField()),
                ("sts", models.IntegerField()),
                ("rqstd_dt", models.DateField()),
                ("rjct_rsn", models.CharField(blank=True, max_length=100, null=True)),
                ("hod_dcsn", models.IntegerField()),
                ("hod_cmnts", models.CharField(blank=True, max_length=500, null=True)),
                ("pb_type", models.IntegerField()),
                ("pb_sub_type", models.IntegerField()),
                ("req_src", models.IntegerField()),
                ("prty", models.IntegerField()),
                ("tot_dur", models.CharField(blank=True, max_length=15, null=True)),
                ("ntryby", models.IntegerField()),
                ("sts_up", models.IntegerField()),
                ("assign", models.IntegerField()),
                ("start_time", models.CharField(blank=True, max_length=20, null=True)),
                ("end_time", models.CharField(blank=True, max_length=20, null=True)),
                ("repeat", models.CharField(blank=True, max_length=20, null=True)),
                ("rep", models.IntegerField()),
                ("days", models.IntegerField()),
                ("hrs", models.IntegerField()),
                ("mins", models.IntegerField()),
                ("hod_code", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("hod_time", models.CharField(blank=True, max_length=10, null=True)),
                ("loc", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "attach_file_rename",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "attach_file_original",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("timestamp", models.DateTimeField()),
                ("edbd_code", models.CharField(blank=True, max_length=10, null=True)),
                ("edbd_sts", models.IntegerField()),
                ("edbd_date", models.DateField()),
                ("edbd_time", models.CharField(blank=True, max_length=10, null=True)),
                ("edbd_comnt", models.TextField(blank=True, null=True)),
                (
                    "cc_mail_ids",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("vnv_uniq_slno", models.IntegerField()),
                ("trail_months", models.IntegerField()),
                ("trail_days", models.IntegerField()),
                ("ucp_wait_time", models.IntegerField()),
                (
                    "attach_file_rename2",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "attach_file_original2",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "initiate_to",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "act_int_time",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "target_time",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("sys_no", models.CharField(blank=True, max_length=20, null=True)),
                ("rating", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "nns_usr_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NnsUsrNtryOld",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("mod", models.IntegerField()),
                ("req_desc", models.CharField(blank=True, max_length=5000, null=True)),
                ("rqstdby", models.IntegerField()),
                ("sts", models.IntegerField()),
                ("rqstd_dt", models.DateField()),
                ("rjct_rsn", models.CharField(blank=True, max_length=100, null=True)),
                ("hod_dcsn", models.IntegerField()),
                ("hod_cmnts", models.CharField(blank=True, max_length=500, null=True)),
                ("pb_type", models.IntegerField()),
                ("pb_sub_type", models.IntegerField()),
                ("req_src", models.IntegerField()),
                ("prty", models.IntegerField()),
                ("tot_dur", models.CharField(blank=True, max_length=15, null=True)),
                ("ntryby", models.IntegerField()),
                ("sts_up", models.IntegerField()),
                ("assign", models.IntegerField()),
                ("start_time", models.CharField(blank=True, max_length=20, null=True)),
                ("end_time", models.CharField(blank=True, max_length=20, null=True)),
                ("repeat", models.CharField(blank=True, max_length=20, null=True)),
                ("rep", models.IntegerField()),
                ("days", models.IntegerField()),
                ("hrs", models.IntegerField()),
                ("mins", models.IntegerField()),
                ("hod_code", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("hod_time", models.CharField(blank=True, max_length=10, null=True)),
                ("loc", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "attach_file_rename",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "attach_file_original",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("timestamp", models.DateTimeField()),
                ("edbd_code", models.CharField(blank=True, max_length=10, null=True)),
                ("edbd_sts", models.IntegerField()),
                ("edbd_date", models.DateField()),
                ("edbd_time", models.CharField(blank=True, max_length=10, null=True)),
                ("edbd_comnt", models.TextField(blank=True, null=True)),
                (
                    "cc_mail_ids",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("vnv_uniq_slno", models.IntegerField()),
                ("trail_months", models.IntegerField()),
                ("trail_days", models.IntegerField()),
                ("ucp_wait_time", models.IntegerField()),
                (
                    "attach_file_rename2",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "attach_file_original2",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "initiate_to",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "act_int_time",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                (
                    "target_time",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("rating", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "nns_usr_ntry_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="NoteMaster",
            fields=[
                ("note_no", models.AutoField(primary_key=True, serialize=False)),
                ("note_name", models.CharField(max_length=20)),
                ("note_desc", models.TextField()),
            ],
            options={
                "db_table": "note_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeeBreakDetails",
            fields=[
                ("break_id", models.AutoField(primary_key=True, serialize=False)),
                ("operator", models.CharField(max_length=6)),
                ("shift", models.CharField(max_length=2)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(max_length=6)),
                ("machine", models.IntegerField()),
                ("mach_break_down_from_date", models.DateField()),
                ("mach_break_down_time", models.CharField(max_length=10)),
                ("mach_break_down_to_date", models.DateField()),
                ("mach_break_start_time", models.CharField(max_length=10)),
                ("mach_down_time", models.CharField(max_length=10)),
                ("nat_of_prob", models.TextField()),
                ("err_msg", models.TextField()),
                ("sym_obs", models.TextField()),
                ("root_cause", models.TextField()),
                ("corr_act", models.IntegerField()),
                ("prev_act", models.TextField()),
                ("attendedby", models.CharField(max_length=6)),
                ("reviewby", models.CharField(max_length=6)),
                ("attended_by_op", models.CharField(max_length=15)),
                ("attend", models.CharField(max_length=50)),
                ("dept_type", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_break_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeeBreakMatDetails",
            fields=[
                ("mat_id", models.AutoField(primary_key=True, serialize=False)),
                ("break_id", models.IntegerField()),
                ("indicator", models.CharField(max_length=5)),
                ("materialcode", models.CharField(max_length=12)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_break_mat_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeeCardMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("material", models.CharField(max_length=11)),
                ("card_name", models.CharField(blank=True, max_length=50, null=True)),
                ("project", models.CharField(blank=True, max_length=20, null=True)),
                ("alphabet", models.CharField(blank=True, max_length=5, null=True)),
                ("createdby", models.CharField(blank=True, max_length=6, null=True)),
                ("ntry_date", models.DateField()),
                ("secondmat", models.CharField(blank=True, max_length=200, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_card_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeeChangeover",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("ntry_date", models.CharField(max_length=15)),
                ("machine", models.IntegerField()),
                ("starttime", models.CharField(blank=True, max_length=15, null=True)),
                ("endtime", models.CharField(max_length=15)),
                ("totaltime", models.CharField(max_length=15)),
                ("remarks", models.CharField(blank=True, max_length=200, null=True)),
                ("empcode", models.CharField(blank=True, max_length=6, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_changeover",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeeCycleMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("alphabet", models.CharField(blank=True, max_length=5, null=True)),
                ("machine", models.IntegerField()),
                ("coat_ax", models.CharField(blank=True, max_length=5, null=True)),
                ("cyc_time", models.IntegerField()),
                ("createdby", models.CharField(blank=True, max_length=6, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("material", models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                "db_table": "oee_cycle_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeeDefaultComments",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("type", models.IntegerField()),
                (
                    "description",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "oee_default_comments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeeDefaultRemarks",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("reamarks", models.CharField(blank=True, max_length=100, null=True)),
                ("reasons", models.CharField(blank=True, max_length=100, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "oee_default_remarks",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeeMachine",
            fields=[
                ("mach_id", models.AutoField(primary_key=True, serialize=False)),
                ("machine", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.CharField(blank=True, max_length=6, null=True)),
                ("ntry_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_machine",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeeMaintMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("activity", models.CharField(max_length=150)),
                ("desc", models.CharField(max_length=100)),
                ("frequency", models.CharField(max_length=2)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_maint_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeePcbBarMaster",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("prod_or", models.CharField(max_length=11)),
                ("mat", models.CharField(blank=True, max_length=11, null=True)),
                ("desc", models.CharField(blank=True, max_length=200, null=True)),
                ("qty", models.IntegerField()),
                ("revision", models.CharField(blank=True, max_length=11, null=True)),
                ("createdby", models.CharField(blank=True, max_length=6, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_pcb_bar_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeePcbBarMaster1708",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("prod_or", models.CharField(max_length=11)),
                ("mat", models.CharField(blank=True, max_length=11, null=True)),
                ("desc", models.CharField(blank=True, max_length=200, null=True)),
                ("qty", models.IntegerField()),
                ("revision", models.CharField(blank=True, max_length=11, null=True)),
                ("createdby", models.CharField(blank=True, max_length=6, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_pcb_bar_master_17_08",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeePcbProdDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("operator", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("machine", models.IntegerField()),
                ("shift", models.CharField(max_length=2)),
                ("pcb_barcod", models.CharField(max_length=11)),
                ("cycle_time", models.IntegerField()),
                ("good_boards", models.IntegerField()),
                ("job_date", models.DateField()),
                ("varities", models.IntegerField()),
                ("component", models.IntegerField()),
                ("prod_qty", models.IntegerField()),
                ("frst_ins_by", models.IntegerField()),
                ("aft_frst_ins_by", models.CharField(max_length=6)),
                ("remarks", models.CharField(max_length=500)),
                ("change_start", models.CharField(max_length=9)),
                ("change_end", models.CharField(max_length=9)),
                ("change_time", models.CharField(max_length=9)),
                ("first_start", models.CharField(max_length=9)),
                ("first_end", models.CharField(max_length=9)),
                ("first_time", models.CharField(max_length=9)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_pcb_prod_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeePcbProdDetailsnew",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("operator", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("machine", models.IntegerField()),
                ("shift", models.CharField(blank=True, max_length=2, null=True)),
                ("pcb_barcod", models.CharField(blank=True, max_length=11, null=True)),
                ("cycle_time", models.CharField(blank=True, max_length=50, null=True)),
                ("good_boards", models.IntegerField()),
                ("job_date", models.DateField()),
                ("varities", models.IntegerField()),
                ("component", models.IntegerField()),
                ("prod_qty", models.IntegerField()),
                ("frst_ins_by", models.IntegerField()),
                (
                    "aft_frst_ins_by",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("remarks", models.CharField(blank=True, max_length=500, null=True)),
                ("time_type", models.CharField(blank=True, max_length=20, null=True)),
                ("start", models.CharField(blank=True, max_length=10, null=True)),
                ("end", models.CharField(blank=True, max_length=10, null=True)),
                ("total", models.CharField(blank=True, max_length=10, null=True)),
                ("breakdown_time", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_pcb_prod_detailsnew",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeePcbProdTimings",
            fields=[
                ("time_id", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("pcb_barcod", models.IntegerField()),
                ("time_type", models.CharField(blank=True, max_length=6, null=True)),
                ("start", models.CharField(blank=True, max_length=10, null=True)),
                ("end", models.CharField(blank=True, max_length=10, null=True)),
                ("total", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_pcb_prod_timings",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeePcbShiftTimings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("shift", models.CharField(blank=True, max_length=5, null=True)),
                ("a_810_830", models.CharField(blank=True, max_length=2, null=True)),
                ("a_110_117", models.CharField(blank=True, max_length=2, null=True)),
                ("a_1145_1225", models.CharField(blank=True, max_length=2, null=True)),
                ("gen_11_117", models.CharField(blank=True, max_length=2, null=True)),
                ("gen_1230_110", models.CharField(blank=True, max_length=2, null=True)),
                ("gen_16_167", models.CharField(blank=True, max_length=2, null=True)),
                ("b_4_47", models.CharField(blank=True, max_length=2, null=True)),
                ("b_1930_2010", models.CharField(blank=True, max_length=2, null=True)),
                ("c_1_17", models.CharField(blank=True, max_length=2, null=True)),
                ("timestamp", models.DateTimeField()),
                ("date", models.DateField()),
            ],
            options={
                "db_table": "oee_pcb_shift_timings",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeePrevActivities",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("prev_id", models.IntegerField()),
                ("activity", models.IntegerField()),
                ("createdby", models.CharField(max_length=6)),
                ("done_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_prev_activities",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeePrevDetails",
            fields=[
                ("prev_id", models.AutoField(primary_key=True, serialize=False)),
                ("operator", models.CharField(blank=True, max_length=6, null=True)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(blank=True, max_length=10, null=True)),
                ("machine", models.IntegerField()),
                ("shift", models.CharField(blank=True, max_length=6, null=True)),
                ("maint", models.CharField(blank=True, max_length=10, null=True)),
                ("maint_start", models.CharField(blank=True, max_length=10, null=True)),
                ("maint_end", models.CharField(blank=True, max_length=10, null=True)),
                ("maint_time", models.CharField(blank=True, max_length=10, null=True)),
                ("dept_type", models.CharField(blank=True, max_length=100, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "oee_prev_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeeProdDetails",
            fields=[
                ("prod_id", models.AutoField(primary_key=True, serialize=False)),
                ("operator", models.CharField(max_length=6)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(max_length=10)),
                ("shift", models.CharField(max_length=5)),
                ("machine", models.IntegerField()),
                ("pcb_barcod", models.CharField(max_length=30)),
                ("coat_ax", models.CharField(max_length=10)),
                ("cyc_time", models.CharField(max_length=11)),
                ("prod_start", models.CharField(max_length=10)),
                ("prod_end", models.CharField(max_length=10)),
                ("prod_time", models.CharField(max_length=10)),
                ("jig", models.CharField(max_length=5)),
                ("prod_qty", models.IntegerField()),
                ("acc_qty", models.IntegerField()),
                ("def_det", models.TextField(blank=True, null=True)),
                ("rmrks", models.TextField(blank=True, null=True)),
                (
                    "cngover_rmks",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("tl_coms", models.TextField(blank=True, null=True)),
                ("action", models.TextField(blank=True, null=True)),
                ("status", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("material_type", models.IntegerField()),
                ("batch_no", models.CharField(max_length=20)),
                ("tbatch_no", models.CharField(max_length=20)),
                ("main_pcb", models.IntegerField()),
                ("index_no", models.IntegerField()),
            ],
            options={
                "db_table": "oee_prod_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OeeProdDetailsTemp",
            fields=[
                ("prod_id", models.AutoField(primary_key=True, serialize=False)),
                ("operator", models.CharField(max_length=6)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(max_length=10)),
                ("shift", models.CharField(max_length=5)),
                ("machine", models.IntegerField()),
                ("pcb_barcod", models.CharField(max_length=30)),
                ("coat_ax", models.CharField(max_length=10)),
                ("cyc_time", models.CharField(max_length=11)),
                ("prod_start", models.CharField(max_length=10)),
                ("prod_end", models.CharField(max_length=10)),
                ("prod_time", models.CharField(max_length=10)),
                ("jig", models.CharField(max_length=5)),
                ("prod_qty", models.IntegerField()),
                ("acc_qty", models.IntegerField()),
                ("def_det", models.TextField(blank=True, null=True)),
                ("rmrks", models.TextField(blank=True, null=True)),
                ("tl_coms", models.TextField(blank=True, null=True)),
                ("action", models.TextField(blank=True, null=True)),
                ("status", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("material_type", models.IntegerField()),
                ("batch_no", models.CharField(max_length=12)),
                ("tbatch_no", models.CharField(max_length=54)),
                ("main_pcb", models.IntegerField()),
                ("index_no", models.IntegerField()),
            ],
            options={
                "db_table": "oee_prod_details_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OilChangeOilchangedata",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("employee_code", models.IntegerField()),
                ("employee_name", models.CharField(max_length=100)),
                ("project", models.CharField(max_length=50)),
                ("rake_id", models.CharField(max_length=100)),
                ("commissioning_date", models.DateField()),
                ("railway_shed", models.CharField(max_length=100)),
                ("railway_zone", models.CharField(max_length=100)),
                ("project_name", models.CharField(max_length=100)),
                ("regreasing_date", models.DateField()),
                ("oil_change_date", models.DateField()),
                ("km_cover_oil", models.IntegerField()),
                ("km_cover_regr", models.IntegerField()),
            ],
            options={
                "db_table": "Oil_change_oilchangedata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="OnlineUserCountMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                ("empcode", models.IntegerField()),
                ("sys_name", models.CharField(max_length=20)),
                ("ip", models.CharField(max_length=20)),
                ("file_name", models.CharField(max_length=256)),
                ("coments", models.CharField(max_length=250)),
            ],
            options={
                "db_table": "online_user_count_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PahrComplaintDetails",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("ntry_date", models.DateField()),
                ("expiry_date", models.DateField()),
                ("completed_date", models.DateField()),
                ("empcode", models.IntegerField()),
                ("mediater", models.CharField(max_length=6)),
                ("design", models.CharField(max_length=100)),
                ("dept", models.IntegerField()),
                ("complaint_main_type", models.IntegerField()),
                ("complaint_type", models.IntegerField()),
                ("description", models.CharField(max_length=1000)),
                ("hod", models.IntegerField()),
                ("hod_aprl_sts", models.IntegerField()),
                ("hod_ntry_date", models.DateField()),
                ("hod_comment", models.CharField(max_length=500)),
                ("pahr_sts", models.IntegerField()),
                ("pahr_assign_by", models.CharField(max_length=10)),
                ("pahr_assign_to", models.CharField(max_length=10)),
                ("pahr_comment", models.CharField(max_length=100)),
                ("pahr_group_mail", models.CharField(max_length=100)),
                ("pahr_group_ids", models.CharField(max_length=200)),
                ("pahr_assign_date", models.DateField()),
                ("status", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pahr_complaint_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PahrComplaintHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("pahr_sts", models.IntegerField()),
                ("desc", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=10)),
                ("reassign", models.CharField(max_length=10)),
                ("ntry_date", models.DateField()),
                ("user_sts", models.IntegerField()),
                ("update_sts", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pahr_complaint_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PahrComplaintHistoryNew",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("status", models.IntegerField()),
                ("desc", models.CharField(max_length=400)),
                ("action_by", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pahr_complaint_history_new",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PahrComplaintNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("ntry_date", models.DateField()),
                ("expiry_date", models.DateField()),
                ("completed_date", models.DateField()),
                ("empcode", models.IntegerField()),
                ("loc", models.CharField(max_length=50)),
                ("dept", models.IntegerField()),
                ("complaint_main_type", models.IntegerField()),
                ("complaint_type", models.IntegerField()),
                ("description", models.CharField(max_length=1000)),
                ("hod", models.IntegerField()),
                ("hod_aprl_sts", models.IntegerField()),
                ("hod_ntry_date", models.DateField()),
                ("hod_comment", models.CharField(max_length=500)),
                ("assign_to", models.CharField(max_length=10)),
                ("assigned_date", models.DateField()),
                ("status", models.IntegerField()),
                ("hr_hod", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("rating", models.IntegerField()),
                ("feedbck_commnts", models.CharField(max_length=200)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pahr_complaint_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PahrIdcardEmplist",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("pa_ref", models.CharField(max_length=200)),
                ("empcode", models.IntegerField()),
                ("issu_date", models.DateField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pahr_idcard_emplist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PahrMainComplaintType",
            fields=[
                ("main_id", models.AutoField(primary_key=True, serialize=False)),
                ("complaint_main_type", models.CharField(max_length=50)),
                ("group_mail_id", models.CharField(max_length=100)),
                ("group_ids", models.CharField(max_length=200)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pahr_main_complaint_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PahrStsMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pahr_sts", models.CharField(max_length=50)),
                ("createdby", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("assign_auth", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "pahr_sts_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PahrSubComplaintType",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("main_id", models.IntegerField()),
                ("complaint_type", models.CharField(max_length=100)),
                ("expirydays", models.IntegerField()),
                ("assign_to", models.IntegerField()),
                ("msfa_assgn_to", models.IntegerField()),
                ("responsible", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pahr_sub_complaint_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PahrSubComplaintType25072021",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("main_id", models.IntegerField()),
                ("complaint_type", models.CharField(max_length=100)),
                ("expirydays", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pahr_sub_complaint_type_25-07-2021",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PahrSubComplaintTypeLocation",
            fields=[
                ("lid", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("main_id", models.IntegerField()),
                ("location", models.CharField(max_length=20)),
                ("assign_to", models.IntegerField()),
                ("responsible", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pahr_sub_complaint_type_location",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PartsTable",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("reworkreportno", models.BigIntegerField()),
                ("name", models.CharField(blank=True, max_length=500, null=True)),
                ("testedby_multi", models.IntegerField()),
                ("code", models.CharField(blank=True, max_length=12, null=True)),
                ("legend", models.CharField(blank=True, max_length=5000, null=True)),
                ("batchno", models.CharField(blank=True, max_length=5000, null=True)),
                ("make", models.CharField(blank=True, max_length=5000, null=True)),
                (
                    "partretestedat",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("rresults", models.CharField(max_length=1000)),
                ("serialno", models.IntegerField()),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("sno_wise", models.IntegerField()),
                ("consm_qty", models.CharField(max_length=100)),
                ("rej_rew_qty", models.IntegerField()),
                ("uom", models.CharField(max_length=10)),
                ("reason", models.TextField()),
                ("rej_rew_sts", models.IntegerField()),
                ("rej_slip_no", models.IntegerField()),
                ("part_no", models.CharField(max_length=50)),
                ("kms", models.FloatField()),
                ("days", models.FloatField()),
                ("megaw_hours", models.FloatField(db_column="megaW_hours")),
                ("supplier", models.IntegerField()),
                ("doc_no", models.IntegerField()),
                ("date_igi", models.CharField(max_length=10)),
                ("ntry_by_igi", models.IntegerField()),
                ("fitem_code", models.BigIntegerField()),
                ("fitem_slno", models.IntegerField()),
                ("qty_rej_igi", models.IntegerField()),
                ("igi_remarks", models.CharField(max_length=500)),
                ("timestapm_igi", models.CharField(max_length=20)),
                ("sts_igi", models.IntegerField()),
                ("service_report_no", models.IntegerField()),
                ("sts_slno_purchase", models.IntegerField()),
                ("igi_completed_date", models.DateField()),
                ("totappliofcom", models.IntegerField()),
                ("totcomqty", models.IntegerField()),
                ("acrappl", models.IntegerField()),
                ("totfailure", models.IntegerField()),
                ("ca", models.CharField(max_length=500)),
                ("faildatethird", models.CharField(max_length=12)),
                ("failapp", models.TextField(blank=True, null=True)),
                ("igisampling", models.TextField(blank=True, null=True)),
                ("tl", models.CharField(max_length=6)),
                ("gl", models.CharField(max_length=6)),
                ("compo_wa", models.CharField(blank=True, max_length=50, null=True)),
                ("fag_mail", models.CharField(max_length=250)),
                ("vend_sent_date", models.CharField(max_length=250)),
                ("from_loc", models.CharField(max_length=100)),
                ("to_loc", models.CharField(max_length=100)),
                ("dept_from", models.IntegerField()),
                ("fc_dept", models.CharField(max_length=250)),
                ("analysis_levels_parts", models.IntegerField()),
                ("fc_sts_dept_to", models.CharField(max_length=250)),
                ("matcode_multi", models.CharField(max_length=250)),
                ("rej_atta_name", models.CharField(max_length=500)),
                ("vend_atta_name", models.CharField(max_length=500)),
                ("fc_from_date", models.DateField()),
                ("fc_route_date", models.DateField()),
                ("route_value", models.IntegerField()),
                ("route_value_sub", models.IntegerField()),
                ("hod_sts", models.CharField(max_length=15)),
                ("ca_time", models.CharField(max_length=100)),
                ("rework_time", models.CharField(max_length=100)),
                ("reason_delay", models.TextField(blank=True, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("type", models.IntegerField()),
                ("db_type", models.IntegerField()),
                ("type_ref", models.IntegerField()),
                ("masterslno", models.IntegerField()),
                ("analysis_comp", models.IntegerField()),
                ("war_period", models.CharField(max_length=100)),
                ("master_slno", models.CharField(max_length=100)),
                ("srap_status", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("typeofprocess", models.IntegerField()),
                (
                    "latest_update",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                ("nonwar", models.IntegerField()),
                ("vendor", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "db_table": "parts_table",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PartsTable11022022",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("reworkreportno", models.BigIntegerField()),
                ("name", models.CharField(blank=True, max_length=500, null=True)),
                ("testedby_multi", models.IntegerField()),
                ("code", models.CharField(blank=True, max_length=12, null=True)),
                ("legend", models.CharField(blank=True, max_length=5000, null=True)),
                ("batchno", models.CharField(blank=True, max_length=5000, null=True)),
                ("make", models.CharField(blank=True, max_length=5000, null=True)),
                (
                    "partretestedat",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("rresults", models.CharField(max_length=1000)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("sno_wise", models.IntegerField()),
                ("consm_qty", models.IntegerField()),
                ("rej_rew_qty", models.IntegerField()),
                ("uom", models.CharField(max_length=10)),
                ("reason", models.CharField(max_length=500)),
                ("rej_rew_sts", models.IntegerField()),
                ("rej_slip_no", models.IntegerField()),
                ("part_no", models.CharField(max_length=50)),
                ("kms", models.FloatField()),
                ("days", models.FloatField()),
                ("megaw_hours", models.FloatField(db_column="megaW_hours")),
                ("supplier", models.IntegerField()),
                ("doc_no", models.IntegerField()),
                ("date_igi", models.CharField(max_length=10)),
                ("ntry_by_igi", models.IntegerField()),
                ("fitem_code", models.BigIntegerField()),
                ("fitem_slno", models.IntegerField()),
                ("qty_rej_igi", models.IntegerField()),
                ("igi_remarks", models.CharField(max_length=500)),
                ("timestapm_igi", models.CharField(max_length=20)),
                ("sts_igi", models.IntegerField()),
                ("service_report_no", models.IntegerField()),
                ("sts_slno_purchase", models.IntegerField()),
                ("igi_completed_date", models.DateField()),
                ("totappliofcom", models.IntegerField()),
                ("totcomqty", models.IntegerField()),
                ("acrappl", models.IntegerField()),
                ("totfailure", models.IntegerField()),
                ("ca", models.CharField(max_length=500)),
                ("faildatethird", models.CharField(max_length=12)),
                ("failapp", models.TextField()),
                ("igisampling", models.TextField()),
                ("tl", models.CharField(max_length=6)),
                ("gl", models.CharField(max_length=6)),
                ("compo_wa", models.CharField(max_length=50)),
                ("fag_mail", models.CharField(max_length=250)),
                ("vend_sent_date", models.CharField(max_length=250)),
                ("from_loc", models.CharField(max_length=100)),
                ("to_loc", models.CharField(max_length=100)),
                ("dept_from", models.IntegerField()),
                ("fc_dept", models.CharField(max_length=250)),
                ("analysis_levels_parts", models.IntegerField()),
                ("fc_sts_dept_to", models.CharField(max_length=250)),
                ("matcode_multi", models.CharField(max_length=250)),
                ("rej_atta_name", models.CharField(max_length=500)),
                ("vend_atta_name", models.CharField(max_length=500)),
                ("fc_from_date", models.DateField()),
                ("fc_route_date", models.DateField()),
                ("route_value", models.IntegerField()),
                ("route_value_sub", models.IntegerField()),
                ("hod_sts", models.CharField(max_length=15)),
                ("ca_time", models.CharField(max_length=100)),
                ("rework_time", models.CharField(max_length=100)),
                ("reason_delay", models.TextField()),
                ("remarks", models.TextField()),
                ("type", models.IntegerField()),
                ("db_type", models.IntegerField()),
                ("type_ref", models.IntegerField()),
                ("masterslno", models.IntegerField()),
                ("analysis_comp", models.IntegerField()),
                ("war_period", models.CharField(max_length=100)),
                ("master_slno", models.CharField(max_length=100)),
                ("srap_status", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "parts_table_11_02_2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PartsTableIgiNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_report_no", models.IntegerField()),
                ("sno", models.IntegerField()),
                ("igi_remarks", models.CharField(max_length=1500)),
                ("sts_slno", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "parts_table_igi_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PartsTablePurchaseNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("service_report_no", models.IntegerField()),
                ("sno", models.IntegerField()),
                ("remarks", models.CharField(max_length=1500)),
                ("sts_slno", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "parts_table_purchase_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PartsTablePurchaseStsMaster",
            fields=[
                ("sts_slno", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=30)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "parts_table_purchase_sts_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PcbAssemblyRework",
            fields=[
                (
                    "rework_reference_no",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("sap_production_order_no", models.IntegerField(blank=True, null=True)),
                (
                    "material_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "sub_assembly_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("sub_assembly_verification_no", models.IntegerField()),
                ("sub_assembly_serial_no", models.IntegerField(blank=True, null=True)),
                ("problem_observe_date", models.DateField(blank=True, null=True)),
                (
                    "problem_oberserved_by",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                (
                    "problem_observed_stage",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("problem_description", models.TextField(blank=True, null=True)),
                (
                    "root_cause",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "corr_action",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("rework_details", models.TextField(blank=True, null=True)),
                (
                    "failure_category",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "problem_done_by",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "rework_done_by",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "rejection_slip_number",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                ("createdby", models.CharField(blank=True, max_length=100, null=True)),
                ("finalsave", models.CharField(blank=True, max_length=5, null=True)),
                ("timestamp", models.DateTimeField()),
                ("entry_type", models.CharField(blank=True, max_length=11, null=True)),
                ("mount_type", models.IntegerField()),
                ("rew_det2", models.IntegerField(blank=True, null=True)),
                ("uniq_slno", models.IntegerField()),
                ("qty", models.IntegerField()),
                ("rootcause", models.TextField(blank=True, null=True)),
                ("correctiveactca", models.TextField(blank=True, null=True)),
                ("preventiveactca", models.TextField(blank=True, null=True)),
                ("empcode", models.CharField(blank=True, max_length=11, null=True)),
                ("nc_takenup", models.TextField(blank=True, null=True)),
                ("mis_proof", models.TextField(blank=True, null=True)),
                ("sop_prep", models.TextField(blank=True, null=True)),
                ("doc_update", models.TextField(blank=True, null=True)),
                ("qcc_taken", models.TextField(blank=True, null=True)),
                ("stray_case", models.TextField(blank=True, null=True)),
                ("inspection_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("comp_solder", models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                "db_table": "pcb_assembly_rework",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PcbBatchMulti",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("order", models.IntegerField()),
                ("desc", models.CharField(max_length=50)),
                ("from_field", models.IntegerField(db_column="from")),
                ("to", models.IntegerField()),
            ],
            options={
                "db_table": "pcb_batch_multi",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PcbMachineManualNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("project", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "material_number",
                    models.CharField(blank=True, max_length=12, null=True),
                ),
                ("machine", models.CharField(blank=True, max_length=300, null=True)),
                ("manual", models.CharField(blank=True, max_length=300, null=True)),
                ("change_done", models.CharField(blank=True, max_length=50, null=True)),
                ("change_date", models.CharField(blank=True, max_length=10, null=True)),
                ("created", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("deleted_by", models.IntegerField()),
                ("delete_date", models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                "db_table": "pcb_machine_manual_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PcbMatSlipsTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("desc", models.CharField(blank=True, max_length=100, null=True)),
                ("ref_name", models.CharField(blank=True, max_length=100, null=True)),
                ("code", models.CharField(blank=True, max_length=11, null=True)),
                ("pcb_name", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "db_table": "pcb_mat_slips_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PcbMountMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("mount_name", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "pcb_mount_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PcbObsPrRew",
            fields=[
                ("emp_code", models.IntegerField(primary_key=True, serialize=False)),
                ("emp_name", models.CharField(max_length=50)),
                ("createdby", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pcb_obs_pr_rew",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PcbPartqtyNtry",
            fields=[
                ("slno", models.IntegerField(primary_key=True, serialize=False)),
                ("project", models.CharField(max_length=250)),
                ("material_number", models.CharField(max_length=25)),
                ("mat_code", models.CharField(max_length=25)),
                ("machine", models.IntegerField()),
                ("qty_per", models.IntegerField()),
                ("req_ma_qty", models.IntegerField()),
                ("mc_qty", models.IntegerField()),
                ("batch_qty", models.IntegerField()),
                ("sap_qty", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pcb_partqty_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PcbProdLogNtry",
            fields=[
                ("slno", models.IntegerField()),
                ("date", models.DateField()),
                ("prevent_main_from_hr", models.CharField(max_length=10)),
                ("prevent_main_to_hr", models.CharField(max_length=10)),
                ("prevent_main_tot", models.CharField(max_length=10)),
                ("po", models.CharField(blank=True, max_length=50, null=True)),
                ("mat", models.CharField(blank=True, max_length=15, null=True)),
                ("batch_qty", models.IntegerField()),
                (
                    "fromwaitingtime",
                    models.CharField(
                        blank=True,
                        db_column="fromWaitingTime",
                        max_length=10,
                        null=True,
                    ),
                ),
                (
                    "towaitingtime",
                    models.CharField(
                        blank=True, db_column="toWaitingTime", max_length=10, null=True
                    ),
                ),
                (
                    "waiting_time_tot",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("from_change_over_time", models.CharField(max_length=10)),
                ("to_change_over_time", models.CharField(max_length=10)),
                ("change_over_time_tot", models.CharField(max_length=10)),
                ("from_board_insp_time", models.CharField(max_length=10)),
                ("to_board_insp_time", models.CharField(max_length=10)),
                ("board_insp_time_tot", models.CharField(max_length=10)),
                (
                    "fb_insp_done_by",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("from_prd_time", models.CharField(max_length=10)),
                ("to_prd_time", models.CharField(max_length=10)),
                ("prd_time_tot", models.CharField(max_length=10)),
                (
                    "produced_qty",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("comps_per_board", models.IntegerField()),
                ("tot_comps_per_lot", models.IntegerField()),
                ("noof_verties_per_card", models.IntegerField()),
                ("from_break_down_time", models.CharField(max_length=10)),
                ("to_break_down_time", models.CharField(max_length=10)),
                ("break_down_tot", models.CharField(max_length=10)),
                ("from_programming_time", models.CharField(max_length=10)),
                ("to_programming_time", models.CharField(max_length=10)),
                ("programming_tot", models.CharField(max_length=10)),
                ("rmrks", models.CharField(blank=True, max_length=300, null=True)),
                ("operator", models.CharField(blank=True, max_length=30, null=True)),
                ("machine_name", models.IntegerField()),
                ("customer", models.CharField(blank=True, max_length=10, null=True)),
                ("model_no", models.CharField(blank=True, max_length=15, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                (
                    "subassname_rnd",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("cycletime", models.CharField(max_length=11)),
                ("noofgoodboards", models.CharField(max_length=11)),
                ("type", models.CharField(blank=True, max_length=50, null=True)),
                ("defect_det", models.CharField(blank=True, max_length=150, null=True)),
                ("jig", models.CharField(blank=True, max_length=2, null=True)),
                ("tl_coms", models.TextField(blank=True, null=True)),
                ("action", models.TextField(blank=True, null=True)),
                ("status", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
                ("coat_axis", models.CharField(blank=True, max_length=40, null=True)),
                ("hei", models.CharField(blank=True, max_length=40, null=True)),
                ("card_slno", models.CharField(blank=True, max_length=40, null=True)),
            ],
            options={
                "db_table": "pcb_prod_log_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PcbProdMachineMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                (
                    "machine_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("model_no", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "machine_hours",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("category", models.CharField(blank=True, max_length=10, null=True)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pcb_prod_machine_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PcbRewDetailsMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("desc", models.CharField(max_length=40)),
            ],
            options={
                "db_table": "pcb_rew_details_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PcnCatMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("cat", models.IntegerField()),
                ("change_cat", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "reasonofchange",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "typeofchange",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "conclusionbyme",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
            ],
            options={
                "db_table": "pcn_cat_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PeriodMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("year", models.IntegerField()),
                ("type", models.CharField(max_length=2)),
                ("coments", models.CharField(max_length=50)),
                ("active_status", models.IntegerField()),
                ("aprsl_start_date", models.DateField()),
                ("aprsl_end_date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "period_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PfData",
            fields=[
                ("empcode", models.IntegerField(primary_key=True, serialize=False)),
                ("uan", models.IntegerField()),
                ("aadhar", models.CharField(max_length=100)),
                ("name", models.CharField(max_length=500)),
                ("dob", models.DateField()),
                ("aadhar_sts", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pf_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PhotoMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("photo", models.TextField()),
                ("ext", models.CharField(max_length=10)),
                ("createdby", models.IntegerField()),
            ],
            options={
                "db_table": "photo_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Pix",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.TextField(blank=True, null=True)),
                ("imgdata", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "pix",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PlanningDetails",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.CharField(blank=True, max_length=6, null=True)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(blank=True, max_length=10, null=True)),
                ("status", models.IntegerField()),
                ("ucpcomm", models.CharField(blank=True, max_length=500, null=True)),
                ("ucp_date", models.DateField()),
                ("hod", models.CharField(blank=True, max_length=6, null=True)),
                (
                    "planning_att",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "admin_plng_att",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "usr_ucp_rmks",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("usr_ucp_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "planning_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PlanningHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("status", models.IntegerField()),
                ("plan_remrks", models.TextField(blank=True, null=True)),
                ("createdby", models.CharField(blank=True, max_length=6, null=True)),
                (
                    "planning_att",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "planning_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PlanningStsMaster",
            fields=[
                ("mid", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=30)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "planning_sts_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PlanningSubDetails",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("material", models.CharField(max_length=15)),
                ("po", models.TextField(blank=True, null=True)),
                ("uom", models.IntegerField()),
                ("qty", models.IntegerField()),
                ("targetdate", models.DateField()),
                ("project", models.CharField(blank=True, max_length=20, null=True)),
                ("usr_resn", models.TextField(blank=True, null=True)),
                ("priority", models.IntegerField()),
                ("status", models.IntegerField()),
                ("hod_aprl_sts", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("hod_time", models.CharField(blank=True, max_length=9, null=True)),
                ("hod_resn", models.CharField(blank=True, max_length=100, null=True)),
                ("prsno", models.CharField(blank=True, max_length=25, null=True)),
                ("delivery_date", models.DateField()),
                ("indented_date", models.DateField()),
                ("indentedby", models.CharField(blank=True, max_length=6, null=True)),
                ("plan_remrks", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "planning_sub_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoApprovalMaster",
            fields=[
                ("app_id", models.AutoField(primary_key=True, serialize=False)),
                ("plant", models.IntegerField()),
                ("pgroup", models.CharField(max_length=5)),
                ("doctype", models.CharField(max_length=25)),
                ("groupid", models.IntegerField()),
                ("sequence", models.IntegerField()),
                ("description", models.CharField(max_length=20)),
                ("groupmam", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "po_approval_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoCommentsMaster",
            fields=[
                ("mas_id", models.AutoField(primary_key=True, serialize=False)),
                ("comment", models.CharField(max_length=100)),
                ("com_type", models.CharField(max_length=2)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "po_comments_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoDocMaster",
            fields=[
                ("docid", models.AutoField(primary_key=True, serialize=False)),
                ("doctype", models.CharField(blank=True, max_length=10, null=True)),
                ("docdesc", models.CharField(max_length=150)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "po_doc_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoGroupMaster",
            fields=[
                ("gid", models.AutoField(primary_key=True, serialize=False)),
                ("gtype", models.CharField(max_length=10)),
                ("plant", models.IntegerField()),
                ("gassociate", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "po_group_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoHistory",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("sid", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("comments", models.CharField(blank=True, max_length=400, null=True)),
                ("status", models.CharField(max_length=30)),
                ("type", models.CharField(blank=True, max_length=70, null=True)),
                ("ntry_date_time", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "po_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoHistory1",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("sid", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("comments", models.CharField(blank=True, max_length=400, null=True)),
                ("status", models.CharField(max_length=30)),
                ("type", models.CharField(blank=True, max_length=70, null=True)),
                ("ntry_date_time", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "po_history1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PointkssImprovementMaster",
            fields=[
                ("sgtn_qntfcn_no", models.AutoField(primary_key=True, serialize=False)),
                ("sgtn_qntfcn_name", models.CharField(max_length=100)),
                ("sgtn_qntfcn_nick_name", models.CharField(max_length=1)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "pointkss_improvement_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PointkssNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("kss_them", models.TextField(blank=True, null=True)),
                ("benifits", models.TextField(blank=True, null=True)),
                ("intan_benefits", models.TextField(blank=True, null=True)),
                ("desc", models.TextField(blank=True, null=True)),
                ("sugg_improvement", models.TextField(blank=True, null=True)),
                ("counter_measures", models.TextField(blank=True, null=True)),
                (
                    "horizental_deployement",
                    models.CharField(blank=True, max_length=2, null=True),
                ),
                (
                    "horiz_dep_sts",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("horiz_dep_details", models.TextField(blank=True, null=True)),
                ("kss_dept_slno", models.IntegerField()),
                ("loc", models.CharField(blank=True, max_length=50, null=True)),
                ("prjct", models.CharField(blank=True, max_length=50, null=True)),
                ("qnt", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.IntegerField()),
                ("created_dept", models.IntegerField()),
                (
                    "horiz_deploy",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("impl_date", models.DateField(blank=True, null=True)),
                ("timestampp", models.DateTimeField()),
                (
                    "project_any",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("amount", models.IntegerField()),
                ("reward_amount", models.IntegerField()),
                ("kss_amt", models.IntegerField()),
                ("attachment", models.CharField(blank=True, max_length=200, null=True)),
                ("rm", models.IntegerField()),
                ("under_rm", models.IntegerField()),
                ("rm_sts", models.IntegerField()),
                (
                    "rm_comments",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("rm_impl_resp", models.CharField(blank=True, max_length=3, null=True)),
                ("rm_ntry_date", models.DateField(blank=True, null=True)),
                ("rm_target_date", models.DateField(blank=True, null=True)),
                ("rm_impl_details", models.TextField(blank=True, null=True)),
                ("rm_impl_sts", models.CharField(blank=True, max_length=8, null=True)),
                ("hod", models.IntegerField()),
                ("under_hod", models.IntegerField()),
                ("hod_sts", models.IntegerField()),
                ("hod_comments", models.TextField(blank=True, null=True)),
                (
                    "hod_impl_resp",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("hod_ntry_date", models.DateField(blank=True, null=True)),
                ("hod_target_date", models.DateField(blank=True, null=True)),
                ("hod_impl_details", models.TextField(blank=True, null=True)),
                ("hod_impl_sts", models.CharField(blank=True, max_length=8, null=True)),
                ("type", models.CharField(blank=True, max_length=10, null=True)),
                ("hod_level_no", models.CharField(blank=True, max_length=2, null=True)),
                ("under_lpo", models.IntegerField(blank=True, null=True)),
                ("lpo_sts", models.IntegerField(blank=True, null=True)),
                (
                    "lpo_impl_resp",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                (
                    "lpo_impl_sts",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("lpo_comments", models.TextField(blank=True, null=True)),
                ("impl_details", models.TextField(blank=True, null=True)),
                ("level_no", models.CharField(blank=True, max_length=2, null=True)),
                ("status", models.IntegerField()),
                ("lpo_ntry_by", models.IntegerField()),
                ("lpo_ntry_date", models.DateField(blank=True, null=True)),
                ("lpo_target_date", models.DateField(blank=True, null=True)),
                (
                    "lpo_kaizen_type",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "project_type",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("rnddept", models.IntegerField()),
                ("rndhod", models.IntegerField(db_column="rndHod")),
                ("delgtd_hod_commnts", models.TextField()),
                ("assnd_to", models.IntegerField()),
                ("otherdept_sts", models.IntegerField()),
                ("impdetail", models.TextField(blank=True, null=True)),
                ("impstatus", models.IntegerField(blank=True, null=True)),
                ("hod_finalntry_date", models.DateField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "pointkss_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoNotReg",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("pono", models.CharField(max_length=10)),
                ("move_to_sap", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "po_not_reg",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoReleaseMaster",
            fields=[
                ("masid", models.AutoField(primary_key=True, serialize=False)),
                ("plant", models.IntegerField()),
                ("pgroup", models.CharField(max_length=5)),
                ("doctype", models.CharField(max_length=10)),
                ("amtfrom", models.IntegerField()),
                ("amtto", models.IntegerField()),
                ("mis_value", models.IntegerField()),
                ("groupid", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "po_release_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoSapApp",
            fields=[
                ("app_id", models.AutoField(primary_key=True, serialize=False)),
                ("sid", models.IntegerField()),
                ("seq", models.IntegerField()),
                ("approvalat", models.CharField(max_length=6)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "po_sap_app",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoSapAtt",
            fields=[
                ("attach_id", models.AutoField(primary_key=True, serialize=False)),
                ("pono", models.CharField(blank=True, max_length=10, null=True)),
                ("poitem", models.CharField(blank=True, max_length=10, null=True)),
                ("serialno", models.IntegerField()),
                ("filename", models.CharField(blank=True, max_length=200, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "po_sap_att",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoSapData",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("plant", models.IntegerField()),
                ("pono", models.CharField(blank=True, max_length=10, null=True)),
                ("poitem", models.CharField(blank=True, max_length=8, null=True)),
                ("podate", models.DateField(blank=True, null=True)),
                (
                    "vendor",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=35,
                        null=True,
                    ),
                ),
                ("povalue", models.CharField(blank=True, max_length=13, null=True)),
                ("pogroup", models.CharField(blank=True, max_length=3, null=True)),
                ("project", models.CharField(blank=True, max_length=10, null=True)),
                ("doctype", models.CharField(blank=True, max_length=10, null=True)),
                ("prs_req", models.CharField(blank=True, max_length=6, null=True)),
                (
                    "prs_doc_type",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("level_ini", models.CharField(max_length=2)),
                ("mis_po_ini", models.CharField(max_length=2)),
                ("version", models.IntegerField()),
                ("emp_user", models.CharField(blank=True, max_length=10, null=True)),
                ("doc_pro", models.IntegerField()),
                ("ir_status", models.IntegerField()),
                ("committee", models.CharField(blank=True, max_length=100, null=True)),
                ("sap_status", models.IntegerField()),
                ("groupid", models.IntegerField()),
                ("approvalat", models.CharField(blank=True, max_length=6, null=True)),
                ("approvalsts", models.IntegerField()),
                ("pregroupid", models.IntegerField()),
                ("revert", models.IntegerField()),
                ("ntry_date", models.DateField(blank=True, null=True)),
                ("move_to_sap", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "po_sap_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PoSapData1",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("plant", models.IntegerField()),
                ("pono", models.CharField(blank=True, max_length=10, null=True)),
                ("poitem", models.CharField(blank=True, max_length=8, null=True)),
                ("podate", models.DateField(blank=True, null=True)),
                (
                    "vendor",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=35,
                        null=True,
                    ),
                ),
                ("povalue", models.CharField(blank=True, max_length=13, null=True)),
                ("pogroup", models.CharField(blank=True, max_length=3, null=True)),
                ("project", models.CharField(blank=True, max_length=10, null=True)),
                ("doctype", models.CharField(blank=True, max_length=10, null=True)),
                ("prs_req", models.CharField(blank=True, max_length=6, null=True)),
                (
                    "prs_doc_type",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("level_ini", models.CharField(max_length=2)),
                ("mis_po_ini", models.CharField(max_length=2)),
                ("version", models.IntegerField()),
                ("emp_user", models.CharField(blank=True, max_length=10, null=True)),
                ("doc_pro", models.IntegerField()),
                ("ir_status", models.IntegerField()),
                ("committee", models.CharField(blank=True, max_length=100, null=True)),
                ("sap_status", models.IntegerField()),
                ("groupid", models.IntegerField()),
                ("approvalat", models.CharField(blank=True, max_length=6, null=True)),
                ("approvalsts", models.IntegerField()),
                ("pregroupid", models.IntegerField()),
                ("revert", models.IntegerField()),
                ("ntry_date", models.DateField(blank=True, null=True)),
                ("move_to_sap", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "po_sap_data1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("post_title", models.TextField(blank=True, null=True)),
                ("post_description", models.TextField(blank=True, null=True)),
                ("author", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "post",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PostingMtrlMaster",
            fields=[
                ("mat_code", models.CharField(max_length=12)),
                ("pstng_date", models.DateField()),
                ("qty", models.IntegerField()),
                ("mvmnt", models.CharField(max_length=20)),
                ("from_field", models.CharField(db_column="from", max_length=10)),
                ("to", models.CharField(max_length=10)),
                ("up_sts", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("temp", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "posting_mtrl_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrinterAgreeNtry",
            fields=[
                ("printer_id", models.IntegerField()),
                ("sequence_no", models.IntegerField(primary_key=True, serialize=False)),
                ("agree_no", models.IntegerField(db_column="Agree_no")),
                ("valid_from", models.DateField()),
                ("valid_to", models.DateField()),
                ("invoice_no", models.CharField(max_length=150)),
                ("invoice_date", models.DateField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "printer_agree_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrinterAgreePageNtry",
            fields=[
                ("printer_id", models.IntegerField()),
                ("sequence_no", models.IntegerField()),
                ("subsequence_no", models.AutoField(primary_key=True, serialize=False)),
                ("size", models.CharField(max_length=50)),
                ("type", models.CharField(max_length=50)),
                ("cost", models.FloatField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "printer_agree_page_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrinterInvoice",
            fields=[
                (
                    "transaction_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("invoice_no", models.CharField(max_length=50)),
                ("invoice_date", models.DateField()),
                ("printer_id", models.IntegerField()),
                ("agree_no", models.CharField(db_column="Agree_no", max_length=150)),
                ("from_field", models.DateField(db_column="from")),
                ("to", models.DateField()),
                ("cost", models.FloatField()),
                ("vat", models.FloatField()),
                ("tax", models.FloatField()),
                ("net_amount", models.FloatField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "printer_invoice",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrinterInvoiceSub",
            fields=[
                (
                    "sub_sequence_no",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("sequence_no", models.IntegerField()),
                ("printer_id", models.IntegerField()),
                ("page_size", models.CharField(max_length=150)),
                ("print_type", models.CharField(max_length=150)),
                ("page_cost", models.FloatField()),
                ("prev_reading", models.FloatField()),
                ("to_reading", models.FloatField()),
                ("total_reading", models.FloatField()),
                ("sub_total_cost", models.FloatField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "printer_invoice_sub",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrinterMakeMaster",
            fields=[
                ("manufacture_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "printer_make_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrinterModelMaster",
            fields=[
                ("model_id", models.AutoField(primary_key=True, serialize=False)),
                ("model_name", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "printer_model_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrinterNtry",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("asset_slno", models.CharField(max_length=50)),
                ("category", models.CharField(max_length=50)),
                ("manufacture_id", models.IntegerField()),
                ("printer_slno", models.IntegerField()),
                ("type_id", models.IntegerField()),
                ("model_id", models.IntegerField()),
                ("loccode", models.CharField(max_length=50)),
                ("deptcode", models.IntegerField()),
                ("floor", models.IntegerField()),
                ("instalation_date", models.DateField()),
                ("pono", models.CharField(max_length=50)),
                ("invoice_no", models.CharField(max_length=50)),
                ("cost", models.FloatField()),
                ("used_depts", models.CharField(max_length=250)),
                ("net_read", models.IntegerField()),
                ("life_time_copies", models.IntegerField()),
                ("printer_life_time", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "printer_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrinterProblem",
            fields=[
                ("request_no", models.AutoField(primary_key=True, serialize=False)),
                ("printer_id", models.IntegerField()),
                ("prob_desc", models.CharField(max_length=2000)),
                ("complaint_no", models.CharField(max_length=20)),
                ("complaint_by", models.IntegerField()),
                ("complete_down", models.CharField(max_length=20)),
                ("complaint_date", models.DateField()),
                ("eng_name", models.CharField(max_length=20)),
                ("contact_no", models.IntegerField()),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("follow_by", models.IntegerField()),
                ("status", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "printer_problem",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrinterStatusMaster",
            fields=[
                ("status", models.SmallAutoField(primary_key=True, serialize=False)),
                ("status_name", models.CharField(max_length=30)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "printer_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrinterTrackHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("desc", models.TextField()),
                ("date", models.DateField()),
                ("status", models.IntegerField()),
                ("vendor_response", models.TextField()),
                ("follow_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "printer_track_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrinterTypeMaster",
            fields=[
                ("type_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "printer_type_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Priority",
            fields=[
                ("pr_no", models.AutoField(primary_key=True, serialize=False)),
                ("prty_name", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "priority",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProblemCategoryMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "problem_name",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                (
                    "problem_category",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("created_by", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "problem_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProblemObservedStage",
            fields=[
                ("pono", models.AutoField(primary_key=True, serialize=False)),
                ("po_name", models.CharField(max_length=50)),
                ("createdby", models.SmallIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "problem_observed_stage",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductEngineer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "product_code",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                (
                    "product_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "product_incharge",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "product_engineer",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductionOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_no", models.BigIntegerField()),
                ("order_item_no", models.BigIntegerField()),
                ("order_date", models.DateField()),
                ("material_code", models.CharField(max_length=15)),
                ("qty", models.FloatField()),
                ("uom", models.CharField(max_length=3)),
                ("sl_no", models.CharField(max_length=20)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "production_order",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("productcode", models.CharField(blank=True, max_length=40, null=True)),
                ("shorttext", models.CharField(blank=True, max_length=300, null=True)),
                ("uom", models.CharField(blank=True, max_length=10, null=True)),
                ("ext_upload_sts", models.IntegerField()),
                ("intra_upload_sts", models.IntegerField()),
                ("createdby", models.CharField(blank=True, max_length=10, null=True)),
                ("internet_up_sts", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("resp", models.CharField(blank=True, max_length=1, null=True)),
                ("revno", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("intra_upload_date", models.DateTimeField()),
                ("block_sts", models.IntegerField()),
                ("block_by", models.IntegerField()),
                ("block_date", models.DateField()),
            ],
            options={
                "db_table": "product_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductMasterTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("productcode", models.CharField(blank=True, max_length=40, null=True)),
                ("shorttext", models.CharField(blank=True, max_length=300, null=True)),
                ("uom", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "product_master_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductMasterUom",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mat", models.CharField(max_length=25)),
                ("uom", models.CharField(max_length=16)),
            ],
            options={
                "db_table": "product_master_uom",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductModInchargeMaster",
            fields=[
                (
                    "incharge_code",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("incharge_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "product_mod_incharge_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductModInMaster",
            fields=[
                ("modif_in", models.AutoField(primary_key=True, serialize=False)),
                ("modif_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "product_mod_in_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductModNtry",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("mod_no", models.CharField(max_length=20)),
                ("mod_incharge", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("ref_doc", models.CharField(max_length=500)),
                ("attachment_name", models.CharField(max_length=50)),
                ("mod_in", models.IntegerField()),
                ("mod_type", models.IntegerField()),
                ("project", models.IntegerField()),
                ("sub_ass", models.CharField(max_length=11)),
                ("sub_unit", models.CharField(max_length=11)),
                ("unit", models.CharField(max_length=11)),
                ("sa_mod_id", models.IntegerField()),
                ("su_mod_id", models.IntegerField()),
                ("unit_mod_id", models.IntegerField()),
                ("change_details", models.CharField(max_length=500)),
                ("change_reason", models.CharField(max_length=500)),
                ("change_scope", models.CharField(max_length=10)),
                ("priority", models.IntegerField()),
                ("prod_incharge_remarks", models.CharField(max_length=500)),
                ("role_details", models.CharField(max_length=500)),
                ("ntry_by", models.IntegerField()),
                ("ntry_sts", models.IntegerField()),
                ("sa_slno_eff_from", models.IntegerField()),
                ("mod_eff_from_date", models.DateField()),
                ("testing_remarks", models.CharField(max_length=250)),
                ("testing_sts", models.IntegerField()),
                ("testing_ntry_by", models.IntegerField()),
                ("sa_slno_ass_pe", models.IntegerField()),
                ("unit_slno_ass_pe", models.IntegerField()),
                ("ass_pe_remarks", models.CharField(max_length=250)),
                ("ass_pe_ntry_by", models.IntegerField()),
                ("ass_pe_date", models.DateField()),
                ("ass_pe_sts", models.IntegerField()),
                ("srvc_ntry_by", models.IntegerField()),
                ("srvc_ntry_date", models.DateField()),
                ("srvc_from", models.IntegerField()),
                ("srvc_to", models.IntegerField()),
                ("srvc_tot_rows", models.IntegerField()),
                ("srvc_tot_cmpltd_rows", models.IntegerField()),
                ("srvc_sts", models.IntegerField()),
            ],
            options={
                "db_table": "product_mod_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductModRemarksNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("seq_slno", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("matnr", models.CharField(max_length=11)),
                ("remarks", models.CharField(max_length=400)),
                ("date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "product_mod_remarks_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductModSrvcSlnosNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("sts", models.IntegerField()),
                ("ntry_by", models.IntegerField()),
                ("ntry_date", models.DateField()),
            ],
            options={
                "db_table": "product_mod_srvc_slnos_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductModTypeMaster",
            fields=[
                ("modif_type", models.AutoField(primary_key=True, serialize=False)),
                ("modif_type_name", models.CharField(max_length=50)),
                ("mod_type_short_name", models.CharField(max_length=3)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "product_mod_type_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductPriorityMaster",
            fields=[
                ("priority_no", models.AutoField(primary_key=True, serialize=False)),
                ("priority_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "product_priority_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductProjectMaster",
            fields=[
                ("project", models.CharField(max_length=50)),
                ("description", models.CharField(max_length=200)),
                ("noofmonths", models.IntegerField()),
                ("project_no", models.AutoField(primary_key=True, serialize=False)),
                ("ecm_sts", models.CharField(max_length=10)),
                ("srvc_sts", models.CharField(max_length=1)),
                ("createdby", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "db_table": "product_project_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProductsOpportunityMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.CharField(max_length=15)),
                ("opportunities", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "products_opportunity_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProjectMaster",
            fields=[
                ("project_no", models.AutoField(primary_key=True, serialize=False)),
                ("project_name", models.CharField(max_length=50)),
                ("desc", models.CharField(max_length=50)),
                ("project_fname", models.CharField(max_length=10)),
                ("project_lname", models.CharField(max_length=10)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "project_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Projects",
            fields=[
                ("project", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("project_no", models.AutoField(primary_key=True, serialize=False)),
                ("child", models.IntegerField()),
                ("subchild", models.IntegerField()),
                ("main_id", models.IntegerField()),
                (
                    "parenthistory",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("link", models.CharField(blank=True, max_length=5, null=True)),
                ("ecm_sts", models.CharField(blank=True, max_length=5, null=True)),
                ("spec_no", models.CharField(blank=True, max_length=500, null=True)),
                ("createdby", models.CharField(blank=True, max_length=10, null=True)),
                ("project_ic", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "project_ic_second",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "service_proj_mail",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("cc_mail", models.CharField(blank=True, max_length=50, null=True)),
                ("occurence", models.IntegerField()),
                ("intra_upload_sts", models.IntegerField()),
                ("spcial_cat", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "projects",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProjectsOld",
            fields=[
                ("project", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "description",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("project_no", models.AutoField(primary_key=True, serialize=False)),
                ("child", models.IntegerField()),
                ("subchild", models.IntegerField()),
                ("main_id", models.IntegerField()),
                (
                    "parenthistory",
                    models.CharField(blank=True, max_length=1, null=True),
                ),
                ("link", models.CharField(blank=True, max_length=5, null=True)),
                ("ecm_sts", models.CharField(blank=True, max_length=5, null=True)),
                ("spec_no", models.CharField(blank=True, max_length=500, null=True)),
                ("createdby", models.CharField(blank=True, max_length=10, null=True)),
                ("project_ic", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "project_ic_second",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "service_proj_mail",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("cc_mail", models.CharField(blank=True, max_length=50, null=True)),
                ("occurence", models.IntegerField()),
                ("intra_upload_sts", models.IntegerField()),
                ("spcial_cat", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "projects_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ProjectsPrev",
            fields=[
                ("project", models.CharField(max_length=50)),
                ("description", models.CharField(max_length=100)),
                ("project_no", models.AutoField(primary_key=True, serialize=False)),
                ("child", models.IntegerField()),
                ("subchild", models.IntegerField()),
                ("ecm_sts", models.CharField(max_length=5)),
                ("spec_no", models.CharField(max_length=500)),
                ("createdby", models.CharField(blank=True, max_length=10, null=True)),
                ("project_ic", models.CharField(max_length=150)),
                ("project_ic_second", models.CharField(max_length=150)),
                ("service_proj_mail", models.CharField(max_length=200)),
                ("cc_mail", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "projects_prev",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrsHistory",
            fields=[
                ("prs_history_id", models.AutoField(primary_key=True, serialize=False)),
                ("prs_ackno", models.IntegerField()),
                ("prs_status", models.CharField(blank=True, max_length=2, null=True)),
                (
                    "prs_associate",
                    models.CharField(blank=True, max_length=7, null=True),
                ),
                (
                    "prs_comment",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "prs_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrsItems",
            fields=[
                ("prs_item_id", models.AutoField(primary_key=True, serialize=False)),
                ("prs_ack", models.IntegerField()),
                ("prs_pcode", models.CharField(blank=True, max_length=15, null=True)),
                ("prs_qty", models.IntegerField()),
                ("prs_make", models.CharField(blank=True, max_length=50, null=True)),
                ("prs_cost", models.FloatField()),
                ("prs_cmt", models.CharField(blank=True, max_length=200, null=True)),
                ("prs_category", models.IntegerField()),
                ("prs_rdate", models.DateField()),
                ("prs_dsheet", models.CharField(blank=True, max_length=100, null=True)),
                ("prs_esheet", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "prs_itemc_child",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                ("stock", models.DecimalField(decimal_places=2, max_digits=10)),
                ("prsno", models.CharField(blank=True, max_length=15, null=True)),
                ("po_date", models.DateField()),
                ("prsstatus", models.CharField(blank=True, max_length=50, null=True)),
                ("exp_date", models.DateField()),
                ("prs_delete", models.IntegerField()),
            ],
            options={
                "db_table": "prs_items",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrsItems1",
            fields=[
                ("prs_item_id", models.AutoField(primary_key=True, serialize=False)),
                ("prs_ack", models.IntegerField()),
                ("prs_pcode", models.CharField(blank=True, max_length=15, null=True)),
                ("prs_qty", models.IntegerField()),
                ("prs_make", models.CharField(blank=True, max_length=50, null=True)),
                ("prs_cost", models.FloatField()),
                ("prs_cmt", models.CharField(blank=True, max_length=200, null=True)),
                ("prs_category", models.IntegerField()),
                ("prs_rdate", models.DateField()),
                ("prs_dsheet", models.CharField(blank=True, max_length=100, null=True)),
                ("prs_esheet", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "prs_itemc_child",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                ("stock", models.DecimalField(decimal_places=2, max_digits=10)),
                ("prsno", models.CharField(blank=True, max_length=15, null=True)),
                ("po_date", models.DateField()),
                ("prsstatus", models.CharField(blank=True, max_length=50, null=True)),
                ("exp_date", models.DateField()),
                ("prs_delete", models.IntegerField()),
            ],
            options={
                "db_table": "prs_items1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrsItemsMaterial",
            fields=[
                ("prs_item_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "materiallocation",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("prs_ack", models.IntegerField()),
                ("prs_pcode", models.CharField(blank=True, max_length=15, null=True)),
                ("prs_qty", models.IntegerField()),
                ("prs_make", models.CharField(blank=True, max_length=50, null=True)),
                ("prs_cost", models.FloatField()),
                ("prs_cmt", models.CharField(blank=True, max_length=200, null=True)),
                ("prs_category", models.IntegerField()),
                ("prs_rdate", models.DateField()),
                ("prs_dsheet", models.CharField(blank=True, max_length=100, null=True)),
                ("prs_esheet", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "prs_itemc_child",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                ("prs_status", models.IntegerField()),
                ("stack1200", models.CharField(blank=True, max_length=100, null=True)),
                ("shortage", models.CharField(blank=True, max_length=100, null=True)),
                ("doc_no", models.CharField(blank=True, max_length=100, null=True)),
                ("exp_date", models.DateField()),
                (
                    "target_date",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("review", models.IntegerField()),
                ("location", models.CharField(blank=True, max_length=50, null=True)),
                ("mrs_no", models.CharField(blank=True, max_length=100, null=True)),
                ("mrs_sendto", models.CharField(blank=True, max_length=500, null=True)),
                ("bom_no", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "review_remarks",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("prs_sub_id", models.IntegerField()),
                ("status", models.IntegerField()),
                ("further_act", models.TextField(blank=True, null=True)),
                ("further_act_sts", models.IntegerField()),
                ("plng_status", models.IntegerField()),
                ("plang_remarks", models.TextField(blank=True, null=True)),
                ("stores_status", models.IntegerField()),
                ("stores_remarks", models.TextField(blank=True, null=True)),
                ("priority", models.IntegerField()),
                ("prs_delete", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("mrs_num", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "dispatchlocation",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("gateno", models.IntegerField()),
                ("nremarks", models.IntegerField()),
                ("pquantity", models.IntegerField()),
                ("issueddate", models.DateField()),
                ("restatus", models.IntegerField()),
                ("timestamp", models.DateField()),
            ],
            options={
                "db_table": "prs_items_material",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrsMain",
            fields=[
                ("prs_ackno", models.AutoField(primary_key=True, serialize=False)),
                ("prs_no_sap", models.CharField(blank=True, max_length=20, null=True)),
                ("prs_project", models.IntegerField()),
                ("prs_itemc", models.CharField(blank=True, max_length=5, null=True)),
                ("prs_doc_type", models.CharField(blank=True, max_length=5, null=True)),
                ("reviewtype", models.IntegerField()),
                ("bomcode", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "prs_createdby",
                    models.CharField(blank=True, max_length=8, null=True),
                ),
                ("prs_dept", models.CharField(blank=True, max_length=4, null=True)),
                ("prs_verify", models.CharField(blank=True, max_length=8, null=True)),
                ("prs_approve", models.CharField(blank=True, max_length=8, null=True)),
                ("prs_status", models.CharField(blank=True, max_length=1, null=True)),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("lastupdate", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "prs_main",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrsMain1",
            fields=[
                ("prs_ackno", models.AutoField(primary_key=True, serialize=False)),
                ("prs_no_sap", models.CharField(blank=True, max_length=20, null=True)),
                ("prs_project", models.IntegerField()),
                ("prs_itemc", models.CharField(blank=True, max_length=5, null=True)),
                ("prs_doc_type", models.CharField(blank=True, max_length=5, null=True)),
                ("reviewtype", models.IntegerField()),
                ("bomcode", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "prs_createdby",
                    models.CharField(blank=True, max_length=8, null=True),
                ),
                ("prs_dept", models.CharField(blank=True, max_length=4, null=True)),
                ("prs_verify", models.CharField(blank=True, max_length=8, null=True)),
                ("prs_approve", models.CharField(blank=True, max_length=8, null=True)),
                ("prs_status", models.CharField(blank=True, max_length=1, null=True)),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("lastupdate", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "prs_main1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrsMainMaterial",
            fields=[
                ("prs_ackno", models.AutoField(primary_key=True, serialize=False)),
                ("prs_no_sap", models.CharField(blank=True, max_length=20, null=True)),
                ("prs_project", models.IntegerField()),
                ("prs_itemc", models.CharField(blank=True, max_length=2, null=True)),
                ("prs_doc_type", models.CharField(blank=True, max_length=5, null=True)),
                ("reviewtype", models.IntegerField()),
                (
                    "prs_createdby",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                ("loc", models.CharField(blank=True, max_length=20, null=True)),
                ("prs_dept", models.CharField(blank=True, max_length=4, null=True)),
                ("prs_verify", models.CharField(blank=True, max_length=6, null=True)),
                ("prs_ed_approve", models.IntegerField()),
                ("prs_approve", models.CharField(blank=True, max_length=6, null=True)),
                ("prs_status", models.CharField(blank=True, max_length=1, null=True)),
                ("timestamp", models.DateField()),
                ("lastupdate", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
                ("priyority", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "materiallocation",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("dession", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "matreialtype",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
            ],
            options={
                "db_table": "prs_main_material",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrsMaterialHistry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("prs_ackno", models.CharField(blank=True, max_length=100, null=True)),
                ("prs_sub_id", models.IntegerField()),
                ("itemcode", models.CharField(blank=True, max_length=100, null=True)),
                ("review_status", models.IntegerField()),
                ("review_remarks", models.TextField(blank=True, null=True)),
                ("comman_remarks", models.TextField(blank=True, null=True)),
                ("mrs_send", models.IntegerField()),
                ("status", models.IntegerField()),
                (
                    "further_act",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
                ("created_by", models.IntegerField()),
                ("date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "prs_material_histry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Prsnew",
            fields=[
                ("pid", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("ntrydate", models.DateField()),
                ("req_type", models.IntegerField()),
                ("project", models.IntegerField()),
                ("partcode", models.CharField(blank=True, max_length=20, null=True)),
                ("qty", models.IntegerField(blank=True, null=True)),
                ("make", models.CharField(blank=True, max_length=50, null=True)),
                ("rmks", models.CharField(blank=True, max_length=50, null=True)),
                ("req_date", models.DateField(blank=True, null=True)),
                ("cost", models.IntegerField()),
                ("est_file", models.CharField(blank=True, max_length=50, null=True)),
                ("prs_no", models.CharField(blank=True, max_length=15, null=True)),
                ("status", models.IntegerField()),
                ("approver", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "prsnew",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrsnewHist",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("pid", models.IntegerField()),
                ("associate", models.IntegerField()),
                ("rmrks", models.CharField(max_length=50)),
                ("status", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "prsnew_hist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PrsRdStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("desc", models.CharField(max_length=100)),
                ("short_text", models.CharField(max_length=25)),
                ("type", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "prs_rd_status",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PunchOct2023",
            fields=[
                (
                    "pid",
                    models.AutoField(
                        db_column="PID", primary_key=True, serialize=False
                    ),
                ),
                (
                    "pernr",
                    models.IntegerField(blank=True, db_column="PERNR", null=True),
                ),
                (
                    "ldate",
                    models.CharField(
                        blank=True, db_column="LDATE", max_length=10, null=True
                    ),
                ),
                (
                    "ltime",
                    models.CharField(
                        blank=True, db_column="LTIME", max_length=8, null=True
                    ),
                ),
                (
                    "satza",
                    models.CharField(
                        blank=True, db_column="SATZA", max_length=3, null=True
                    ),
                ),
                (
                    "origf",
                    models.CharField(
                        blank=True, db_column="ORIGF", max_length=1, null=True
                    ),
                ),
                (
                    "dallf",
                    models.CharField(
                        blank=True, db_column="DALLF", max_length=1, null=True
                    ),
                ),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "punch_oct2023",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PurchGrnIssueMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("po", models.BigIntegerField()),
                ("mat_doc", models.BigIntegerField()),
                ("matnr", models.BigIntegerField()),
                ("qty", models.IntegerField()),
                ("vendor", models.IntegerField()),
                ("group", models.CharField(max_length=10)),
                ("cost", models.FloatField()),
                ("value", models.FloatField()),
                ("upld_date", models.DateField()),
                ("diff_qty", models.IntegerField()),
                ("short_qty", models.IntegerField()),
                ("igi_rmrks", models.CharField(max_length=300)),
                ("sts", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("purch_rmrks", models.CharField(max_length=500)),
                ("purch_ntry", models.IntegerField()),
                ("purch_date", models.DateField()),
                ("purch_up_sts", models.IntegerField()),
                ("plng_sts", models.IntegerField()),
                ("plng_ntry", models.IntegerField()),
                ("plng_date", models.DateField()),
                ("plng_up_sts", models.IntegerField()),
                ("attachment_sts", models.CharField(max_length=1)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "purch_grn_issue_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PurchGrnIssueRmrks",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("rmrks", models.CharField(max_length=500)),
            ],
            options={
                "db_table": "purch_grn_issue_rmrks",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PurchGrnIssueTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("po", models.BigIntegerField()),
                ("mat_doc", models.CharField(max_length=15)),
                ("matnr", models.CharField(max_length=15)),
                ("qty", models.IntegerField()),
                ("vendor", models.IntegerField()),
                ("group", models.CharField(max_length=10)),
                ("cost", models.FloatField()),
            ],
            options={
                "db_table": "purch_grn_issue_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PurchGroupMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("group", models.CharField(max_length=10)),
                ("group_code", models.IntegerField()),
                ("partner", models.CharField(max_length=100)),
                ("igi_to", models.CharField(max_length=150)),
                ("igi_cc", models.CharField(max_length=150)),
                ("purch_to", models.CharField(max_length=150)),
                ("plng_to", models.CharField(max_length=150)),
                ("indl_cc", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "purch_group_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PurchStatusMaster",
            fields=[
                ("sts_slno", models.AutoField(primary_key=True, serialize=False)),
                ("sts_name", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "purch_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PwdHintAns",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("hintq", models.IntegerField()),
                ("ans", models.CharField(max_length=150)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "pwd_hint_ans",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="PwdHintMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("hintq", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "pwd_hint_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="QccDates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("regid", models.IntegerField()),
                ("qcc_date1", models.CharField(max_length=20)),
                ("qcc_date2", models.DateField()),
            ],
            options={
                "db_table": "qcc_dates",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="QccImprovements",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("regid", models.IntegerField()),
                ("problem", models.TextField(blank=True, null=True)),
                ("routecause", models.TextField(blank=True, null=True)),
                ("counter_measure", models.TextField(blank=True, null=True)),
                ("type", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "qcc_improvements",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="QccPdfEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("regid", models.IntegerField()),
                ("title_before", models.CharField(max_length=200)),
                ("title_after", models.CharField(max_length=200)),
                ("before_text", models.TextField()),
                ("after_text", models.TextField()),
                ("before_file", models.CharField(max_length=100)),
                ("after_file", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "qcc_pdf_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="QccRegistration",
            fields=[
                ("regid", models.AutoField(primary_key=True, serialize=False)),
                ("regno", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("loc", models.CharField(max_length=10)),
                ("title", models.TextField(blank=True, null=True)),
                ("improvement", models.TextField(blank=True, null=True)),
                ("justification", models.TextField(blank=True, null=True)),
                ("justification2", models.TextField(blank=True, null=True)),
                ("specify", models.TextField(blank=True, null=True)),
                ("regdate", models.DateTimeField()),
                ("startdate", models.DateField()),
                ("targetdate", models.DateField()),
                ("facilitator", models.IntegerField()),
                ("coordinator", models.IntegerField()),
                ("project_leader", models.IntegerField()),
                ("dy_leader", models.IntegerField()),
                ("teamsize", models.CharField(max_length=500)),
                ("grade", models.CharField(max_length=20)),
                ("delete1", models.IntegerField()),
                ("teammember3", models.IntegerField()),
                ("teammember4", models.IntegerField()),
                ("improvement_category", models.CharField(max_length=50)),
                ("tool", models.IntegerField()),
                ("benefits_achieved", models.TextField(blank=True, null=True)),
                ("start_hr", models.CharField(max_length=10)),
                ("start_min", models.CharField(max_length=10)),
                ("end_hr", models.CharField(max_length=10)),
                ("end_min", models.CharField(max_length=10)),
                ("day", models.IntegerField()),
                ("time", models.CharField(max_length=20)),
                ("isapproved", models.IntegerField()),
                ("project_approved", models.IntegerField()),
                ("project_userid", models.IntegerField()),
                ("project_date", models.CharField(max_length=20)),
                ("project_closer", models.CharField(max_length=100)),
                ("final_approved", models.IntegerField()),
                ("final_userid", models.IntegerField()),
                ("final_date", models.DateField()),
                ("hodapproved", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("hodappcode", models.IntegerField()),
                ("final_closer", models.IntegerField()),
                ("filename", models.CharField(max_length=100)),
                ("finalcopy", models.CharField(max_length=100)),
                ("ppt", models.CharField(max_length=250)),
                ("brain_content", models.TextField(blank=True, null=True)),
                ("yy_analysis", models.TextField(blank=True, null=True)),
                ("tools_used", models.TextField(blank=True, null=True)),
                ("final_benefits", models.TextField(blank=True, null=True)),
                ("challenges", models.TextField(blank=True, null=True)),
                ("graph", models.CharField(max_length=100)),
                ("freeze", models.IntegerField()),
                ("period", models.CharField(max_length=40)),
            ],
            options={
                "db_table": "qcc_registration",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Query",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("vendor", models.CharField(max_length=300)),
                ("qty", models.CharField(max_length=20)),
                ("cost", models.CharField(max_length=20)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "query",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="QuoteMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("quote", models.CharField(max_length=300)),
                ("auth", models.CharField(max_length=50)),
                ("cretaedby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "quote_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoMasterData",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("matnr", models.CharField(max_length=15)),
                ("desc", models.CharField(max_length=150)),
                ("project", models.CharField(max_length=20)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rdso_master_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoMasterNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("matnr", models.CharField(max_length=15)),
                ("qty", models.IntegerField()),
                ("type_id", models.IntegerField()),
                ("subtype_id", models.IntegerField()),
                ("sts", models.IntegerField()),
                ("values", models.CharField(max_length=10000)),
                ("ntry_by", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rdso_master_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoMasterNtryXlTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("matnr", models.CharField(max_length=30)),
                ("seq_slno", models.IntegerField()),
                ("number_1", models.IntegerField(db_column="1")),
                ("number_2", models.IntegerField(db_column="2")),
                ("number_3", models.IntegerField(db_column="3")),
                ("number_4", models.IntegerField(db_column="4")),
                ("number_5", models.IntegerField(db_column="5")),
            ],
            options={
                "db_table": "rdso_master_ntry_xl_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoMasterSubtype",
            fields=[
                ("subtype_id", models.AutoField(primary_key=True, serialize=False)),
                ("type_id", models.IntegerField()),
                ("name", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "rdso_master_subtype",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoMasterTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.CharField(max_length=15)),
                ("qty", models.IntegerField()),
                ("type", models.IntegerField()),
                ("sub_type", models.IntegerField()),
            ],
            options={
                "db_table": "rdso_master_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoMasterType",
            fields=[
                ("type_id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "rdso_master_type",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoMatmasterData",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("matnr", models.CharField(max_length=15)),
                ("desc", models.CharField(max_length=150)),
                ("project", models.CharField(max_length=20)),
                ("type", models.IntegerField()),
                ("sub_type", models.IntegerField()),
                ("delete", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rdso_matmaster_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoModuleMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("main_type", models.CharField(max_length=500)),
                ("mat_num", models.CharField(max_length=250)),
                ("parent_id", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rdso_module_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoNewmasterNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("matnr", models.CharField(max_length=15)),
                ("qty", models.IntegerField()),
                ("type_id", models.IntegerField()),
                ("subtype_id", models.IntegerField()),
                ("sts", models.IntegerField()),
                ("values", models.CharField(max_length=10000)),
                ("ntry_by", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rdso_newmaster_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoNewscanMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.CharField(max_length=11)),
                ("slno", models.IntegerField()),
                ("seq_slno", models.IntegerField()),
                ("type", models.IntegerField()),
                ("sub_type", models.IntegerField()),
                ("up_sts", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rdso_newscan_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoScanMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.CharField(max_length=11)),
                ("slno", models.IntegerField()),
                ("seq_slno", models.IntegerField()),
                ("type", models.IntegerField()),
                ("sub_type", models.IntegerField()),
                ("up_sts", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rdso_scan_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoTempmasterNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("matnr", models.CharField(max_length=15)),
                ("qty", models.IntegerField()),
                ("type_id", models.IntegerField()),
                ("subtype_id", models.IntegerField()),
                ("sts", models.IntegerField()),
                ("values", models.CharField(max_length=10000)),
                ("ntry_by", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rdso_TEMPmaster_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RdsoUploadInfo",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("up_sts", models.IntegerField()),
                ("station", models.CharField(max_length=50)),
                ("ntry_date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rdso_upload_info",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReimbursementMain",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("category", models.IntegerField()),
                ("totalamount", models.IntegerField()),
                ("requestdate", models.DateField()),
                ("aprl_code", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("aprl_sts", models.IntegerField()),
                ("noofinstall", models.IntegerField(blank=True, null=True)),
                ("noofmonths", models.IntegerField(blank=True, null=True)),
                ("reason", models.IntegerField()),
                ("sap_status", models.CharField(blank=True, max_length=2, null=True)),
                ("remarks", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "db_table": "reimbursement_main",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Reimbursementmcat",
            fields=[
                ("id", models.BigAutoField(primary_key=True, serialize=False)),
                ("category", models.CharField(max_length=500)),
                ("ststype", models.IntegerField()),
                ("subtype", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "reimbursementmcat",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RejRewPriceMstr",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.CharField(max_length=20)),
                ("price", models.FloatField()),
                ("month_year", models.CharField(max_length=10)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rej_rew_price_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RejRewPriceTempMstr",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matnr", models.CharField(max_length=20)),
                ("price", models.FloatField()),
            ],
            options={
                "db_table": "rej_rew_price_temp_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RejRwrkSlip",
            fields=[
                ("slno", models.BigAutoField(primary_key=True, serialize=False)),
                ("slip_no", models.IntegerField()),
                ("ordr", models.CharField(max_length=15)),
                ("mat", models.CharField(max_length=30)),
                ("type", models.CharField(max_length=30)),
                ("qty", models.IntegerField()),
                ("rsn", models.TextField(blank=True, null=True)),
                ("date", models.DateField()),
                ("dept", models.IntegerField()),
                ("mrs", models.CharField(max_length=10)),
                ("uom", models.CharField(max_length=5)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.CharField(max_length=15)),
            ],
            options={
                "db_table": "rej_rwrk_slip",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RemarksMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rmrk_code", models.IntegerField()),
                ("rmrk_desc", models.CharField(max_length=100)),
                ("rmrk_desc_short", models.CharField(max_length=25)),
                ("temp_no", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("sts", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "remarks_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RemarksMaster29102020",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rmrk_code", models.IntegerField()),
                ("rmrk_desc", models.CharField(max_length=100)),
                ("rmrk_desc_short", models.CharField(max_length=25)),
                ("temp_no", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "remarks_master_29_10_2020",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReqNameMaster",
            fields=[
                ("req_fm_no", models.AutoField(primary_key=True, serialize=False)),
                ("req_fm_desc", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "req_name_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReqTypeMaster",
            fields=[
                ("req_type_no", models.AutoField(primary_key=True, serialize=False)),
                ("req_type_name", models.CharField(max_length=50)),
                ("target_days", models.IntegerField()),
                ("target_days_old", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "req_type_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RevisionHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sl_no", models.IntegerField()),
                ("mat_code", models.CharField(max_length=20)),
                ("sf", models.CharField(max_length=10)),
                ("rev", models.CharField(max_length=10)),
                ("rev_nos", models.CharField(max_length=5)),
                ("date", models.CharField(max_length=15)),
                ("rev_desc", models.CharField(max_length=1000)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "revision_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkDeptDetails",
            fields=[
                ("rwk_id", models.AutoField(primary_key=True, serialize=False)),
                ("reworkreportno", models.IntegerField()),
                ("dept", models.CharField(blank=True, max_length=30, null=True)),
                ("time_spent", models.CharField(blank=True, max_length=12, null=True)),
                ("cost", models.IntegerField()),
                ("createdby", models.CharField(blank=True, max_length=6, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rework_dept_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkDetails",
            fields=[
                ("reworkreportno", models.AutoField(primary_key=True, serialize=False)),
                ("fromdept", models.CharField(blank=True, max_length=12, null=True)),
                ("todept", models.CharField(blank=True, max_length=8, null=True)),
                ("failure_date", models.DateField()),
                ("engineername", models.BigIntegerField()),
                ("project", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "equipmentslno",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("card_slno", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "fstage",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "problemdesc",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=1000,
                        null=True,
                    ),
                ),
                ("eqmnt", models.CharField(max_length=500)),
                ("autby", models.CharField(blank=True, max_length=40, null=True)),
                ("sareworkdetails", models.TextField(blank=True, null=True)),
                ("ca", models.TextField(blank=True, null=True)),
                (
                    "reworkdoneby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("date", models.DateField()),
                (
                    "disposalaction",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "problemcategory",
                    models.CharField(blank=True, max_length=60, null=True),
                ),
                ("rdepthead", models.CharField(blank=True, max_length=40, null=True)),
                ("fdepthead", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "rauthorisedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("production_number", models.IntegerField()),
                ("rejectionshipno", models.IntegerField()),
                ("bench", models.CharField(blank=True, max_length=10, null=True)),
                ("bench1", models.CharField(blank=True, max_length=10, null=True)),
                ("soldering", models.CharField(blank=True, max_length=10, null=True)),
                ("irtester", models.CharField(blank=True, max_length=10, null=True)),
                ("hvtester", models.CharField(blank=True, max_length=10, null=True)),
                ("ps1", models.CharField(blank=True, max_length=100, null=True)),
                ("ps2", models.CharField(blank=True, max_length=10, null=True)),
                ("ps3", models.CharField(blank=True, max_length=10, null=True)),
                ("ps4", models.CharField(blank=True, max_length=10, null=True)),
                ("ps5", models.CharField(blank=True, max_length=10, null=True)),
                ("mi1", models.CharField(blank=True, max_length=100, null=True)),
                ("mi2", models.CharField(blank=True, max_length=10, null=True)),
                ("mi3", models.CharField(blank=True, max_length=10, null=True)),
                ("mi4", models.CharField(blank=True, max_length=10, null=True)),
                ("mi5", models.CharField(blank=True, max_length=10, null=True)),
                ("any", models.CharField(blank=True, max_length=10, null=True)),
                ("servicereportno", models.BigIntegerField()),
                ("createdby", models.BigIntegerField()),
                ("from_start", models.TimeField()),
                ("from_end", models.TimeField()),
                ("timestamp", models.DateTimeField()),
                ("workto", models.CharField(max_length=10)),
                ("finalsave", models.CharField(max_length=10)),
                ("back_log", models.CharField(max_length=20)),
                (
                    "reject_resion",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "autby_todept",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "reject_resionto",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("user_cnfm", models.CharField(max_length=20)),
                (
                    "to_finalsave",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("hod2agl_prmsn", models.CharField(max_length=20)),
                (
                    "agl_timestamp",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("closedby", models.IntegerField()),
                ("tot_time", models.TimeField()),
                ("ass_rw_rj", models.CharField(blank=True, max_length=20, null=True)),
                ("ass_mrs", models.IntegerField()),
                ("ass_qty", models.CharField(max_length=10)),
                ("pstng_date", models.DateField()),
                ("mn_sb_ass", models.CharField(blank=True, max_length=25, null=True)),
                (
                    "root_cause",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=5000,
                        null=True,
                    ),
                ),
                ("noof_cards", models.IntegerField()),
                (
                    "oprtr_mstk",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
                ("eqpmnt_rpr_date", models.DateField()),
                ("mr_data_month", models.IntegerField()),
                ("po_status", models.IntegerField()),
                (
                    "rwrk_time_spent",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                ("cons_qty", models.IntegerField()),
                ("unit_slno", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("action_yn", models.CharField(blank=True, max_length=1, null=True)),
                ("datef_impl", models.DateField(blank=True, null=True)),
                ("mrd_year", models.TextField()),
                (
                    "ed_prod_cmnts",
                    models.CharField(blank=True, max_length=1500, null=True),
                ),
                ("ed_prod_last_up_date", models.DateField()),
                ("ed_prod_first_up_date", models.DateField()),
                ("ed_prod_closed_up_date", models.DateField()),
                ("mail_to", models.IntegerField()),
                ("nc_smm", models.CharField(blank=True, max_length=100, null=True)),
                ("ed_prod_cls_sts", models.IntegerField()),
                ("ed_prod_ntry_by", models.IntegerField()),
                ("edp_rvwd", models.IntegerField()),
                ("nayab_sts", models.IntegerField()),
                ("rajasree", models.CharField(max_length=5)),
                ("delete1", models.IntegerField()),
                ("totappliofcom", models.IntegerField()),
                ("totcomqty", models.IntegerField()),
                ("acrappl", models.IntegerField()),
                ("totfailure", models.IntegerField()),
                ("modeoffailure", models.TextField(blank=True, null=True)),
                ("faildisrlim", models.TextField(blank=True, null=True)),
                ("igisampling", models.TextField(blank=True, null=True)),
                ("promistake", models.TextField(blank=True, null=True)),
                ("problemsetup", models.TextField(blank=True, null=True)),
                ("tl", models.CharField(blank=True, max_length=6, null=True)),
                ("gl", models.CharField(blank=True, max_length=6, null=True)),
                ("file_name", models.CharField(blank=True, max_length=100, null=True)),
                ("file_type", models.CharField(blank=True, max_length=50, null=True)),
                ("file_path", models.CharField(blank=True, max_length=500, null=True)),
                ("file_size", models.CharField(blank=True, max_length=50, null=True)),
                ("supplier_code", models.CharField(max_length=10)),
                (
                    "inspection_type",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("faildatethird", models.DateField()),
                ("failapp", models.TextField(blank=True, null=True)),
                ("equipmentfaildate", models.DateField(blank=True, null=True)),
                (
                    "assembly_subtype",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("status", models.IntegerField()),
                ("defectcat", models.TextField(blank=True, null=True)),
                ("inspect", models.CharField(blank=True, max_length=5, null=True)),
                ("sub", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "closed_data",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("mat_doc_no", models.CharField(blank=True, max_length=15, null=True)),
                ("serial_no", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "effectiveness",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("costmat", models.IntegerField()),
                ("manu_meth", models.CharField(blank=True, max_length=20, null=True)),
                ("prom_type", models.CharField(blank=True, max_length=30, null=True)),
                ("def_cnt", models.IntegerField()),
                ("spec_range", models.CharField(blank=True, max_length=70, null=True)),
                ("acc_range", models.CharField(blank=True, max_length=70, null=True)),
                ("qp_slno", models.IntegerField()),
                (
                    "modify_range",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("move_sap", models.IntegerField()),
                ("mat_comm", models.CharField(blank=True, max_length=500, null=True)),
                ("review", models.IntegerField()),
                ("nc_no", models.CharField(blank=True, max_length=15, null=True)),
                ("mailsent", models.IntegerField()),
                ("vendor", models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                "db_table": "rework_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkDetails12",
            fields=[
                ("reworkreportno", models.AutoField(primary_key=True, serialize=False)),
                ("fromdept", models.CharField(blank=True, max_length=8, null=True)),
                ("todept", models.CharField(blank=True, max_length=8, null=True)),
                ("failure_date", models.DateField()),
                ("engineername", models.BigIntegerField()),
                ("project", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "equipmentslno",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("card_slno", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("fstage", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "problemdesc",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("eqmnt", models.CharField(max_length=500)),
                ("autby", models.CharField(blank=True, max_length=40, null=True)),
                ("sareworkdetails", models.TextField(blank=True, null=True)),
                ("ca", models.TextField(blank=True, null=True)),
                (
                    "reworkdoneby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("date", models.DateField()),
                (
                    "disposalaction",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "problemcategory",
                    models.CharField(blank=True, max_length=60, null=True),
                ),
                ("rdepthead", models.CharField(blank=True, max_length=40, null=True)),
                ("fdepthead", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "rauthorisedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("production_number", models.IntegerField()),
                ("rejectionshipno", models.IntegerField()),
                ("bench", models.CharField(blank=True, max_length=10, null=True)),
                ("bench1", models.CharField(blank=True, max_length=10, null=True)),
                ("soldering", models.CharField(max_length=10)),
                ("irtester", models.CharField(max_length=10)),
                ("hvtester", models.CharField(max_length=10)),
                ("ps1", models.CharField(max_length=100)),
                ("ps2", models.CharField(max_length=10)),
                ("ps3", models.CharField(max_length=10)),
                ("ps4", models.CharField(max_length=10)),
                ("ps5", models.CharField(max_length=10)),
                ("mi1", models.CharField(max_length=100)),
                ("mi2", models.CharField(max_length=10)),
                ("mi3", models.CharField(max_length=10)),
                ("mi4", models.CharField(max_length=10)),
                ("mi5", models.CharField(max_length=10)),
                ("any", models.CharField(max_length=10)),
                ("servicereportno", models.BigIntegerField()),
                ("createdby", models.BigIntegerField()),
                ("from_start", models.TimeField()),
                ("from_end", models.TimeField()),
                ("timestamp", models.DateTimeField()),
                ("workto", models.CharField(max_length=10)),
                ("finalsave", models.CharField(max_length=10)),
                ("back_log", models.CharField(max_length=20)),
                ("reject_resion", models.CharField(max_length=200)),
                ("autby_todept", models.CharField(max_length=20)),
                ("reject_resionto", models.CharField(max_length=200)),
                ("user_cnfm", models.CharField(max_length=20)),
                ("to_finalsave", models.CharField(max_length=50)),
                ("hod2agl_prmsn", models.CharField(max_length=20)),
                ("agl_timestamp", models.CharField(max_length=30)),
                ("closedby", models.IntegerField()),
                ("tot_time", models.TimeField()),
                ("ass_rw_rj", models.CharField(max_length=20)),
                ("ass_mrs", models.IntegerField()),
                ("ass_qty", models.IntegerField()),
                ("pstng_date", models.DateField()),
                ("mn_sb_ass", models.CharField(max_length=25)),
                ("root_cause", models.CharField(max_length=5000)),
                ("noof_cards", models.IntegerField()),
                ("oprtr_mstk", models.CharField(max_length=5000)),
                ("eqpmnt_rpr_date", models.DateField()),
                ("mr_data_month", models.IntegerField()),
                ("po_status", models.IntegerField()),
                ("rwrk_time_spent", models.CharField(max_length=6)),
                ("cons_qty", models.IntegerField()),
                ("unit_slno", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("action_yn", models.CharField(max_length=1)),
                ("datef_impl", models.DateField(blank=True, null=True)),
                ("mrd_year", models.TextField()),
                ("ed_prod_cmnts", models.CharField(max_length=1500)),
                ("ed_prod_last_up_date", models.DateField()),
                ("ed_prod_first_up_date", models.DateField()),
                ("ed_prod_closed_up_date", models.DateField()),
                ("mail_to", models.IntegerField()),
                ("nc_smm", models.CharField(max_length=100)),
                ("ed_prod_cls_sts", models.IntegerField()),
                ("ed_prod_ntry_by", models.IntegerField()),
                ("edp_rvwd", models.IntegerField()),
                ("nayab_sts", models.IntegerField()),
                ("rajasree", models.CharField(max_length=5)),
                ("delete1", models.IntegerField()),
                ("totappliofcom", models.IntegerField()),
                ("totcomqty", models.IntegerField()),
                ("acrappl", models.IntegerField()),
                ("totfailure", models.IntegerField()),
                ("modeoffailure", models.TextField()),
                ("faildisrlim", models.TextField()),
                ("igisampling", models.TextField()),
                ("promistake", models.TextField()),
                ("problemsetup", models.TextField()),
                ("tl", models.CharField(max_length=6)),
                ("gl", models.CharField(max_length=6)),
                ("file_name", models.CharField(max_length=50)),
                ("file_type", models.CharField(max_length=50)),
                ("file_path", models.CharField(max_length=250)),
                ("file_size", models.CharField(max_length=50)),
                ("supplier_code", models.IntegerField()),
                ("inspection_type", models.CharField(max_length=20)),
                ("faildatethird", models.DateField()),
                ("failapp", models.TextField()),
                ("equipmentfaildate", models.DateField()),
                ("assembly_subtype", models.CharField(max_length=150)),
                ("status", models.IntegerField()),
                ("defectcat", models.TextField()),
                ("inspect", models.CharField(max_length=5)),
                ("sub", models.CharField(max_length=100)),
                ("vendor_name", models.CharField(max_length=100)),
                ("inspection_type1", models.CharField(max_length=100)),
                ("closed_data", models.CharField(max_length=250)),
            ],
            options={
                "db_table": "rework_details12",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkDetails123",
            fields=[
                ("reworkreportno", models.AutoField(primary_key=True, serialize=False)),
                ("fromdept", models.CharField(blank=True, max_length=8, null=True)),
                ("todept", models.CharField(blank=True, max_length=8, null=True)),
                ("failure_date", models.DateField()),
                ("engineername", models.BigIntegerField()),
                ("project", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "equipmentslno",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("card_slno", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "fstage",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=30,
                        null=True,
                    ),
                ),
                (
                    "problemdesc",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=1000,
                        null=True,
                    ),
                ),
                ("eqmnt", models.CharField(max_length=500)),
                ("autby", models.CharField(blank=True, max_length=40, null=True)),
                ("sareworkdetails", models.TextField(blank=True, null=True)),
                ("ca", models.TextField(blank=True, null=True)),
                (
                    "reworkdoneby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("date", models.DateField()),
                (
                    "disposalaction",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=200,
                        null=True,
                    ),
                ),
                (
                    "problemcategory",
                    models.CharField(blank=True, max_length=60, null=True),
                ),
                ("rdepthead", models.CharField(blank=True, max_length=40, null=True)),
                ("fdepthead", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "rauthorisedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("production_number", models.IntegerField()),
                ("rejectionshipno", models.IntegerField()),
                ("bench", models.CharField(blank=True, max_length=10, null=True)),
                ("bench1", models.CharField(blank=True, max_length=10, null=True)),
                ("soldering", models.CharField(blank=True, max_length=10, null=True)),
                ("irtester", models.CharField(blank=True, max_length=10, null=True)),
                ("hvtester", models.CharField(blank=True, max_length=10, null=True)),
                ("ps1", models.CharField(blank=True, max_length=100, null=True)),
                ("ps2", models.CharField(blank=True, max_length=10, null=True)),
                ("ps3", models.CharField(blank=True, max_length=10, null=True)),
                ("ps4", models.CharField(blank=True, max_length=10, null=True)),
                ("ps5", models.CharField(blank=True, max_length=10, null=True)),
                ("mi1", models.CharField(blank=True, max_length=100, null=True)),
                ("mi2", models.CharField(blank=True, max_length=10, null=True)),
                ("mi3", models.CharField(blank=True, max_length=10, null=True)),
                ("mi4", models.CharField(blank=True, max_length=10, null=True)),
                ("mi5", models.CharField(blank=True, max_length=10, null=True)),
                ("any", models.CharField(blank=True, max_length=10, null=True)),
                ("servicereportno", models.BigIntegerField()),
                ("createdby", models.BigIntegerField()),
                ("from_start", models.TimeField()),
                ("from_end", models.TimeField()),
                ("timestamp", models.DateTimeField()),
                ("workto", models.CharField(max_length=10)),
                ("finalsave", models.CharField(max_length=10)),
                ("back_log", models.CharField(max_length=20)),
                (
                    "reject_resion",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "autby_todept",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "reject_resionto",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("user_cnfm", models.CharField(max_length=20)),
                (
                    "to_finalsave",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("hod2agl_prmsn", models.CharField(max_length=20)),
                (
                    "agl_timestamp",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("closedby", models.IntegerField()),
                ("tot_time", models.TimeField()),
                ("ass_rw_rj", models.CharField(blank=True, max_length=20, null=True)),
                ("ass_mrs", models.IntegerField()),
                ("ass_qty", models.CharField(max_length=10)),
                ("pstng_date", models.DateField()),
                ("mn_sb_ass", models.CharField(blank=True, max_length=25, null=True)),
                (
                    "root_cause",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=5000,
                        null=True,
                    ),
                ),
                ("noof_cards", models.IntegerField()),
                (
                    "oprtr_mstk",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
                ("eqpmnt_rpr_date", models.DateField()),
                ("mr_data_month", models.IntegerField()),
                ("po_status", models.IntegerField()),
                (
                    "rwrk_time_spent",
                    models.CharField(blank=True, max_length=6, null=True),
                ),
                ("cons_qty", models.IntegerField()),
                ("unit_slno", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("action_yn", models.CharField(blank=True, max_length=1, null=True)),
                ("datef_impl", models.DateField(blank=True, null=True)),
                ("mrd_year", models.TextField()),
                (
                    "ed_prod_cmnts",
                    models.CharField(blank=True, max_length=1500, null=True),
                ),
                ("ed_prod_last_up_date", models.DateField()),
                ("ed_prod_first_up_date", models.DateField()),
                ("ed_prod_closed_up_date", models.DateField()),
                ("mail_to", models.IntegerField()),
                ("nc_smm", models.CharField(blank=True, max_length=100, null=True)),
                ("ed_prod_cls_sts", models.IntegerField()),
                ("ed_prod_ntry_by", models.IntegerField()),
                ("edp_rvwd", models.IntegerField()),
                ("nayab_sts", models.IntegerField()),
                ("rajasree", models.CharField(max_length=5)),
                ("delete1", models.IntegerField()),
                ("totappliofcom", models.IntegerField()),
                ("totcomqty", models.IntegerField()),
                ("acrappl", models.IntegerField()),
                ("totfailure", models.IntegerField()),
                ("modeoffailure", models.TextField(blank=True, null=True)),
                ("faildisrlim", models.TextField(blank=True, null=True)),
                ("igisampling", models.TextField(blank=True, null=True)),
                ("promistake", models.TextField(blank=True, null=True)),
                ("problemsetup", models.TextField(blank=True, null=True)),
                ("tl", models.CharField(blank=True, max_length=6, null=True)),
                ("gl", models.CharField(blank=True, max_length=6, null=True)),
                ("file_name", models.CharField(blank=True, max_length=50, null=True)),
                ("file_type", models.CharField(blank=True, max_length=50, null=True)),
                ("file_path", models.CharField(blank=True, max_length=500, null=True)),
                ("file_size", models.CharField(blank=True, max_length=50, null=True)),
                ("supplier_code", models.IntegerField()),
                (
                    "inspection_type",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("faildatethird", models.DateField()),
                ("failapp", models.TextField(blank=True, null=True)),
                ("equipmentfaildate", models.DateField(blank=True, null=True)),
                (
                    "assembly_subtype",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("status", models.IntegerField()),
                ("defectcat", models.TextField(blank=True, null=True)),
                ("inspect", models.CharField(blank=True, max_length=5, null=True)),
                ("sub", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "vendor_name",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "inspection_type1",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "closed_data",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("mat_doc_no", models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                "db_table": "rework_details123",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkDetailsAttach",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reworkreportno",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("attachment", models.CharField(blank=True, max_length=500, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "rework_details_attach",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkDetailsEdpCmnts",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reworkreportno", models.IntegerField()),
                ("ed_prod_cmnts", models.CharField(max_length=1500)),
                ("ed_prod_last_up_date", models.DateField()),
                ("ed_prod_cls_sts", models.IntegerField()),
                ("mail_to", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rework_details_edp_cmnts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkDetailsThirdFialDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reworkreportno", models.IntegerField()),
                ("code", models.CharField(max_length=15)),
                ("failatprod", models.CharField(max_length=150)),
                ("project", models.CharField(max_length=150)),
                ("saname", models.CharField(max_length=150)),
                ("faildate", models.CharField(max_length=12)),
                ("failstage", models.CharField(max_length=150)),
                ("modeoffail", models.CharField(max_length=150)),
                ("compmake", models.CharField(max_length=150)),
                ("compbatch", models.CharField(max_length=150)),
                ("failqty", models.IntegerField()),
                ("origincountry", models.CharField(max_length=150)),
                ("opermis", models.CharField(max_length=150)),
                ("testsetup", models.CharField(max_length=150)),
                ("slno", models.IntegerField()),
                ("old_reworkreportno", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "rework_details_third_fial_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkDetEdProd",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reworkreportno", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("ed_comm", models.CharField(max_length=500)),
                ("ed_date", models.DateField()),
                ("rvt_date", models.DateField()),
                ("rvt_comm", models.TextField()),
                ("continue_field", models.IntegerField(db_column="continue")),
            ],
            options={
                "db_table": "rework_det_ed_prod",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkFailatprodMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dept", models.IntegerField()),
                ("department", models.CharField(max_length=30)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "rework_failatprod_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkHodMailIdsMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("hod", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "rework_hod_mail_ids_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkRejection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rr_no", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("reason", models.CharField(max_length=200)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rework_rejection",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkSubUnitNtry",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("reworkreportno", models.BigIntegerField()),
                ("version", models.IntegerField()),
                ("matnr", models.CharField(blank=True, max_length=20, null=True)),
                ("ritemsno", models.CharField(blank=True, max_length=20, null=True)),
                ("fitemsno", models.CharField(blank=True, max_length=1000, null=True)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("failed_qty", models.IntegerField()),
            ],
            options={
                "db_table": "rework_sub_unit_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ReworkUserTime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_no", models.IntegerField()),
                ("mat_code", models.CharField(max_length=20)),
                ("unit_slno", models.IntegerField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("tot_time", models.TimeField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rework_user_time",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RfqCurExHistory",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("valid_from", models.DateField()),
                ("valid_to", models.DateField()),
                ("exchange_rate", models.DecimalField(decimal_places=4, max_digits=10)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rfq_cur_ex_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RfqCurrencyConversion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("er_type", models.CharField(max_length=2)),
                (
                    "from_currency",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("to_currency", models.CharField(blank=True, max_length=5, null=True)),
                ("valid_from", models.DateField()),
                ("ratio_from", models.IntegerField()),
                ("ration_to", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rfq_currency_conversion",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RfqCurrencyExchangeRates",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("er_type", models.CharField(max_length=2)),
                (
                    "from_currency",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("to_currency", models.CharField(blank=True, max_length=5, null=True)),
                ("valid_from", models.DateField()),
                ("valid_to", models.DateField()),
                ("exchange_rate", models.DecimalField(decimal_places=4, max_digits=10)),
                ("ratio_from", models.IntegerField()),
                ("ration_to", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "rfq_currency_exchange_rates",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Rfqdata",
            fields=[
                ("rid", models.AutoField(primary_key=True, serialize=False)),
                ("rfqno", models.CharField(max_length=11, unique=True)),
                ("rfqitem", models.CharField(blank=True, max_length=5, null=True)),
                ("rfq_date", models.DateField()),
                ("ven_id", models.IntegerField()),
                ("rfq_duedate", models.DateField()),
                ("pg", models.CharField(blank=True, max_length=4, null=True)),
                ("pg_empcode", models.IntegerField(blank=True, null=True)),
                ("collect_no", models.CharField(blank=True, max_length=10, null=True)),
                ("mat_code", models.CharField(blank=True, max_length=18, null=True)),
                ("mat_desc", models.CharField(blank=True, max_length=50, null=True)),
                ("make", models.CharField(blank=True, max_length=50, null=True)),
                ("mpn_no", models.CharField(blank=True, max_length=30, null=True)),
                ("mat_grp", models.CharField(blank=True, max_length=50, null=True)),
                ("deli_date_from", models.DateField()),
                ("deli_date_to", models.DateField()),
                ("deli_terms", models.CharField(blank=True, max_length=50, null=True)),
                ("pay_terms", models.CharField(blank=True, max_length=50, null=True)),
                ("category", models.CharField(blank=True, max_length=10, null=True)),
                ("qty", models.IntegerField()),
                ("uom", models.CharField(blank=True, max_length=11, null=True)),
                ("currency", models.CharField(blank=True, max_length=10, null=True)),
                ("cost", models.DecimalField(decimal_places=4, max_digits=18)),
                ("pg_lead", models.IntegerField()),
                ("moq", models.IntegerField(blank=True, null=True)),
                ("spq", models.IntegerField(blank=True, null=True)),
                ("lead_time", models.CharField(blank=True, max_length=100, null=True)),
                ("rfq_sts", models.IntegerField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("date", models.DateField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "rfqdata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RfqdataHistory",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("rid", models.IntegerField()),
                (
                    "cost",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=18, null=True
                    ),
                ),
                ("currency", models.CharField(blank=True, max_length=10, null=True)),
                ("deli_terms", models.IntegerField(blank=True, null=True)),
                ("pay_terms", models.IntegerField(blank=True, null=True)),
                ("moq", models.IntegerField(blank=True, null=True)),
                ("spq", models.IntegerField(blank=True, null=True)),
                ("lead_time", models.IntegerField(blank=True, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("createdby", models.IntegerField()),
                ("side", models.IntegerField()),
                ("ven_id", models.IntegerField()),
                ("rfq_sts", models.IntegerField()),
                ("attachment", models.CharField(blank=True, max_length=50, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("date", models.DateField()),
            ],
            options={
                "db_table": "rfqdata_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RfqHist",
            fields=[
                ("his_id", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("er_type", models.CharField(max_length=2)),
                ("from_currency", models.CharField(max_length=5)),
                ("to_currency", models.CharField(blank=True, max_length=5, null=True)),
                ("valid_from", models.DateField()),
                ("valid_to", models.DateField()),
                (
                    "exchange_rate",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                ("ratio_from", models.IntegerField(blank=True, null=True)),
                ("ration_to", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "rfq_hist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RoleMaster",
            fields=[
                (
                    "rolename",
                    models.CharField(max_length=30, primary_key=True, serialize=False),
                ),
            ],
            options={
                "db_table": "role_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="RoleMasterAdmin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("rolename", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "role_master_admin",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Sales",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("billing_doc", models.CharField(max_length=10)),
                ("item_no", models.IntegerField()),
                ("billing_date", models.DateField()),
                ("customer", models.CharField(max_length=10)),
                ("ship_to_party", models.CharField(max_length=10)),
                ("payer", models.CharField(max_length=10)),
                ("billed_qty", models.IntegerField()),
                ("mat_code", models.CharField(max_length=18)),
                ("sales_doc", models.CharField(max_length=10)),
                ("sales_doc_item", models.IntegerField()),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sales",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Sample",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("address", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "sample",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SampleAcceptCriteria",
            fields=[
                (
                    "document_number",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("material", models.CharField(max_length=20)),
                (
                    "xlessthanu",
                    models.CharField(
                        blank=True, db_column="XlessthanU", max_length=50, null=True
                    ),
                ),
                (
                    "xgreaterthanl",
                    models.CharField(
                        blank=True, db_column="XgreaterthanL", max_length=50, null=True
                    ),
                ),
                ("rdivide", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "xgreaterthanlpluskr",
                    models.CharField(
                        blank=True,
                        db_column="xgreaterthanLpluskr",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "xlessthanequalu",
                    models.CharField(
                        blank=True,
                        db_column="xlessthanequalU",
                        max_length=50,
                        null=True,
                    ),
                ),
                ("remarks", models.CharField(blank=True, max_length=50, null=True)),
                ("createdby", models.BigIntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sample_accept_criteria",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SampleC",
            fields=[
                ("cat_id", models.AutoField(primary_key=True, serialize=False)),
                ("cat_name", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "sample_c",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SampleCategoryMaster",
            fields=[
                ("cat_id", models.AutoField(primary_key=True, serialize=False)),
                ("cat_name", models.CharField(blank=True, max_length=50, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "sample_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SampleInspectionAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("file_name", models.CharField(blank=True, max_length=50, null=True)),
                ("file_type", models.CharField(blank=True, max_length=50, null=True)),
                ("file_path", models.CharField(blank=True, max_length=100, null=True)),
                ("full_path", models.CharField(blank=True, max_length=100, null=True)),
                ("raw_name", models.CharField(blank=True, max_length=50, null=True)),
                ("orig_name", models.CharField(blank=True, max_length=50, null=True)),
                ("client_name", models.CharField(blank=True, max_length=50, null=True)),
                ("file_ext", models.CharField(blank=True, max_length=50, null=True)),
                ("file_size", models.CharField(blank=True, max_length=50, null=True)),
                ("is_image", models.CharField(blank=True, max_length=50, null=True)),
                ("image_width", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "image_height",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("image_type", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "image_size_str",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("type", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                "db_table": "sample_inspection_attachment",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SampleInspectionNtry",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("date", models.DateField()),
                ("time", models.TimeField()),
                (
                    "supplier_code",
                    models.CharField(blank=True, max_length=8, null=True),
                ),
                ("sup_type", models.CharField(blank=True, max_length=2, null=True)),
                (
                    "non_r_sup_name",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("non_r_place", models.CharField(blank=True, max_length=50, null=True)),
                ("dc_no", models.CharField(blank=True, max_length=20, null=True)),
                ("dc_date", models.DateField()),
                ("matnr", models.CharField(blank=True, max_length=500, null=True)),
                ("qty", models.IntegerField()),
                ("cat_id", models.IntegerField()),
                ("purpose_id", models.IntegerField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("hod_code", models.IntegerField()),
                ("hod_status", models.IntegerField()),
                (
                    "hod_timestamp",
                    models.CharField(blank=True, max_length=18, null=True),
                ),
                (
                    "hod_remarks",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("igi_empcode", models.IntegerField()),
                ("received_qty", models.FloatField()),
                ("regected_qty", models.FloatField()),
                ("approved_qty", models.FloatField()),
                ("rework_quantity", models.IntegerField(db_column="Rework_quantity")),
                ("inspection_date", models.DateField()),
                ("acp_insep_date", models.DateField()),
                ("igi_sts", models.IntegerField()),
                (
                    "igi_remarks",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("created_by", models.CharField(blank=True, max_length=6, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_by", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "sample_inspection_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SampleInspectionSubNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("matcode", models.IntegerField()),
                ("qty", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "sample_inspection_sub_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SamplePurposeMaster",
            fields=[
                ("purpose_id", models.AutoField(primary_key=True, serialize=False)),
                ("purpose_name", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "sample_purpose_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SamplesizeDetails",
            fields=[
                (
                    "docno",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("material", models.CharField(max_length=20)),
                ("slno", models.IntegerField()),
                ("obsvalue", models.CharField(blank=True, max_length=100, null=True)),
                ("rownumber", models.IntegerField(blank=True, null=True)),
                ("rowvalue", models.FloatField(blank=True, null=True)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "samplesize_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Sampletest",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("name", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
                ("second", models.DateField()),
            ],
            options={
                "db_table": "sampletest",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SamplingInspection",
            fields=[
                (
                    "docno",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("department", models.CharField(max_length=8)),
                ("lotsize", models.PositiveIntegerField(blank=True, null=True)),
                ("samplesize", models.PositiveIntegerField(blank=True, null=True)),
                ("aqlvalue", models.FloatField(blank=True, null=True)),
                ("constantvalue", models.FloatField(blank=True, null=True)),
                ("rvlvalue", models.FloatField(blank=True, null=True)),
                (
                    "drgdimension",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("parameter", models.CharField(blank=True, max_length=15, null=True)),
                ("x", models.CharField(blank=True, max_length=10, null=True)),
                ("r", models.CharField(blank=True, max_length=10, null=True)),
                ("stage", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("teststage", models.CharField(max_length=100)),
                ("material", models.CharField(max_length=20)),
                ("vendor", models.CharField(max_length=8)),
                ("instrumentsino", models.CharField(max_length=11)),
                ("inspectedby", models.BigIntegerField(blank=True, null=True)),
                ("inspecteddate", models.DateField(blank=True, null=True)),
                ("approvedby", models.BigIntegerField(blank=True, null=True)),
                ("approveddate", models.DateField(blank=True, null=True)),
                ("obsvalue", models.CharField(blank=True, max_length=1000, null=True)),
                ("rvalue", models.CharField(blank=True, max_length=100, null=True)),
                ("finalsave", models.CharField(max_length=5)),
            ],
            options={
                "db_table": "sampling_inspection",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SapFlatfileme",
            fields=[
                ("flatfileid", models.AutoField(primary_key=True, serialize=False)),
                ("dwg_totid", models.IntegerField()),
                ("filedid", models.IntegerField()),
                ("fileddes", models.TextField()),
                ("status", models.IntegerField()),
                ("refitem", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "sap_flatfileme",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ScarDetails",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("scar_type", models.CharField(blank=True, max_length=10, null=True)),
                ("scarno", models.CharField(blank=True, max_length=200, null=True)),
                ("scardate", models.DateField()),
                ("pono", models.CharField(blank=True, max_length=20, null=True)),
                ("docno", models.CharField(blank=True, max_length=20, null=True)),
                ("batchno", models.CharField(blank=True, max_length=30, null=True)),
                ("supplier", models.CharField(blank=True, max_length=10, null=True)),
                ("supp_addr", models.TextField(blank=True, null=True)),
                ("approval", models.CharField(blank=True, max_length=10, null=True)),
                ("partno", models.CharField(blank=True, max_length=12, null=True)),
                ("prob_desc", models.TextField(blank=True, null=True)),
                ("qty_rec", models.IntegerField()),
                ("qty_rej", models.IntegerField()),
                ("uom", models.IntegerField()),
                ("insp_by", models.CharField(blank=True, max_length=8, null=True)),
                ("insp_done", models.IntegerField(blank=True, null=True)),
                ("ntry_by", models.IntegerField(blank=True, null=True)),
                ("ntry_date", models.DateField()),
                ("hod_sts_ini", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("hod_date_ini", models.DateField()),
                ("ven_sts", models.IntegerField()),
                ("cont_act", models.TextField(blank=True, null=True)),
                ("root_cau", models.TextField(blank=True, null=True)),
                ("escape_point", models.TextField(blank=True, null=True)),
                ("corr_act", models.TextField(blank=True, null=True)),
                ("due_date", models.DateField()),
                ("prev_act", models.TextField(blank=True, null=True)),
                ("eff_date", models.DateField()),
                ("supp_desig", models.CharField(blank=True, max_length=30, null=True)),
                ("ven_date", models.DateField()),
                ("hod_ven_sts", models.IntegerField()),
                ("eff_act_plan", models.TextField(blank=True, null=True)),
                ("status", models.CharField(max_length=10)),
                ("compl_closed_date", models.DateField()),
                (
                    "supplier_rep_name",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("entry_att", models.CharField(blank=True, max_length=500, null=True)),
                ("supp_att", models.CharField(blank=True, max_length=500, null=True)),
                ("hod_att", models.CharField(blank=True, max_length=500, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "scar_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ScarUomMaster",
            fields=[
                ("uid", models.AutoField(primary_key=True, serialize=False)),
                ("uom", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "scar_uom_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SepsaMasData",
            fields=[
                ("matid", models.AutoField(primary_key=True, serialize=False)),
                ("matcode", models.CharField(blank=True, max_length=20, null=True)),
                ("matdesc", models.CharField(blank=True, max_length=200, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "sepsa_mas_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SepsaUsermaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("customer_id", models.CharField(blank=True, max_length=15, null=True)),
                ("password", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "customer_name",
                    models.CharField(blank=True, max_length=35, null=True),
                ),
                ("country", models.TextField(blank=True, null=True)),
                ("postal_code", models.CharField(blank=True, max_length=50, null=True)),
                ("serach_team", models.CharField(blank=True, max_length=50, null=True)),
                ("mail_id", models.CharField(blank=True, max_length=65, null=True)),
                ("type", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "sepsa_usermaster",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SeriveCommAttach",
            fields=[
                ("aid", models.AutoField(primary_key=True, serialize=False)),
                ("serviceno", models.IntegerField()),
                ("attachment", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "serive_comm_attach",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceAmcMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project", models.CharField(max_length=50)),
                ("loco_no", models.IntegerField()),
                ("loco_type", models.CharField(max_length=50)),
                ("version", models.CharField(max_length=30)),
                ("doc", models.DateField()),
                ("type", models.CharField(max_length=30)),
                ("unit_slno", models.IntegerField()),
                ("amc_sts", models.CharField(max_length=15)),
                ("pp", models.IntegerField()),
                ("npp", models.IntegerField()),
            ],
            options={
                "db_table": "service_amc_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceAuthorization",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("service_no", models.IntegerField()),
                ("hodcode", models.IntegerField()),
                ("hod_status", models.CharField(max_length=200)),
                ("hod_comment", models.CharField(max_length=500)),
                ("hod_rececied_date", models.DateField()),
                ("hod_approveddate", models.DateField()),
                ("review_per", models.IntegerField()),
                ("edp_code", models.IntegerField()),
                ("edp_status", models.CharField(max_length=200)),
                ("edp_comment", models.CharField(max_length=500)),
                ("edp_approveddate", models.DateField()),
                ("review_per_edp", models.IntegerField()),
                ("status", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "service_authorization",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("group_id", models.IntegerField()),
                ("group_name", models.CharField(max_length=150)),
                ("column_id", models.IntegerField()),
                ("column_name", models.CharField(max_length=150)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "service_category",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceCommisingReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("serviceno", models.IntegerField(blank=True, null=True)),
                ("month_year", models.CharField(blank=True, max_length=20, null=True)),
                ("no_fail", models.IntegerField(blank=True, null=True)),
                ("res_dept", models.CharField(blank=True, max_length=40, null=True)),
                ("rcca", models.TextField(blank=True, db_column="RCCA", null=True)),
                ("depts", models.TextField(blank=True, null=True)),
                ("analysisdet", models.TextField(blank=True, null=True)),
                ("failuredata", models.TextField(blank=True, null=True)),
                ("due_date", models.DateField()),
                ("com_date", models.DateField()),
                ("rmks", models.TextField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("root_cause", models.TextField(blank=True, null=True)),
                ("fail_det", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "service_commising_report",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceDiposal",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.TextField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "service_diposal",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceDummy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reportno", models.CharField(max_length=20)),
                ("zone", models.CharField(max_length=60)),
                ("shed", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "service_dummy",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceEnggneers",
            fields=[
                (
                    "engg_code",
                    models.CharField(max_length=10, primary_key=True, serialize=False),
                ),
                ("engg_name", models.CharField(max_length=50)),
                ("cur_desg", models.CharField(max_length=50)),
                ("createdby", models.SmallIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "service_enggneers",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceIndirectiveHist",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("report_no", models.IntegerField()),
                ("level_type", models.IntegerField()),
                ("subasscode", models.CharField(max_length=200)),
                ("from_loc", models.CharField(max_length=100)),
                ("to_loc", models.CharField(max_length=100)),
                ("from_dept", models.IntegerField()),
                ("to_dept", models.IntegerField()),
                ("from_level", models.IntegerField()),
                ("to_level", models.IntegerField()),
                ("to_level_slno", models.IntegerField()),
                ("status", models.IntegerField()),
                ("cdb_slno", models.IntegerField()),
                ("routedate", models.DateField()),
                ("route_value", models.IntegerField()),
                ("frd_val", models.IntegerField()),
                ("recived_route", models.IntegerField()),
                ("master_slno", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "service_indirective_hist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceIndirectiveHist1",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("report_no", models.IntegerField()),
                ("level_type", models.IntegerField()),
                ("subasscode", models.CharField(max_length=200)),
                ("from_loc", models.CharField(max_length=100)),
                ("to_loc", models.CharField(max_length=100)),
                ("from_dept", models.IntegerField()),
                ("to_dept", models.IntegerField()),
                ("from_level", models.IntegerField()),
                ("to_level", models.IntegerField()),
                ("to_level_slno", models.IntegerField()),
                ("status", models.IntegerField()),
                ("cdb_slno", models.IntegerField()),
                ("routedate", models.DateField()),
                ("route_value", models.IntegerField()),
                ("frd_val", models.IntegerField()),
                ("recived_route", models.IntegerField()),
                ("master_slno", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "service_indirective_hist1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceLevelMaster",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("level_name", models.CharField(blank=True, max_length=100, null=True)),
                ("table_name", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "dept_code_auth",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("loc_auth", models.CharField(blank=True, max_length=500, null=True)),
                ("url", models.CharField(blank=True, max_length=500, null=True)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "service_level_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceMailHist",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("report_no", models.IntegerField()),
                ("mail_hist_from", models.IntegerField()),
                ("mail_hist_to", models.IntegerField()),
                ("mail_text", models.CharField(max_length=500)),
                ("entry_date", models.CharField(max_length=200)),
                ("status", models.IntegerField()),
                ("type_id", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "service_mail_hist",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceMailMaster",
            fields=[
                ("slno", models.IntegerField(primary_key=True, serialize=False)),
                ("loccode", models.CharField(max_length=100)),
                ("deptcode", models.IntegerField()),
                ("project_type", models.CharField(max_length=250)),
                ("to", models.CharField(max_length=250)),
                ("cc", models.CharField(max_length=250)),
                ("bcc", models.CharField(max_length=250)),
                ("deptcond", models.CharField(max_length=100)),
                ("type", models.IntegerField()),
                ("mail1", models.CharField(max_length=1000)),
                ("mail2", models.CharField(max_length=1000)),
                ("mail3", models.CharField(max_length=1000)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "service_mail_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceMiisedData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("servicereportno", models.IntegerField()),
                ("fitemmcode", models.CharField(blank=True, max_length=100, null=True)),
                ("fitemsno", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "fitemmcodeback",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("fitemsnoback", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "service_miised_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceMultiple",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("reportno", models.IntegerField()),
                ("matcode_multi", models.CharField(max_length=250)),
                ("mat_sts_dept_from", models.IntegerField()),
                ("mat_sts_dept", models.IntegerField()),
                ("mat_rev_date_multi", models.DateField()),
                ("mat_sent_date_multi", models.DateField()),
                ("mat_loccode_multi", models.CharField(max_length=200)),
                ("mat_sts_dept_to", models.IntegerField()),
                ("mat_sts", models.IntegerField()),
                ("mat_from_date", models.DateField()),
                ("mat_route_date", models.DateField()),
                ("mat_time", models.CharField(max_length=100)),
                ("unit_sts", models.IntegerField()),
                ("unit_dept", models.IntegerField()),
                ("unit_sts_dept_from", models.IntegerField()),
                ("testedby_multi", models.IntegerField()),
                ("equipmentfaildate_multi", models.DateField()),
                ("equipmentslno_multi", models.IntegerField()),
                ("pbdesc_multi", models.TextField()),
                ("rd_analysis_multi", models.TextField()),
                ("unit_sts_dept_to", models.IntegerField()),
                ("unit_from_date", models.DateField()),
                ("unit_route_date", models.DateField()),
                ("rework_time", models.CharField(max_length=100)),
                ("sa_dept_from", models.IntegerField()),
                ("sa_dept", models.IntegerField()),
                ("sa_from_date", models.DateField()),
                ("rework_sts", models.IntegerField()),
                ("ca_dept_from", models.IntegerField()),
                ("fc_from_date", models.DateField()),
                ("fc_dept", models.IntegerField()),
                ("fc_sts", models.IntegerField()),
                ("rc_sts", models.IntegerField()),
                ("root_sts_dept_from", models.IntegerField()),
                ("root_cause_multi", models.TextField()),
                ("action_yn_multi", models.CharField(max_length=20)),
                ("ca_multi", models.TextField()),
                ("datef_impl_multi", models.DateField()),
                ("ecr_no_multi", models.CharField(max_length=200)),
                ("root_sts_dept_to", models.IntegerField()),
                ("root_dept", models.IntegerField()),
                ("root_from_date", models.DateField()),
                ("root_route_date", models.DateField()),
                ("root_time", models.CharField(max_length=100)),
                ("pse_sts", models.IntegerField()),
                ("pse_sts_dept_from", models.IntegerField()),
                ("pse_dept", models.IntegerField()),
                ("failuredetails_multi", models.TextField()),
                ("pr_sup_eng_comm_multi", models.TextField()),
                ("knowledge_appli_multi", models.CharField(max_length=20)),
                ("consult_asso_multi", models.IntegerField()),
                ("enteredby_multi", models.IntegerField()),
                ("failurecategory_multi", models.CharField(max_length=200)),
                ("checkedby_muti", models.IntegerField()),
                ("pse_sts_dept_to", models.IntegerField()),
                ("pse_from_date", models.DateField()),
                ("pse_route_date", models.DateField()),
                ("problemcategory_multi", models.CharField(max_length=200)),
                ("oprtr_mstk_multi", models.IntegerField()),
                ("disposalaction_multi", models.TextField()),
                ("disp_matcode", models.CharField(max_length=50)),
                ("disp_qty", models.CharField(max_length=50)),
                ("dis_sts_dept_to", models.IntegerField()),
                ("dis_route_date", models.DateField()),
                ("no_prob_loco_multi", models.CharField(max_length=250)),
                ("noproblem_zone_multi", models.CharField(max_length=250)),
                ("no_prob_shed_multi", models.CharField(max_length=250)),
                ("fitted_date_multi", models.DateField()),
                ("nop_dept_multi", models.IntegerField()),
                ("nop_route_date", models.DateField()),
                ("curr_sts", models.IntegerField()),
                ("sub_slno", models.CharField(max_length=100)),
                ("sub_rslno", models.CharField(max_length=100)),
                ("id_ref", models.CharField(max_length=100)),
                ("master_slno", models.CharField(max_length=100)),
                ("third_type", models.IntegerField()),
                ("material_recevie_num", models.IntegerField()),
                ("scrp_wrnty", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "service_multiple",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceMultipleMat",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("reportno", models.IntegerField()),
                ("matcode_multi", models.CharField(max_length=250)),
                ("mat_sts_dept_from", models.IntegerField()),
                ("mat_sts_dept", models.IntegerField()),
                ("mat_rev_date_multi", models.DateField()),
                ("mat_sent_date_multi", models.DateField()),
                ("mat_loccode_multi", models.CharField(max_length=250)),
                ("mat_sts_dept_to", models.IntegerField()),
                ("mat_sts", models.IntegerField()),
                ("mat_from_date", models.DateField()),
                ("mat_route_date", models.DateField()),
                ("route_value", models.IntegerField()),
                ("mat_time", models.CharField(max_length=100)),
                ("hod_sts", models.CharField(max_length=15)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "service_multiple_mat",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceMultiplePse",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("reportno", models.IntegerField()),
                ("matcode_multi", models.CharField(max_length=250)),
                ("from_loc", models.CharField(max_length=100)),
                ("to_loc", models.CharField(max_length=100)),
                ("pse_sts_dept_from", models.IntegerField()),
                ("pse_dept", models.IntegerField()),
                ("failuredetails_multi", models.TextField()),
                ("pr_sup_eng_comm_multi", models.TextField()),
                ("knowledge_appli_multi", models.CharField(max_length=20)),
                ("consult_asso_multi", models.IntegerField()),
                ("enteredby_multi", models.IntegerField()),
                ("failurecategory_multi", models.CharField(max_length=200)),
                ("checkedby_muti", models.IntegerField()),
                ("pse_sts_dept_to", models.IntegerField()),
                ("pse_from_date", models.DateField()),
                ("pse_route_date", models.DateField()),
                ("pse_sts", models.IntegerField()),
                ("route_value", models.IntegerField()),
                ("hod_sts", models.CharField(blank=True, max_length=15, null=True)),
                ("db_type", models.IntegerField()),
                ("type_ref", models.IntegerField()),
                ("uniq_id", models.IntegerField()),
                ("type", models.IntegerField()),
                (
                    "master_slno",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "service_multiple_pse",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceMultipleRework",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("reportno", models.IntegerField()),
                ("matcode_multi", models.CharField(max_length=250)),
                ("from_loc", models.CharField(max_length=100)),
                ("to_loc", models.CharField(max_length=100)),
                ("unit_sts_dept_from", models.IntegerField()),
                ("unit_dept", models.IntegerField()),
                ("testedby_multi", models.IntegerField()),
                ("equipmentfaildate_multi", models.DateField()),
                ("equipmentslno_multi", models.CharField(max_length=100)),
                ("pbdesc_multi", models.TextField()),
                ("reason_delay", models.TextField()),
                ("remarks", models.TextField()),
                ("rd_analysis_multi", models.TextField()),
                ("unit_sts_dept_to", models.IntegerField()),
                ("unit_from_date", models.DateField()),
                ("unit_route_date", models.DateField()),
                ("unit_sts", models.IntegerField()),
                ("route_value", models.IntegerField()),
                ("rework_time", models.CharField(max_length=100)),
                ("hod_sts", models.CharField(max_length=15)),
                ("type", models.IntegerField()),
                ("db_type", models.IntegerField()),
                ("type_ref", models.IntegerField()),
                ("other_dept_pend", models.IntegerField()),
                ("analysis_comp", models.IntegerField()),
                ("master_slno", models.CharField(max_length=100)),
                ("attchmentforevrysub", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "service_multiple_rework",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceMultipleRoot",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("counts", models.IntegerField()),
                ("reportno", models.IntegerField()),
                ("matcode_multi", models.CharField(max_length=250)),
                ("from_loc", models.CharField(max_length=100)),
                ("to_loc", models.CharField(max_length=100)),
                ("root_sts_dept_from", models.IntegerField()),
                ("root_dept", models.IntegerField()),
                ("root_cause_multi", models.TextField()),
                ("action_yn_multi", models.CharField(max_length=20)),
                ("ca_multi", models.TextField()),
                ("knowledge_appli_multi", models.CharField(max_length=20)),
                ("consult_asso_multi", models.IntegerField()),
                ("datef_impl_multi", models.DateField()),
                ("ecr_no_multi", models.CharField(max_length=200)),
                ("root_sts_dept_to", models.CharField(max_length=250)),
                ("root_from_date", models.DateField()),
                ("root_route_date", models.DateField()),
                ("rc_sts", models.IntegerField()),
                ("route_value", models.IntegerField()),
                ("root_time", models.CharField(max_length=100)),
                ("hod_sts", models.CharField(max_length=15)),
                ("remarks", models.TextField()),
                ("rework_time", models.CharField(max_length=100)),
                ("reason_delay", models.TextField()),
                ("mod_det", models.CharField(max_length=200)),
                ("db_type", models.IntegerField()),
                ("type_ref", models.IntegerField()),
                ("type", models.IntegerField()),
                ("master_slno", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "service_multiple_root",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceReport",
            fields=[
                (
                    "reportno",
                    models.PositiveBigIntegerField(primary_key=True, serialize=False),
                ),
                (
                    "detailsreceivedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("reportedby", models.CharField(blank=True, max_length=40, null=True)),
                ("reporteddate", models.DateField(blank=True, null=True)),
                ("actualdate", models.DateField(blank=True, null=True)),
                ("report_completed_date", models.DateField()),
                ("actual_time", models.TimeField()),
                (
                    "typeofservice",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("startdate", models.DateField(blank=True, null=True)),
                ("mfddate", models.DateField()),
                ("start_time", models.TimeField()),
                ("completeddate", models.DateField(blank=True, null=True)),
                ("complited_time", models.TimeField()),
                ("zone", models.CharField(blank=True, max_length=40, null=True)),
                ("depot", models.CharField(blank=True, max_length=40, null=True)),
                ("coach", models.CharField(blank=True, max_length=40, null=True)),
                ("shed", models.CharField(blank=True, max_length=40, null=True)),
                ("locono", models.CharField(blank=True, max_length=40, null=True)),
                ("locotype", models.CharField(blank=True, max_length=40, null=True)),
                ("factory", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "engineercode",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("mcode", models.CharField(blank=True, max_length=20, null=True)),
                ("ecode", models.CharField(max_length=20)),
                (
                    "problemdesc",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("symptoms", models.CharField(blank=True, max_length=2000, null=True)),
                (
                    "reworkdone",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "failurecategory",
                    models.CharField(blank=True, max_length=240, null=True),
                ),
                (
                    "failuredetails",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "serviceempcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("checkedby", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "authorizedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("enteredby", models.CharField(blank=True, max_length=40, null=True)),
                ("rework_report", models.IntegerField()),
                ("dept_to", models.CharField(blank=True, max_length=180, null=True)),
                ("project", models.CharField(blank=True, max_length=30, null=True)),
                ("unittype", models.CharField(blank=True, max_length=150, null=True)),
                ("unitno", models.CharField(blank=True, max_length=20, null=True)),
                ("finalsave", models.CharField(max_length=150)),
                ("srvchod_vrjct", models.CharField(max_length=50)),
                ("to_dept_hod", models.IntegerField()),
                ("altd_user", models.IntegerField()),
                ("from_dept_user_report_taken", models.IntegerField()),
                ("createdby", models.BigIntegerField()),
                ("flre_reported_time", models.TimeField()),
                ("datef_cmsn", models.DateField()),
                ("version", models.CharField(max_length=50)),
                ("rplcd_unitslno", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("dump", models.IntegerField()),
                ("aglcode", models.IntegerField()),
                ("agl_sts", models.CharField(max_length=30)),
                ("agl_timestamp", models.CharField(max_length=30)),
                ("disp_act", models.CharField(max_length=1000)),
                ("days", models.IntegerField()),
                ("hours", models.IntegerField()),
                ("mins", models.IntegerField()),
                ("ser_days", models.IntegerField()),
                ("ser_hours", models.IntegerField()),
                ("ser_mins", models.IntegerField()),
                ("ser_time_update_sts", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("loco_avlbl_sts", models.CharField(max_length=150)),
                ("rack_no", models.CharField(max_length=15)),
                ("attend_at_fact", models.CharField(max_length=1)),
                ("report_ntry_date", models.DateField()),
                ("failure_reported_date", models.DateField()),
                ("failure_reported_time", models.TimeField()),
                ("handed_over_date", models.DateField()),
                ("rd_analysis", models.CharField(max_length=1000)),
                ("ecr_no", models.CharField(max_length=50)),
                ("pr_sup_eng_comm", models.CharField(max_length=1000)),
                ("attachment", models.CharField(max_length=150)),
                ("failure_unit_comments", models.CharField(max_length=1000)),
                ("failure_unit_analysis", models.CharField(max_length=500)),
                ("failur_unit_location", models.CharField(max_length=50)),
                ("repaly_mail_date", models.DateField()),
                ("ffa_by", models.IntegerField()),
                ("mat_rev_date", models.DateField()),
                ("mat_sent_date", models.DateField()),
                ("mat_loccode", models.CharField(max_length=30)),
                ("mat_dept", models.IntegerField()),
                ("mat_problemcategory", models.CharField(max_length=500)),
                ("knowledge_appli", models.CharField(max_length=200)),
                ("consult_asso", models.IntegerField()),
                ("noproblem_zone", models.CharField(max_length=40)),
                ("no_prob_shed", models.CharField(max_length=40)),
                ("no_prob_loco", models.CharField(max_length=40)),
                ("fitted_date", models.DateField()),
                ("remarks", models.CharField(max_length=3000)),
                ("status", models.IntegerField()),
                ("to_rd_date", models.DateField()),
                ("capa_eff", models.TextField(blank=True, null=True)),
                ("service_ext_no", models.IntegerField()),
                ("review_corr", models.TextField(blank=True, null=True)),
                ("review_sts", models.IntegerField()),
                ("ntry_date_ext", models.CharField(max_length=50)),
                ("reviewdate", models.CharField(max_length=50)),
                ("entry_ext_int", models.CharField(max_length=50)),
                ("third_type", models.IntegerField()),
                ("close_sts", models.IntegerField()),
                ("num_per", models.IntegerField()),
                ("serv_engg_time_mm", models.CharField(max_length=100)),
                ("new_version_date", models.DateField()),
                ("attended", models.CharField(max_length=150)),
                ("ffasr_status", models.IntegerField()),
                ("ffasr_cl_comments", models.CharField(max_length=300)),
                ("frb_coments", models.CharField(max_length=250)),
                ("comined_reports", models.CharField(max_length=150)),
                ("frbupdate_date", models.CharField(max_length=15)),
                (
                    "ffasr_cls_date",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("ffasr_cl_empcode", models.IntegerField(blank=True, null=True)),
                ("close_date", models.DateField()),
                ("prereview", models.IntegerField()),
                ("screen_sts", models.IntegerField()),
            ],
            options={
                "db_table": "service_report",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceReport1",
            fields=[
                (
                    "reportno",
                    models.PositiveBigIntegerField(primary_key=True, serialize=False),
                ),
                (
                    "detailsreceivedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("reportedby", models.CharField(blank=True, max_length=40, null=True)),
                ("reporteddate", models.DateField(blank=True, null=True)),
                ("actualdate", models.DateField(blank=True, null=True)),
                ("report_completed_date", models.DateField()),
                ("actual_time", models.TimeField()),
                (
                    "typeofservice",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("startdate", models.DateField(blank=True, null=True)),
                ("mfddate", models.DateField()),
                ("start_time", models.TimeField()),
                ("completeddate", models.DateField(blank=True, null=True)),
                ("complited_time", models.TimeField()),
                ("zone", models.CharField(blank=True, max_length=40, null=True)),
                ("depot", models.CharField(blank=True, max_length=40, null=True)),
                ("coach", models.CharField(blank=True, max_length=40, null=True)),
                ("shed", models.CharField(blank=True, max_length=40, null=True)),
                ("locono", models.CharField(blank=True, max_length=40, null=True)),
                ("locotype", models.CharField(blank=True, max_length=40, null=True)),
                ("factory", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "engineercode",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("mcode", models.CharField(blank=True, max_length=20, null=True)),
                ("ecode", models.CharField(max_length=20)),
                (
                    "problemdesc",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("symptoms", models.CharField(blank=True, max_length=2000, null=True)),
                (
                    "reworkdone",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "failurecategory",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                (
                    "failuredetails",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "serviceempcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("checkedby", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "authorizedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("enteredby", models.CharField(blank=True, max_length=40, null=True)),
                ("rework_report", models.IntegerField()),
                ("dept_to", models.CharField(blank=True, max_length=8, null=True)),
                ("project", models.CharField(blank=True, max_length=30, null=True)),
                ("unittype", models.CharField(blank=True, max_length=10, null=True)),
                ("unitno", models.CharField(blank=True, max_length=20, null=True)),
                ("finalsave", models.CharField(max_length=5)),
                ("srvchod_vrjct", models.CharField(max_length=50)),
                ("to_dept_hod", models.IntegerField()),
                ("altd_user", models.IntegerField()),
                ("from_dept_user_report_taken", models.IntegerField()),
                ("createdby", models.BigIntegerField()),
                ("flre_reported_time", models.TimeField()),
                ("datef_cmsn", models.DateField()),
                ("version", models.CharField(max_length=50)),
                ("rplcd_unitslno", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("dump", models.IntegerField()),
                ("aglcode", models.IntegerField()),
                ("agl_sts", models.CharField(max_length=30)),
                ("agl_timestamp", models.CharField(max_length=30)),
                ("disp_act", models.CharField(max_length=1000)),
                ("days", models.IntegerField()),
                ("hours", models.IntegerField()),
                ("mins", models.IntegerField()),
                ("ser_days", models.IntegerField()),
                ("ser_hours", models.IntegerField()),
                ("ser_mins", models.IntegerField()),
                ("ser_time_update_sts", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("loco_avlbl_sts", models.CharField(max_length=1)),
                ("rack_no", models.CharField(max_length=15)),
                ("attend_at_fact", models.CharField(max_length=1)),
                ("report_ntry_date", models.DateField()),
                ("failure_reported_date", models.DateField()),
                ("failure_reported_time", models.TimeField()),
                ("handed_over_date", models.DateField()),
                ("rd_analysis", models.CharField(max_length=1000)),
                ("ecr_no", models.CharField(max_length=50)),
                ("pr_sup_eng_comm", models.CharField(max_length=1000)),
                ("attachment", models.CharField(max_length=150)),
                ("failure_unit_comments", models.CharField(max_length=1000)),
                ("failure_unit_analysis", models.CharField(max_length=500)),
                ("failur_unit_location", models.CharField(max_length=50)),
                ("repaly_mail_date", models.DateField()),
                ("mat_rev_date", models.DateField()),
                ("mat_sent_date", models.DateField()),
                ("mat_loccode", models.CharField(max_length=30)),
                ("mat_dept", models.IntegerField()),
                ("mat_problemcategory", models.CharField(max_length=500)),
                ("knowledge_appli", models.CharField(max_length=200)),
                ("consult_asso", models.IntegerField()),
                ("noproblem_zone", models.CharField(max_length=40)),
                ("no_prob_shed", models.CharField(max_length=40)),
                ("no_prob_loco", models.CharField(max_length=40)),
                ("fitted_date", models.DateField()),
                ("remarks", models.CharField(max_length=3000)),
                ("status", models.IntegerField()),
                ("to_rd_date", models.DateField()),
                ("capa_eff", models.TextField()),
                ("service_ext_no", models.IntegerField()),
                ("review_corr", models.TextField()),
                ("review_sts", models.IntegerField()),
                ("ntry_date_ext", models.CharField(max_length=50)),
                ("reviewdate", models.CharField(max_length=50)),
                ("entry_ext_int", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "service_report1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceReport1810",
            fields=[
                (
                    "reportno",
                    models.PositiveBigIntegerField(primary_key=True, serialize=False),
                ),
                (
                    "detailsreceivedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("reportedby", models.CharField(blank=True, max_length=40, null=True)),
                ("reporteddate", models.DateField(blank=True, null=True)),
                ("actualdate", models.DateField(blank=True, null=True)),
                ("report_completed_date", models.DateField()),
                ("actual_time", models.TimeField()),
                (
                    "typeofservice",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("startdate", models.DateField(blank=True, null=True)),
                ("mfddate", models.DateField()),
                ("start_time", models.TimeField()),
                ("completeddate", models.DateField(blank=True, null=True)),
                ("complited_time", models.TimeField()),
                ("zone", models.CharField(blank=True, max_length=40, null=True)),
                ("depot", models.CharField(blank=True, max_length=40, null=True)),
                ("coach", models.CharField(blank=True, max_length=40, null=True)),
                ("shed", models.CharField(blank=True, max_length=40, null=True)),
                ("locono", models.CharField(blank=True, max_length=40, null=True)),
                ("locotype", models.CharField(blank=True, max_length=40, null=True)),
                ("factory", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "engineercode",
                    models.CharField(blank=True, max_length=30, null=True),
                ),
                ("mcode", models.CharField(blank=True, max_length=20, null=True)),
                ("ecode", models.CharField(max_length=20)),
                (
                    "problemdesc",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("symptoms", models.CharField(blank=True, max_length=2000, null=True)),
                (
                    "reworkdone",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                (
                    "failurecategory",
                    models.CharField(blank=True, max_length=240, null=True),
                ),
                (
                    "failuredetails",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "serviceempcode",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("checkedby", models.CharField(blank=True, max_length=40, null=True)),
                (
                    "authorizedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("enteredby", models.CharField(blank=True, max_length=40, null=True)),
                ("rework_report", models.IntegerField()),
                ("dept_to", models.CharField(blank=True, max_length=180, null=True)),
                ("project", models.CharField(blank=True, max_length=30, null=True)),
                ("unittype", models.CharField(blank=True, max_length=150, null=True)),
                ("unitno", models.CharField(blank=True, max_length=20, null=True)),
                ("finalsave", models.CharField(max_length=150)),
                ("srvchod_vrjct", models.CharField(max_length=50)),
                ("to_dept_hod", models.IntegerField()),
                ("altd_user", models.IntegerField()),
                ("from_dept_user_report_taken", models.IntegerField()),
                ("createdby", models.BigIntegerField()),
                ("flre_reported_time", models.TimeField()),
                ("datef_cmsn", models.DateField()),
                ("version", models.CharField(max_length=50)),
                ("rplcd_unitslno", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("dump", models.IntegerField()),
                ("aglcode", models.IntegerField()),
                ("agl_sts", models.CharField(max_length=30)),
                ("agl_timestamp", models.CharField(max_length=30)),
                ("disp_act", models.CharField(max_length=1000)),
                ("days", models.IntegerField()),
                ("hours", models.IntegerField()),
                ("mins", models.IntegerField()),
                ("ser_days", models.IntegerField()),
                ("ser_hours", models.IntegerField()),
                ("ser_mins", models.IntegerField()),
                ("ser_time_update_sts", models.IntegerField()),
                ("uniq_slno", models.IntegerField()),
                ("loco_avlbl_sts", models.CharField(max_length=150)),
                ("rack_no", models.CharField(max_length=15)),
                ("attend_at_fact", models.CharField(max_length=1)),
                ("report_ntry_date", models.DateField()),
                ("failure_reported_date", models.DateField()),
                ("failure_reported_time", models.TimeField()),
                ("handed_over_date", models.DateField()),
                ("rd_analysis", models.CharField(max_length=1000)),
                ("ecr_no", models.CharField(max_length=50)),
                ("pr_sup_eng_comm", models.CharField(max_length=1000)),
                ("attachment", models.CharField(max_length=150)),
                ("failure_unit_comments", models.CharField(max_length=1000)),
                ("failure_unit_analysis", models.CharField(max_length=500)),
                ("failur_unit_location", models.CharField(max_length=50)),
                ("repaly_mail_date", models.DateField()),
                ("ffa_by", models.IntegerField()),
                ("mat_rev_date", models.DateField()),
                ("mat_sent_date", models.DateField()),
                ("mat_loccode", models.CharField(max_length=30)),
                ("mat_dept", models.IntegerField()),
                ("mat_problemcategory", models.CharField(max_length=500)),
                ("knowledge_appli", models.CharField(max_length=200)),
                ("consult_asso", models.IntegerField()),
                ("noproblem_zone", models.CharField(max_length=40)),
                ("no_prob_shed", models.CharField(max_length=40)),
                ("no_prob_loco", models.CharField(max_length=40)),
                ("fitted_date", models.DateField()),
                ("remarks", models.CharField(max_length=3000)),
                ("status", models.IntegerField()),
                ("to_rd_date", models.DateField()),
                ("capa_eff", models.TextField(blank=True, null=True)),
                ("service_ext_no", models.IntegerField()),
                ("no_ser_eng", models.IntegerField()),
                ("main_type", models.CharField(blank=True, max_length=20, null=True)),
                ("ini_rev", models.CharField(blank=True, max_length=20, null=True)),
                ("review_corr", models.TextField(blank=True, null=True)),
                ("review_sts", models.IntegerField()),
                ("ntry_date_ext", models.CharField(max_length=50)),
                ("reviewdate", models.CharField(max_length=50)),
                ("entry_ext_int", models.CharField(max_length=50)),
                ("third_type", models.IntegerField()),
                ("close_sts", models.IntegerField()),
                ("num_per", models.IntegerField()),
                ("serv_engg_time_mm", models.CharField(max_length=100)),
                ("new_version_date", models.DateField()),
                ("attended", models.CharField(max_length=150)),
                ("ffasr_status", models.IntegerField()),
                ("ffasr_statusdate", models.DateTimeField()),
                ("ffasr_cl_comments", models.CharField(max_length=300)),
                ("frb_coments", models.CharField(max_length=250)),
                ("comined_reports", models.CharField(max_length=500)),
                ("frbupdate_date", models.CharField(max_length=15)),
                (
                    "ffasr_cls_date",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("ffasr_cl_empcode", models.IntegerField(blank=True, null=True)),
                ("close_date", models.DateField()),
                ("prereview", models.IntegerField()),
                ("screen_sts", models.IntegerField()),
                ("prj_priority", models.IntegerField()),
                ("root_cause_cat", models.IntegerField()),
                ("assining_status", models.IntegerField()),
                ("rootcause_updatedate", models.DateField()),
            ],
            options={
                "db_table": "service_report-18-10",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceReportAttachments",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("report_no", models.IntegerField(unique=True)),
                (
                    "file_name",
                    models.CharField(blank=True, max_length=50, null=True, unique=True),
                ),
                ("extension", models.CharField(blank=True, max_length=20, null=True)),
                ("file_size", models.CharField(blank=True, max_length=50, null=True)),
                ("seq_no", models.IntegerField()),
            ],
            options={
                "db_table": "service_report_attachments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceReportExtfields",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reportno", models.IntegerField()),
                ("orginc", models.IntegerField()),
                ("stage_fail", models.IntegerField()),
                (
                    "engineercode_multiple",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("mainttype", models.IntegerField()),
                (
                    "loc_non_avf_rom",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "loc_non_avf_to",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("levelofinci", models.IntegerField()),
                ("item_repl", models.CharField(blank=True, max_length=1000, null=True)),
                ("probelm_desc_cust", models.TextField(blank=True, null=True)),
                ("atta", models.CharField(blank=True, max_length=100, null=True)),
                ("incirel", models.IntegerField()),
                ("inccharge", models.CharField(blank=True, max_length=50, null=True)),
                ("fstatus", models.CharField(blank=True, max_length=50, null=True)),
                ("locavail", models.CharField(blank=True, max_length=100, null=True)),
                ("eqavail", models.CharField(blank=True, max_length=100, null=True)),
                ("eqproject", models.CharField(blank=True, max_length=100, null=True)),
                ("buavail", models.CharField(blank=True, max_length=100, null=True)),
                ("rakavail", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "rakavail_fromdate",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "rakavail_todate",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("mttr", models.CharField(blank=True, max_length=100, null=True)),
                ("eqavb", models.CharField(blank=True, max_length=100, null=True)),
                ("buavb", models.CharField(blank=True, max_length=100, null=True)),
                ("ralavb", models.CharField(blank=True, max_length=100, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "service_report_extfields",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceScrapdata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reportno", models.IntegerField()),
                (
                    "disp_matcode",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("disp_qty", models.CharField(blank=True, max_length=50, null=True)),
                ("scrp_wrnty", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "service_scrapdata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceScrapNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("reportno", models.IntegerField()),
                ("scrapmat", models.CharField(blank=True, max_length=11, null=True)),
                ("scrapslno", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "scrapreason",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "service_scrap_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceSubassemblies",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                (
                    "servicereportno",
                    models.PositiveBigIntegerField(blank=True, null=True),
                ),
                ("fitemdesc", models.CharField(blank=True, max_length=100, null=True)),
                ("fitemsno", models.CharField(blank=True, max_length=45, null=True)),
                ("fitemmcode", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "replaceditemsno",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("dtf_mnf", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "replaced_item_tested_date",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("ref_sa_code", models.TextField(blank=True, null=True)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("repeat", models.IntegerField()),
                ("service_status", models.IntegerField()),
                ("third_type", models.IntegerField()),
                ("broght_type", models.IntegerField()),
                (
                    "failedamcstatus",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("delete1", models.IntegerField()),
                ("comments", models.CharField(blank=True, max_length=200, null=True)),
                ("production_rec_date", models.CharField(max_length=11)),
            ],
            options={
                "db_table": "service_subassemblies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ServiceTypeMstr",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("catname", models.CharField(blank=True, max_length=1000, null=True)),
                (
                    "cat_type_master",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "service_type_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Sess",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user", models.CharField(max_length=50)),
                ("terminal", models.CharField(max_length=50)),
                ("time", models.CharField(max_length=50)),
                ("sess", models.CharField(max_length=50)),
                ("date", models.DateField()),
                ("ip", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "sess",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Sgtn2BSentMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dept_desc", models.CharField(max_length=30)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sgtn_2b_sent_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SgtnB4AftrImage",
            fields=[
                ("slno", models.IntegerField()),
                ("ext", models.CharField(blank=True, max_length=100, null=True)),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("image", models.TextField(blank=True, null=True)),
                ("size", models.CharField(blank=True, max_length=10, null=True)),
                ("sts", models.CharField(max_length=2)),
                ("seq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sgtn_b4_aftr_image",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SgtnBlobMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sgtn_no", models.CharField(max_length=20)),
                ("ext", models.CharField(max_length=50)),
                ("title", models.CharField(max_length=100)),
                ("image", models.CharField(max_length=150)),
                ("size", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("atchmnt_sts", models.IntegerField()),
                ("sgtn_slno", models.IntegerField()),
                ("file_name", models.CharField(max_length=50)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sgtn_blob_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SgtnEdprdNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sgtn_no", models.CharField(max_length=20)),
                ("empcode", models.IntegerField()),
                ("dtls", models.CharField(max_length=500)),
                ("amt", models.FloatField()),
                ("pd_date", models.DateField()),
                ("entered_by", models.IntegerField()),
                ("edprd_sts", models.IntegerField()),
                ("edprd", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sgtn_edprd_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SgtnGradeMaster",
            fields=[
                ("sgtn_grd_no", models.AutoField(primary_key=True, serialize=False)),
                ("sgtn_grd_name", models.CharField(max_length=50)),
                ("amt", models.FloatField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sgtn_grade_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SgtnImprmntMaster",
            fields=[
                ("sgtn_no", models.AutoField(primary_key=True, serialize=False)),
                ("sgtn_type", models.CharField(max_length=30)),
                ("sgtn_sub_type", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sgtn_imprmnt_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SgtnNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("sgtn_no", models.CharField(max_length=20)),
                ("empcode", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("loc", models.CharField(max_length=20)),
                ("prjct", models.CharField(max_length=50)),
                ("any_prjct", models.CharField(max_length=100)),
                ("sgtn", models.TextField()),
                ("type_imprmnt", models.CharField(max_length=50)),
                ("any_imprmnt", models.CharField(max_length=100)),
                ("usr_ntry_date", models.DateField()),
                ("fsave", models.CharField(max_length=1)),
                ("vrjct", models.CharField(max_length=20)),
                ("rej_rsn", models.CharField(max_length=1000)),
                ("hod", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("src_rcvd_date", models.DateField()),
                ("whm2snd", models.IntegerField()),
                ("src_cmnts", models.CharField(max_length=1000)),
                ("dnd_acc_rej", models.IntegerField()),
                ("dnd_cmnts", models.CharField(max_length=1500)),
                ("rsp_emp", models.IntegerField()),
                ("ynt_addr", models.CharField(max_length=500)),
                ("src_grd", models.IntegerField()),
                ("src_rjct_rsn", models.CharField(max_length=300)),
                ("src_fsblty", models.CharField(max_length=1000)),
                ("src_qnt_bnft", models.CharField(max_length=1000)),
                ("src_qnt_bnft_othr", models.CharField(max_length=300)),
                ("src_impl_rspblty", models.CharField(max_length=250)),
                ("src_trgt_date", models.DateField()),
                ("src_impl_sts", models.CharField(max_length=10)),
                ("src_impl_date", models.DateField()),
                ("src_rcvd_by", models.IntegerField()),
                ("edprd", models.IntegerField()),
                ("fnl_rprt", models.IntegerField()),
                ("pd_sts", models.IntegerField()),
                ("to_b_sent", models.CharField(max_length=20)),
                ("to_b_sent_cmnts", models.CharField(max_length=500)),
                (
                    "number_2_b_snt_acc_rej",
                    models.IntegerField(db_column="2_b_snt_acc_rej"),
                ),
                (
                    "number_2_b_snt_acc_rej_cmnts",
                    models.CharField(db_column="2_b_snt_acc_rej_cmnts", max_length=500),
                ),
                ("bnfts", models.CharField(max_length=500)),
                ("clr", models.CharField(max_length=20)),
                ("paid", models.IntegerField()),
                ("paid_date", models.DateField()),
                ("prcs_resp", models.IntegerField()),
                ("paid_sts", models.CharField(max_length=2)),
                (
                    "number_2_b_snt_frwrd_date",
                    models.DateField(db_column="2_b_snt_frwrd_date"),
                ),
                ("mvd_sts", models.IntegerField()),
                ("crtfct", models.IntegerField()),
                ("crtfct_date", models.DateField()),
                ("kss_sts", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("delete_details", models.CharField(max_length=50)),
                ("cmpltd_date", models.DateField()),
                (
                    "number_2_b_snt_accrej_date",
                    models.DateField(db_column="2_b_snt_accrej_date"),
                ),
                ("sugg_type", models.IntegerField()),
                ("src_sts", models.CharField(max_length=1)),
                (
                    "number_2_b_impltd",
                    models.CharField(db_column="2_b_impltd", max_length=50),
                ),
                ("priority", models.IntegerField()),
                ("sugg_cert_event_date", models.DateField()),
                ("edp_target_date", models.DateField()),
                ("sgtn_status", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sgtn_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SgtnPrizes",
            fields=[
                ("empcode", models.IntegerField()),
                ("dept", models.IntegerField()),
                ("kaizens", models.IntegerField()),
                ("ntry_datefrom", models.DateField(db_column="ntry_dateFrom")),
                ("ntry_dateto", models.DateField(db_column="ntry_dateTo")),
                ("auto_inc", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "sgtn_prizes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SgtnProcRespMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "sgtn_proc_resp_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SgtnQntfctnMaster",
            fields=[
                ("sgtn_qntfcn_no", models.AutoField(primary_key=True, serialize=False)),
                ("sgtn_qntfcn_name", models.CharField(max_length=100)),
                ("sgtn_qntfcn_nick_name", models.CharField(max_length=1)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sgtn_qntfctn_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SgtnStatusMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("status", models.CharField(max_length=20)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sgtn_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SgtnTypeMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sgtn_type", models.CharField(max_length=1)),
                ("sgtn_desc", models.CharField(max_length=30)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "sgtn_type_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Sheet1",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField(blank=True, null=True)),
                ("project", models.CharField(blank=True, max_length=11, null=True)),
                ("createdon", models.CharField(blank=True, max_length=8, null=True)),
                ("orderno", models.IntegerField(blank=True, null=True)),
                ("matcode", models.BigIntegerField(blank=True, null=True)),
                ("description", models.CharField(blank=True, max_length=40, null=True)),
                ("qty", models.IntegerField(blank=True, null=True)),
                ("batch", models.CharField(blank=True, max_length=10, null=True)),
                ("remarks", models.CharField(blank=True, max_length=12, null=True)),
                ("timestamp", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
            ],
            options={
                "db_table": "Sheet1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SkillFieldMaster",
            fields=[
                ("field_id", models.AutoField(primary_key=True, serialize=False)),
                ("field_value", models.CharField(blank=True, max_length=50, null=True)),
                ("seq", models.IntegerField(blank=True, null=True)),
                ("input", models.CharField(blank=True, max_length=600, null=True)),
                ("createdby", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateField()),
                ("cert_id", models.IntegerField()),
                ("skill", models.IntegerField()),
            ],
            options={
                "db_table": "skill_field_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SkillFieldMasterv1",
            fields=[
                ("field_id", models.AutoField(primary_key=True, serialize=False)),
                ("field_value", models.CharField(blank=True, max_length=50, null=True)),
                ("seq", models.IntegerField(blank=True, null=True)),
                ("createdby", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateField()),
                ("cert_id", models.IntegerField()),
                ("skill", models.IntegerField()),
            ],
            options={
                "db_table": "skill_field_masterV1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SkillFields",
            fields=[
                ("skill_id", models.IntegerField(primary_key=True, serialize=False)),
                ("field_name", models.CharField(max_length=50)),
                ("createdby", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateField()),
            ],
            options={
                "db_table": "skill_fields",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StatusMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("st_code", models.CharField(max_length=10)),
                ("st_desc", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StoresMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("matnr", models.CharField(max_length=11)),
                ("desc", models.CharField(max_length=50)),
                ("qty", models.IntegerField()),
                ("slno", models.IntegerField()),
                ("color_code", models.CharField(max_length=20)),
                ("size", models.IntegerField()),
                ("bold", models.CharField(max_length=1)),
                ("italic", models.CharField(max_length=1)),
                ("under_line", models.CharField(max_length=1)),
                ("align", models.CharField(max_length=1)),
                ("mat_color", models.CharField(max_length=10)),
                ("mat_size", models.IntegerField()),
                ("mat_bold", models.CharField(max_length=1)),
                ("mat_italic", models.CharField(max_length=1)),
                ("mat_unln", models.CharField(max_length=1)),
                ("mat_align", models.CharField(max_length=1)),
                ("desc_color", models.CharField(max_length=10)),
                ("desc_size", models.IntegerField()),
                ("desc_bold", models.CharField(max_length=1)),
                ("desc_italic", models.CharField(max_length=1)),
                ("desc_unln", models.CharField(max_length=1)),
                ("desc_align", models.CharField(max_length=1)),
                ("qty_color", models.CharField(max_length=10)),
                ("qty_size", models.IntegerField()),
                ("qty_bold", models.CharField(max_length=1)),
                ("qty_italic", models.CharField(max_length=1)),
                ("qty_unln", models.CharField(max_length=1)),
                ("qty_align", models.CharField(max_length=1)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "stores_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="StoresTemp",
            fields=[
                ("matnr", models.CharField(max_length=11)),
                ("desc", models.CharField(max_length=60)),
                ("qty", models.IntegerField()),
                ("slno", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "stores_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Subassemblies",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("reworkreportno", models.BigIntegerField()),
                ("matcode_multi", models.CharField(max_length=250)),
                ("from_loc", models.CharField(max_length=100)),
                ("to_loc", models.CharField(max_length=100)),
                ("dept_from", models.IntegerField()),
                ("sa_dept", models.IntegerField()),
                ("fitemdesc", models.CharField(blank=True, max_length=100, null=True)),
                ("version", models.CharField(blank=True, max_length=150, null=True)),
                ("fitemmcode", models.CharField(blank=True, max_length=20, null=True)),
                ("ritemsno", models.CharField(blank=True, max_length=20, null=True)),
                ("fitemsno", models.CharField(blank=True, max_length=1000, null=True)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("rd_mat", models.CharField(max_length=20)),
                ("sno_wise", models.IntegerField()),
                ("ass_rej_qty", models.IntegerField()),
                ("sa_qty", models.IntegerField()),
                ("replaced_item_tested_date", models.DateField()),
                ("eq_test_by_multi", models.IntegerField()),
                ("eq_test_date_multi", models.DateField()),
                ("sareworkdetails_multi", models.TextField(blank=True, null=True)),
                ("ass_dept_to", models.IntegerField()),
                ("analysis_levels_sa", models.IntegerField()),
                ("route_from_date", models.DateField()),
                ("route_date", models.DateField()),
                ("route_value", models.IntegerField()),
                ("route_value_sub", models.IntegerField()),
                ("hod_sts", models.CharField(max_length=15)),
                ("sa_time", models.CharField(max_length=100)),
                ("fapcbmfg", models.CharField(max_length=100)),
                ("pcb_test_date", models.CharField(max_length=100)),
                ("rework_time", models.CharField(max_length=100)),
                ("reason_delay", models.TextField(blank=True, null=True)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("type", models.IntegerField()),
                ("db_type", models.IntegerField()),
                ("type_ref", models.IntegerField()),
                ("service_report_no", models.IntegerField()),
                ("other_dept_pend", models.IntegerField()),
                ("masterslno", models.IntegerField()),
                ("analysis_comp", models.IntegerField()),
                ("master_slno", models.CharField(max_length=100)),
                ("attachment", models.CharField(max_length=1000)),
                ("delete1", models.IntegerField()),
                ("any_other_rework", models.IntegerField()),
                ("other_reqork_no", models.IntegerField()),
                ("conclusion", models.CharField(max_length=200)),
                ("card_disposal", models.IntegerField()),
                ("material_slno", models.IntegerField()),
                ("matcode_qty", models.IntegerField()),
            ],
            options={
                "db_table": "subassemblies",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SubAssyNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sinofrom", models.CharField(blank=True, max_length=150, null=True)),
                ("sito", models.CharField(blank=True, max_length=150, null=True)),
                ("modification_text", models.DateField()),
                ("entry_text", models.CharField(blank=True, max_length=150, null=True)),
                ("reference", models.CharField(blank=True, max_length=150, null=True)),
                ("ecr", models.CharField(blank=True, max_length=150, null=True)),
                ("cpa", models.CharField(blank=True, max_length=150, null=True)),
                ("mail", models.CharField(blank=True, max_length=150, null=True)),
                ("project", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "sub_project",
                    models.CharField(
                        blank=True, db_column="sub_Project", max_length=150, null=True
                    ),
                ),
                (
                    "sub_assy_code",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("short_text", models.CharField(blank=True, max_length=150, null=True)),
                ("mdetails", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "sticker_details",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "scope_change",
                    models.CharField(
                        blank=True, db_column="scope_Change", max_length=150, null=True
                    ),
                ),
                ("reason", models.CharField(blank=True, max_length=150, null=True)),
                ("attachment", models.CharField(blank=True, max_length=150, null=True)),
                ("reports", models.CharField(blank=True, max_length=150, null=True)),
                ("moved_internet", models.IntegerField()),
            ],
            options={
                "db_table": "sub_assy_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SubcatMaster",
            fields=[
                ("cat_code", models.IntegerField()),
                ("scat_code", models.AutoField(primary_key=True, serialize=False)),
                ("s_desc", models.CharField(max_length=100)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "subcat_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SubTr",
            fields=[
                ("tag_no", models.IntegerField()),
                ("pr_desc", models.TextField(blank=True, null=True)),
                ("date", models.DateField()),
                ("remarks", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.IntegerField()),
                ("re_assigned", models.IntegerField()),
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("hod_sts", models.IntegerField()),
                ("usr_cmnts", models.CharField(blank=True, max_length=1000, null=True)),
                ("usr_dt", models.DateField()),
                ("usr_sts", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("report_time", models.TimeField()),
                ("mail2rqstnr", models.IntegerField()),
                ("auto_mail_bg_date", models.DateField()),
                ("auto_mail_bg_times", models.IntegerField()),
                (
                    "auto_mail_bg_history",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("draft_sts", models.IntegerField()),
                ("pr_cmpltd_date", models.DateField()),
                ("pr_cmpltd_date_changed", models.DateField()),
                ("kaizen", models.TextField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "sub_tr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SubTr1",
            fields=[
                ("tag_no", models.IntegerField()),
                ("pr_desc", models.CharField(blank=True, max_length=1000, null=True)),
                ("date", models.DateField()),
                ("remarks", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.IntegerField()),
                ("re_assigned", models.IntegerField()),
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("hod_sts", models.IntegerField()),
                ("usr_cmnts", models.CharField(blank=True, max_length=1000, null=True)),
                ("usr_dt", models.DateField()),
                ("usr_sts", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("report_time", models.TimeField()),
                ("mail2rqstnr", models.IntegerField()),
                ("auto_mail_bg_date", models.DateField()),
                ("auto_mail_bg_times", models.IntegerField()),
                (
                    "auto_mail_bg_history",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("draft_sts", models.IntegerField()),
                ("pr_cmpltd_date", models.DateField()),
                ("pr_cmpltd_date_changed", models.DateField()),
                ("kaizen", models.TextField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "sub_tr1",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SubTrOld",
            fields=[
                ("tag_no", models.IntegerField()),
                ("pr_desc", models.CharField(blank=True, max_length=1000, null=True)),
                ("date", models.DateField()),
                ("remarks", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.IntegerField()),
                ("re_assigned", models.IntegerField()),
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("hod_sts", models.IntegerField()),
                ("usr_cmnts", models.CharField(blank=True, max_length=1000, null=True)),
                ("usr_dt", models.DateField()),
                ("usr_sts", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("report_time", models.TimeField()),
                ("mail2rqstnr", models.IntegerField()),
                ("auto_mail_bg_date", models.DateField()),
                ("auto_mail_bg_times", models.IntegerField()),
                (
                    "auto_mail_bg_history",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                ("draft_sts", models.IntegerField()),
                ("pr_cmpltd_date", models.DateField()),
                ("pr_cmpltd_date_changed", models.DateField()),
                ("kaizen", models.TextField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "sub_tr_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SuggFacNtry",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("category", models.CharField(max_length=11)),
                ("project", models.IntegerField()),
                ("curr_prob", models.CharField(max_length=200)),
                ("suggestion", models.CharField(max_length=200)),
                ("tangile", models.CharField(max_length=200)),
                ("intangile", models.CharField(max_length=200)),
                ("attachment", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("status", models.IntegerField()),
                ("lpo_status", models.IntegerField()),
                ("lpo_emp", models.IntegerField()),
                ("lpo_comm", models.CharField(max_length=100)),
                ("lpofile", models.CharField(max_length=100)),
                ("lpo_date", models.DateField()),
                ("edp_sts", models.IntegerField()),
                ("edprod", models.IntegerField()),
                ("edp_comm", models.CharField(max_length=200)),
                ("edp_date", models.DateField()),
                ("impl_comm", models.CharField(max_length=200)),
                ("impl_date", models.DateField()),
                ("complete", models.IntegerField()),
                ("rwd_amt", models.IntegerField()),
                ("process_attach", models.CharField(max_length=100)),
                ("impl_ntry", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "sugg_fac_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SuggFacStsMstr",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=30)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "sugg_fac_sts_mstr",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="SupplierMaster",
            fields=[
                (
                    "supplier_code",
                    models.CharField(max_length=8, primary_key=True, serialize=False),
                ),
                (
                    "supplier_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("city", models.CharField(blank=True, max_length=40, null=True)),
                ("createdby", models.CharField(blank=True, max_length=40, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "supplier_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TarqueMeterMaster",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("model", models.CharField(max_length=20)),
                ("slno", models.CharField(max_length=20)),
                ("desc_g", models.CharField(max_length=100)),
                ("mod_g", models.CharField(max_length=100)),
                ("code_g", models.CharField(max_length=100)),
                ("accu_g", models.CharField(max_length=100)),
                ("range_g", models.CharField(max_length=100)),
                ("cal_on_g", models.DateField()),
                ("cal_due_g", models.CharField(max_length=10)),
                ("cal_months_g", models.IntegerField()),
                ("desc_i", models.CharField(max_length=100)),
                ("mod_i", models.CharField(max_length=100)),
                ("code_i", models.CharField(max_length=100)),
                ("accu_i", models.CharField(max_length=100)),
                ("range_i", models.CharField(blank=True, max_length=100, null=True)),
                ("cal_valid_i", models.DateField()),
                ("trace_i", models.CharField(blank=True, max_length=100, null=True)),
                ("cert_no", models.CharField(blank=True, max_length=100, null=True)),
                ("date", models.DateField()),
                ("sdno", models.CharField(blank=True, max_length=100, null=True)),
                ("loc", models.CharField(blank=True, max_length=30, null=True)),
                ("instru_condi", models.CharField(max_length=100)),
                ("acc_limits", models.CharField(blank=True, max_length=100, null=True)),
                ("room_temp", models.IntegerField()),
                ("disp_act", models.CharField(blank=True, max_length=200, null=True)),
                ("ntry_date", models.DateField()),
                ("ntryby", models.IntegerField()),
                ("make", models.CharField(blank=True, max_length=150, null=True)),
                ("timestamp", models.DateTimeField()),
                ("calib_by", models.CharField(blank=True, max_length=6, null=True)),
                ("approved_by", models.CharField(blank=True, max_length=6, null=True)),
            ],
            options={
                "db_table": "tarque_meter_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TarqueMeterMasterNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("scale", models.IntegerField()),
                ("set", models.CharField(blank=True, max_length=20, null=True)),
                ("type", models.CharField(blank=True, max_length=10, null=True)),
                ("values", models.CharField(blank=True, max_length=150, null=True)),
                ("sigma", models.FloatField()),
                ("max_a", models.FloatField()),
                ("min_b", models.FloatField()),
                ("c", models.FloatField()),
                ("a_b", models.FloatField()),
                ("per", models.FloatField()),
                ("ntryby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tarque_meter_master_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TblEmployee",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
                ("address", models.TextField()),
                ("gender", models.CharField(max_length=10)),
                ("designation", models.CharField(max_length=100)),
                ("age", models.IntegerField()),
            ],
            options={
                "db_table": "tbl_employee",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TblEmployeeOld",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(blank=True, max_length=50, null=True)),
                ("gender", models.CharField(blank=True, max_length=11, null=True)),
                ("designation", models.CharField(blank=True, max_length=20, null=True)),
                ("age", models.CharField(blank=True, max_length=11, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "tbl_employee_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TcodeMaster",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("tcode", models.CharField(blank=True, max_length=50, null=True)),
                ("desc", models.CharField(blank=True, max_length=200, null=True)),
                ("createduser", models.CharField(blank=True, max_length=7, null=True)),
                ("createdby", models.IntegerField()),
                ("created_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField(blank=True, null=True)),
                ("delete_date", models.DateField()),
            ],
            options={
                "db_table": "tcode_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestDetails",
            fields=[
                (
                    "no",
                    models.AutoField(db_column="No", primary_key=True, serialize=False),
                ),
                (
                    "material_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("heading", models.CharField(blank=True, max_length=200, null=True)),
                ("subheading", models.CharField(blank=True, max_length=500, null=True)),
                ("test", models.CharField(blank=True, max_length=500, null=True)),
                ("acceptance", models.CharField(blank=True, max_length=500, null=True)),
                ("sf", models.CharField(max_length=20)),
                ("rev", models.CharField(max_length=5)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "test_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestdriveNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project", models.IntegerField()),
                ("doc_no", models.CharField(max_length=100)),
                ("description", models.TextField()),
                ("revision_no", models.IntegerField()),
                ("attachment", models.CharField(max_length=150)),
                ("date", models.DateField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "testdrive_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestEntry",
            fields=[
                ("report_id_main", models.IntegerField()),
                ("reportno", models.PositiveBigIntegerField(blank=True, null=True)),
                ("material_number", models.CharField(max_length=20)),
                ("model_number", models.CharField(max_length=100)),
                ("serial_number", models.CharField(max_length=100)),
                ("heading", models.CharField(blank=True, max_length=200, null=True)),
                ("subheading", models.CharField(blank=True, max_length=200, null=True)),
                ("test", models.CharField(max_length=500)),
                ("acceptance", models.CharField(max_length=500)),
                ("result", models.CharField(blank=True, max_length=50, null=True)),
                ("instid", models.CharField(max_length=30)),
                ("empname", models.CharField(blank=True, max_length=40, null=True)),
                ("testdate", models.DateField(blank=True, null=True)),
                (
                    "authorisedby",
                    models.CharField(blank=True, max_length=40, null=True),
                ),
                ("authoriseddate", models.DateField(blank=True, null=True)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
                ("dummy", models.AutoField(primary_key=True, serialize=False)),
                ("empcode_date", models.TextField()),
                ("reporttype", models.CharField(max_length=50)),
                ("report_type_inc", models.IntegerField()),
            ],
            options={
                "db_table": "test_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestingpdfMaster",
            fields=[
                ("type", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.CharField(max_length=1)),
                ("name", models.CharField(max_length=50)),
                ("unit_code", models.BigIntegerField()),
                ("sf_no", models.CharField(max_length=15)),
                ("sf_rev", models.IntegerField()),
                ("card_code", models.BigIntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "testingpdf_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestingpdfMaster080822",
            fields=[
                ("type", models.AutoField(primary_key=True, serialize=False)),
                ("category", models.CharField(max_length=1)),
                ("name", models.CharField(max_length=50)),
                ("unit_code", models.BigIntegerField()),
                ("sf_no", models.CharField(max_length=15)),
                ("sf_rev", models.IntegerField()),
                ("card_code", models.BigIntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "testingpdf_master_08_08_22",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Testingpdfs",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ref", models.IntegerField()),
                ("sfrev", models.IntegerField()),
                ("cardslno", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("prodno", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
                ("date", models.DateField()),
                ("m1", models.FloatField()),
                ("m2", models.FloatField()),
                ("m3", models.FloatField()),
                ("m4", models.FloatField()),
                ("m5", models.FloatField()),
                ("m6", models.FloatField()),
                ("m7", models.FloatField()),
                ("m8", models.FloatField()),
                ("m9", models.FloatField()),
                ("m10", models.FloatField()),
                ("m11", models.FloatField()),
                ("m12", models.FloatField()),
                ("m13", models.FloatField()),
                ("s429", models.CharField(max_length=20)),
                ("s10", models.CharField(max_length=20)),
                ("s11", models.CharField(max_length=20)),
                ("s12", models.CharField(max_length=20)),
                ("check12", models.CharField(max_length=10)),
                ("xfor1", models.FloatField()),
                ("xfor2", models.FloatField()),
                ("xfor3", models.FloatField()),
                ("xfor4", models.FloatField()),
                ("xfor5", models.FloatField()),
                ("xrev6", models.FloatField()),
                ("xrev7", models.FloatField()),
                ("xrev8", models.FloatField()),
                ("xrev9", models.FloatField()),
                ("xrev10", models.FloatField()),
                ("afor1", models.FloatField()),
                ("afor2", models.FloatField()),
                ("afor3", models.FloatField()),
                ("afor4", models.FloatField()),
                ("afor5", models.FloatField()),
                ("arev6", models.FloatField()),
                ("arev7", models.FloatField()),
                ("arev8", models.FloatField()),
                ("arev9", models.FloatField()),
                ("arev10", models.FloatField()),
                ("yfor1", models.FloatField()),
                ("yfor2", models.FloatField()),
                ("yfor3", models.FloatField()),
                ("yfor4", models.FloatField()),
                ("yfor5", models.FloatField()),
                ("yrev6", models.FloatField()),
                ("yrev7", models.FloatField()),
                ("yrev8", models.FloatField()),
                ("yrev9", models.FloatField()),
                ("yrev10", models.FloatField()),
                ("bfor1", models.FloatField()),
                ("bfor2", models.FloatField()),
                ("bfor3", models.FloatField()),
                ("bfor4", models.FloatField()),
                ("bfor5", models.FloatField()),
                ("brev6", models.FloatField()),
                ("brev7", models.FloatField()),
                ("brev8", models.FloatField()),
                ("brev9", models.FloatField()),
                ("brev10", models.FloatField()),
                ("scan2nd", models.CharField(max_length=20)),
                ("empcode1", models.IntegerField()),
                ("empcode2", models.IntegerField()),
                ("empcode3", models.IntegerField()),
                ("empcode4", models.IntegerField()),
                ("empcode5", models.IntegerField()),
                ("assign_empcode", models.IntegerField()),
                ("measure18", models.FloatField()),
                ("measure19", models.FloatField()),
                ("scan18", models.CharField(max_length=20)),
                ("scan19", models.CharField(max_length=20)),
                ("scan20", models.CharField(max_length=20)),
                ("scan21", models.CharField(max_length=20)),
                ("scan22", models.CharField(max_length=20)),
                ("scan23", models.CharField(max_length=20)),
                ("scan24", models.CharField(max_length=20)),
                ("check15", models.CharField(max_length=10)),
                ("check16", models.CharField(max_length=10)),
                ("check17", models.CharField(max_length=10)),
                ("check19", models.CharField(max_length=10)),
                ("check20", models.CharField(max_length=10)),
                ("check31", models.IntegerField()),
                ("check32", models.IntegerField()),
                ("a1", models.FloatField()),
                ("a2", models.FloatField()),
                ("a3", models.FloatField()),
                ("a4", models.FloatField()),
                ("a5", models.FloatField()),
                ("a6", models.FloatField()),
                ("b1", models.FloatField()),
                ("b2", models.FloatField()),
                ("b3", models.FloatField()),
                ("b4", models.FloatField()),
                ("b5", models.FloatField()),
                ("b6", models.FloatField()),
                ("c1", models.FloatField()),
                ("c2", models.FloatField()),
                ("c3", models.FloatField()),
                ("c4", models.FloatField()),
                ("c5", models.FloatField()),
                ("c6", models.FloatField()),
                ("ins", models.TextField()),
                ("lastdate", models.DateField()),
                ("stage1", models.IntegerField()),
                ("stage2", models.IntegerField()),
                ("stage3", models.IntegerField()),
                ("stage4", models.IntegerField()),
                ("stage5", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("mail", models.IntegerField()),
            ],
            options={
                "db_table": "testingpdfs",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestingreportMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("material_code", models.CharField(max_length=20)),
                ("sfcode", models.CharField(max_length=100)),
                ("test_properties", models.IntegerField()),
                ("note", models.TextField()),
                ("rev", models.CharField(max_length=5)),
                ("title", models.CharField(max_length=100)),
                ("prpd", models.CharField(max_length=20)),
                ("chkd", models.CharField(max_length=20)),
                ("appd", models.CharField(max_length=20)),
                ("date", models.CharField(max_length=12)),
                ("instrmno", models.IntegerField()),
                ("instrumentids", models.CharField(max_length=300)),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "testingreport_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestingReportMasterEntry",
            fields=[
                ("report_id", models.AutoField(primary_key=True, serialize=False)),
                ("production_no", models.IntegerField(blank=True, null=True)),
                (
                    "material_code",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("model_number", models.BigIntegerField(blank=True, null=True)),
                (
                    "inspected_by",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("approved_date", models.DateField(blank=True, null=True)),
                ("serialnumber", models.IntegerField()),
                ("card_sl_no", models.CharField(max_length=20)),
                ("mvstb", models.CharField(max_length=20)),
                ("finalsave", models.CharField(max_length=5)),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("tot_time", models.TimeField()),
                ("sfcode", models.CharField(max_length=20)),
                ("rev", models.CharField(max_length=20)),
                ("result", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
                ("createdby", models.BigIntegerField()),
                ("auto_calcu", models.CharField(max_length=20)),
                ("auto_calcu_status", models.CharField(max_length=10)),
                ("auto_calcu_date", models.DateField()),
                ("reporttype", models.CharField(max_length=50)),
                ("report_type_inc", models.IntegerField()),
                ("inter_exter", models.CharField(max_length=10)),
                ("instrumentids", models.TextField()),
                ("note", models.CharField(max_length=500)),
            ],
            options={
                "db_table": "testing_report_master_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestingUserTime",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_no", models.IntegerField()),
                ("mat_code", models.CharField(max_length=20)),
                ("unit_slno", models.IntegerField()),
                ("start_time", models.TimeField()),
                ("end_time", models.TimeField()),
                ("tot_time", models.TimeField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "testing_user_time",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestjigsMaster",
            fields=[
                (
                    "testjigcode",
                    models.CharField(max_length=30, primary_key=True, serialize=False),
                ),
                ("testjigname", models.CharField(blank=True, max_length=50, null=True)),
                ("dept", models.IntegerField()),
                ("createdby", models.CharField(blank=True, max_length=40, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "testjigs_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestPdfreportEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ref", models.CharField(max_length=3)),
                ("sfrev", models.IntegerField()),
                ("cardslno", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("prodno", models.IntegerField()),
                ("loc_code", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField()),
                ("stage", models.CharField(max_length=2)),
                ("delete1", models.CharField(max_length=1)),
                ("mail", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "test_pdfreport_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestPdfreportEntry080822",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ref", models.CharField(max_length=3)),
                ("sfrev", models.IntegerField()),
                ("cardslno", models.IntegerField()),
                ("unit_no", models.IntegerField()),
                ("prodno", models.IntegerField()),
                ("loc_code", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField()),
                ("stage", models.CharField(max_length=2)),
                ("delete1", models.CharField(max_length=1)),
                ("mail", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "test_pdfreport_entry_08_08_22",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestPdfreportTrans",
            fields=[
                ("tid", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("stage", models.CharField(max_length=1)),
                ("field", models.CharField(max_length=10)),
                ("value", models.CharField(max_length=200)),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "test_pdfreport_trans",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestreportFields",
            fields=[
                ("fid", models.AutoField(primary_key=True, serialize=False)),
                ("trid", models.IntegerField()),
                ("field_name", models.CharField(blank=True, max_length=20, null=True)),
                ("field_val", models.CharField(blank=True, max_length=100, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "testreport_fields",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestreportNtry",
            fields=[
                ("trid", models.AutoField(primary_key=True, serialize=False)),
                ("prjid", models.IntegerField()),
                ("result", models.CharField(blank=True, max_length=10, null=True)),
                ("instr_id", models.CharField(blank=True, max_length=20, null=True)),
                ("testtedby", models.IntegerField(db_column="testtedBy")),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "testreport_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestreportPrj",
            fields=[
                ("prjid", models.AutoField(primary_key=True, serialize=False)),
                ("prj_name", models.CharField(blank=True, max_length=100, null=True)),
                ("sfno", models.CharField(blank=True, max_length=30, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "testreport_prj",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestreportPrjMaster",
            fields=[
                ("flid", models.AutoField(primary_key=True, serialize=False)),
                ("prjid", models.IntegerField()),
                ("seq_no", models.IntegerField()),
                ("test", models.CharField(blank=True, max_length=200, null=True)),
                ("acc_cri", models.CharField(blank=True, max_length=200, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "testreport_prj_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestStudent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=10)),
                ("age", models.IntegerField()),
                ("city", models.CharField(max_length=10)),
                ("email", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "test_student",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Testtable",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=150)),
                ("age", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "testtable",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TestTableTwofields",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("project", models.CharField(db_column="Project", max_length=100)),
                ("cc", models.CharField(db_column="CC", max_length=50)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "test_table_twofields",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TiffinMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("item_name", models.CharField(max_length=50)),
                ("date", models.DateField()),
                ("loc", models.CharField(max_length=4)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tiffin_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TorquePdfEntry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("std_dim", models.TextField()),
                ("obs_val", models.FloatField()),
                ("error", models.CharField(max_length=150)),
                ("created_by", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "torque_pdf_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourAdvanceCategory",
            fields=[
                ("slno", models.IntegerField(primary_key=True, serialize=False)),
                ("cat_name", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "cat_full_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "tour_advance_category",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourAdvanceLimit",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("loc", models.CharField(blank=True, max_length=100, null=True)),
                ("dept", models.IntegerField()),
                ("ass_code", models.IntegerField()),
                ("cat", models.IntegerField()),
                ("type", models.IntegerField()),
                ("limit", models.FloatField()),
                ("check_perm", models.CharField(blank=True, max_length=50, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "tour_advance_limit",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourAdvanceLimit1508",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("loc", models.CharField(blank=True, max_length=100, null=True)),
                ("dept", models.IntegerField()),
                ("ass_code", models.IntegerField()),
                ("cat", models.IntegerField()),
                ("type", models.IntegerField()),
                ("limit", models.FloatField()),
                ("check_perm", models.CharField(blank=True, max_length=50, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "tour_advance_limit_15-08",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourAdvEnty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_code", models.IntegerField()),
                ("loc", models.CharField(blank=True, max_length=100, null=True)),
                ("dept", models.IntegerField()),
                ("adv_for", models.IntegerField()),
                ("adv_for_act", models.IntegerField()),
                ("zone", models.CharField(blank=True, max_length=200, null=True)),
                ("shed", models.CharField(blank=True, max_length=200, null=True)),
                ("product", models.CharField(blank=True, max_length=500, null=True)),
                ("purpose", models.TextField(blank=True, null=True)),
                ("bank_type", models.IntegerField()),
                ("acc_no", models.CharField(blank=True, max_length=100, null=True)),
                ("adv_req_amt", models.FloatField()),
                ("pd_adv_amt", models.FloatField()),
                ("pd_adv_reason", models.TextField(blank=True, null=True)),
                ("track_sts", models.IntegerField()),
                ("adm_sts", models.IntegerField()),
                ("adm_empcode", models.IntegerField()),
                ("adm_remarks", models.TextField(blank=True, null=True)),
                ("adm_app_date", models.DateField()),
                ("hod_sts", models.IntegerField()),
                ("hod_code", models.IntegerField()),
                ("hod_remarks", models.TextField(blank=True, null=True)),
                ("hod_app_date", models.DateField()),
                ("next_approve", models.IntegerField()),
                ("acc_sts", models.IntegerField()),
                ("acc_remarks", models.TextField(blank=True, null=True)),
                ("acc_app_date", models.DateField()),
                ("bill_type", models.IntegerField()),
                ("bill_type_ref", models.IntegerField()),
                ("vendor", models.CharField(blank=True, max_length=500, null=True)),
                ("document_date", models.DateField()),
                (
                    "payment_doc",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("payment_doc_date", models.DateField()),
                (
                    "check_no_cash",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("check_date", models.DateField()),
                ("clearing_date", models.DateField()),
                ("file_status", models.IntegerField()),
                ("file_posting_date", models.DateField()),
                ("tour_from_date", models.DateField()),
                ("tour_to_date", models.DateField()),
                ("warrenty_type", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "tour_adv_enty",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourAdvHistory",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("date", models.DateField()),
                ("status", models.IntegerField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("modified_amount", models.FloatField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tour_adv_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourAdvTrackSts",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=200)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "tour_adv_track_sts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourBankDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("bankname", models.CharField(blank=True, max_length=50, null=True)),
                ("acc_no", models.CharField(blank=True, max_length=50, null=True)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "tour_bank_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourExtBillEntry",
            fields=[
                ("entry_id", models.AutoField(primary_key=True, serialize=False)),
                ("ext_or_int", models.CharField(max_length=50)),
                ("empcode", models.IntegerField()),
                ("tour_startdate", models.DateField()),
                ("tour_returneddate", models.DateField()),
                ("actual_amount", models.FloatField()),
                ("approval_amount", models.FloatField()),
                ("approved_to_be", models.IntegerField()),
                ("bill_submsn_date", models.DateField()),
                ("admin_code", models.CharField(max_length=100)),
                ("rep_loc", models.CharField(max_length=100)),
                ("rep_dept", models.CharField(max_length=100)),
                ("ref_id", models.IntegerField()),
                ("payment_doc", models.CharField(max_length=500)),
                ("payment_doc_date", models.DateField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("status", models.IntegerField()),
                ("gl_check", models.IntegerField()),
            ],
            options={
                "db_table": "tour_ext_bill_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourExtCategories",
            fields=[
                ("cat_id", models.IntegerField(primary_key=True, serialize=False)),
                ("categories", models.CharField(max_length=1000)),
                ("parent", models.IntegerField()),
                ("display", models.IntegerField()),
                ("header_id", models.IntegerField()),
                ("group_id", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tour_ext_categories",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourExtCities",
            fields=[
                ("city_id", models.IntegerField(primary_key=True, serialize=False)),
                ("cities", models.CharField(max_length=50)),
                ("class_field", models.IntegerField(db_column="class")),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tour_ext_cities",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourExtFields",
            fields=[
                ("field_id", models.AutoField(primary_key=True, serialize=False)),
                ("cat_id", models.IntegerField()),
                ("field_name", models.CharField(max_length=100)),
                ("display", models.CharField(max_length=100)),
                ("file_type", models.IntegerField()),
                ("header_id", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tour_ext_fields",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourExtGlcodes",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("glcode", models.IntegerField()),
                ("cat_id", models.IntegerField()),
                ("parent", models.IntegerField()),
                ("desc", models.CharField(max_length=100)),
                ("location", models.CharField(max_length=100)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tour_ext_glcodes",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourExtHistory",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("entry_id", models.IntegerField()),
                ("cat_id", models.IntegerField()),
                ("actual_amount", models.FloatField()),
                ("cat_iterinary", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("date", models.DateField()),
                ("status", models.IntegerField()),
                ("approval_amount", models.FloatField()),
                ("approvremark", models.CharField(max_length=400)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tour_ext_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourExtNatureofvisit",
            fields=[
                ("nature_id", models.AutoField(primary_key=True, serialize=False)),
                ("purpose_of_visit", models.CharField(max_length=200)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tour_ext_natureofvisit",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourExtRules",
            fields=[
                (
                    "tour_ext_rules_id",
                    models.IntegerField(primary_key=True, serialize=False),
                ),
                ("cat_id", models.IntegerField()),
                ("class_id", models.IntegerField()),
                ("level", models.CharField(max_length=20)),
                ("amount", models.CharField(max_length=50)),
                ("type", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tour_ext_rules",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourExtSubbill",
            fields=[
                ("subbill_id", models.AutoField(primary_key=True, serialize=False)),
                ("ext_or_int", models.CharField(max_length=50)),
                ("entry_id", models.IntegerField()),
                ("cat_iterinary", models.IntegerField()),
                ("cat_id", models.IntegerField()),
                ("sub_type", models.CharField(max_length=200)),
                ("cat_value", models.CharField(max_length=200)),
                ("amount_type", models.IntegerField()),
                ("subref_id", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tour_ext_subbill",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourExtTrackSts",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=200)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "tour_ext_track_sts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourExtTrackStsNew",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=200)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "tour_ext_track_sts_new",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourPaymentAuth",
            fields=[
                ("id", models.IntegerField(primary_key=True, serialize=False)),
                ("dept", models.IntegerField()),
                ("app_auth", models.IntegerField()),
                ("petty_cash", models.FloatField()),
                ("tour_cash", models.FloatField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "tour_payment_auth",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TourPendAmt",
            fields=[
                ("companycode", models.IntegerField()),
                ("empcode", models.AutoField(primary_key=True, serialize=False)),
                ("adv_type", models.CharField(blank=True, max_length=200, null=True)),
                ("amount", models.FloatField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "tour_pend_amt",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingCatMaster",
            fields=[
                ("cat_no", models.AutoField(primary_key=True, serialize=False)),
                ("cat_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=100)),
            ],
            options={
                "db_table": "training_cat_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingCompanyMaster",
            fields=[
                ("company_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "company_name",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("addr", models.TextField()),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("contact", models.IntegerField()),
                ("extn", models.IntegerField()),
                ("url", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "official_mail",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("pin", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "training_company_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingCoordinatorMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("coordinator", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("del_by", models.IntegerField()),
            ],
            options={
                "db_table": "training_coordinator_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingCourseMaster",
            fields=[
                ("course_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "course_name",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("course_desc", models.TextField(blank=True, null=True)),
                (
                    "course_category",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("course_credits", models.IntegerField()),
                (
                    "trainer_details",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                ("trainer", models.CharField(blank=True, max_length=50, null=True)),
                ("course_event_id", models.IntegerField()),
                (
                    "course_duration",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("dalete_date", models.CharField(blank=True, max_length=20, null=True)),
                ("delete_reason", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "training_course_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingDisplayTypeMaster",
            fields=[
                ("display_id", models.AutoField(primary_key=True, serialize=False)),
                ("display_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete_by", models.IntegerField()),
            ],
            options={
                "db_table": "training_display_type_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingEventNtry",
            fields=[
                ("event_id", models.AutoField(primary_key=True, serialize=False)),
                ("course_id", models.IntegerField()),
                ("events", models.IntegerField()),
                ("start_date", models.DateField()),
                ("start_time", models.CharField(blank=True, max_length=8, null=True)),
                ("end_date", models.DateField()),
                ("end_time", models.CharField(blank=True, max_length=8, null=True)),
                ("dur_hrs", models.IntegerField()),
                ("dur_mns", models.IntegerField()),
                ("customer", models.CharField(blank=True, max_length=3, null=True)),
                ("company_id", models.IntegerField()),
                ("trainer", models.CharField(blank=True, max_length=50, null=True)),
                ("mobile", models.BigIntegerField()),
                ("alt_contact", models.BigIntegerField()),
                ("email", models.CharField(blank=True, max_length=50, null=True)),
                ("hall_id", models.IntegerField()),
                ("coordinator", models.IntegerField()),
                (
                    "event_location",
                    models.CharField(blank=True, max_length=5, null=True),
                ),
                ("feedback_necessary", models.IntegerField()),
                ("training_eval", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(blank=True, max_length=250, null=True)),
            ],
            options={
                "db_table": "training_event_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingExtTrainerMaster",
            fields=[
                (
                    "ext_trainer_slno",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("trainer_name", models.CharField(max_length=50)),
                ("company", models.CharField(max_length=50)),
                ("addr", models.TextField()),
                ("mobile", models.IntegerField()),
                ("alt_contact", models.CharField(max_length=12)),
                ("email", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "training_ext_trainer_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingHallMaster",
            fields=[
                ("hall_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "hall_location",
                    models.CharField(blank=True, max_length=4, null=True),
                ),
                ("hall_name", models.CharField(blank=True, max_length=25, null=True)),
                ("hall_addr", models.TextField(blank=True, null=True)),
                (
                    "seating_capacity",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("display_id", models.IntegerField()),
                ("board_size", models.CharField(blank=True, max_length=30, null=True)),
                ("extn_no", models.CharField(blank=True, max_length=30, null=True)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "training_hall_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_id", models.IntegerField()),
                ("nominee", models.IntegerField()),
                ("date", models.DateField()),
                ("hod", models.IntegerField()),
                ("createdby", models.IntegerField()),
            ],
            options={
                "db_table": "training_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingHoursMaster",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("loc", models.CharField(max_length=5)),
                ("dept_series", models.IntegerField()),
                ("desc", models.CharField(max_length=150)),
                ("level", models.CharField(max_length=20)),
                ("hours", models.IntegerField()),
                ("ass_role", models.CharField(max_length=4)),
                ("status", models.CharField(max_length=10)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "training_hours_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingIndcSubMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cat_id", models.IntegerField()),
                (
                    "ind_sub_cat",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "training_indc_sub_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingIndctn",
            fields=[
                ("ind_id", models.AutoField(primary_key=True, serialize=False)),
                ("trainee", models.CharField(blank=True, max_length=6, null=True)),
                ("carried_by", models.CharField(blank=True, max_length=6, null=True)),
                ("carried_by1", models.CharField(blank=True, max_length=6, null=True)),
                ("gnrl_indc_date", models.DateField()),
                ("gnrl_indc_date1", models.CharField(max_length=250)),
                ("doj", models.DateField()),
                ("js_reprt", models.CharField(blank=True, max_length=10, null=True)),
                ("loc", models.CharField(blank=True, max_length=20, null=True)),
                ("dept", models.IntegerField(blank=True, null=True)),
                ("gl", models.CharField(blank=True, max_length=6, null=True)),
                ("gl_sts", models.IntegerField()),
                ("hod", models.CharField(blank=True, max_length=6, null=True)),
                ("hod_sts", models.IntegerField()),
                ("hod_rmks", models.CharField(blank=True, max_length=250, null=True)),
                ("gl_rmks", models.CharField(blank=True, max_length=250, null=True)),
                ("hod_app_time", models.DateTimeField()),
                ("timestamp", models.DateTimeField()),
                ("created_by", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "training_indctn",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingIndctnMaster",
            fields=[
                ("ind_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "induction_desc",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                ("created_by", models.CharField(blank=True, max_length=6, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "training_indctn_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingIndEntry",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("ind_id", models.IntegerField()),
                ("jsp_val", models.IntegerField()),
                ("course_id", models.CharField(blank=True, max_length=11, null=True)),
                ("others", models.CharField(blank=True, max_length=250, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "training_ind_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingInductionMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ind_id", models.IntegerField()),
                (
                    "jsp_sub_data",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("sub_cnt", models.IntegerField()),
                ("course_id", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "training_induction_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingJsEntry",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                (
                    "it_main_data",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "it_check_data",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "it_sub_check_data",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("others", models.TextField(blank=True, null=True)),
                ("created_by", models.CharField(blank=True, max_length=6, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "training_js_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingJspMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("it_main_data", models.IntegerField(blank=True, null=True)),
                ("it_sub_check_data", models.IntegerField(blank=True, null=True)),
                ("event_type", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                "db_table": "training_jsp_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingMeetingTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField(unique=True)),
            ],
            options={
                "db_table": "training_meeting_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingNomineeIndData",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("trainee", models.CharField(blank=True, max_length=8, null=True)),
                ("event_type", models.CharField(blank=True, max_length=100, null=True)),
                ("date", models.DateField()),
                ("status", models.CharField(blank=True, max_length=50, null=True)),
                ("event_id", models.IntegerField()),
                ("location", models.CharField(blank=True, max_length=5, null=True)),
                ("dept", models.CharField(blank=True, max_length=6, null=True)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "training_nominee_ind_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingNomineeIndData1682021",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("trainee", models.CharField(max_length=8)),
                ("event_type", models.CharField(max_length=100)),
                ("date", models.DateField()),
                ("status", models.CharField(max_length=50)),
                ("event_id", models.IntegerField()),
                ("location", models.CharField(max_length=5)),
                ("dept", models.CharField(max_length=6)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "training_nominee_ind_data_16_8_2021",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingNomineeIndDataOld",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("trainee", models.CharField(max_length=8)),
                ("event_type", models.CharField(max_length=100)),
                ("date", models.DateField()),
                ("status", models.CharField(max_length=50)),
                ("event_id", models.IntegerField()),
                ("location", models.CharField(max_length=5)),
                ("dept", models.CharField(max_length=6)),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "training_nominee_ind_data_old",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingNomineesAttendance",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("event_id", models.IntegerField()),
                ("nominee", models.IntegerField()),
                ("attended_date", models.DateField()),
                ("attended_time", models.CharField(max_length=5)),
                ("status", models.CharField(max_length=1)),
                ("dur_hrs", models.IntegerField()),
                ("dur_mns", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("dalete_date", models.DateField()),
                ("delete_reason", models.TextField()),
            ],
            options={
                "db_table": "training_nominees_attendance",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingNomineesNtry",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("event_id", models.IntegerField()),
                ("nominee", models.IntegerField()),
                ("date", models.DateField()),
                ("type", models.CharField(blank=True, max_length=1, null=True)),
                ("status", models.IntegerField()),
                ("event_date", models.DateField()),
                ("dept", models.IntegerField()),
                ("loc", models.CharField(blank=True, max_length=10, null=True)),
                ("hod", models.CharField(blank=True, max_length=6, null=True)),
                ("pay_level", models.CharField(blank=True, max_length=20, null=True)),
                ("created_by", models.IntegerField()),
                ("pre_test_per", models.IntegerField()),
                ("post_test_per", models.IntegerField()),
                ("training_objectives", models.IntegerField()),
                ("training_skill_learnt", models.IntegerField()),
                ("overall", models.IntegerField()),
                ("approved_by", models.IntegerField()),
                ("approved_date", models.DateField()),
                ("mail_status", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("dalete_date", models.DateField()),
                ("delete_reason", models.TextField(blank=True, null=True)),
                (
                    "repeat_reason",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
            ],
            options={
                "db_table": "training_nominees_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingOnJob",
            fields=[
                ("job_uniq", models.AutoField(primary_key=True, serialize=False)),
                ("emp_id", models.CharField(blank=True, max_length=10, null=True)),
                ("trainer_id", models.CharField(blank=True, max_length=10, null=True)),
                ("loc", models.CharField(blank=True, max_length=20, null=True)),
                ("dept", models.CharField(blank=True, max_length=20, null=True)),
                ("entry_date", models.DateField()),
                ("job", models.CharField(blank=True, max_length=50, null=True)),
                ("team", models.CharField(blank=True, max_length=50, null=True)),
                ("hod", models.CharField(blank=True, max_length=10, null=True)),
                ("hod_date", models.DateField()),
                ("hod_sts", models.IntegerField()),
                ("rmks", models.TextField(blank=True, null=True)),
                ("attachment", models.TextField(blank=True, null=True)),
                ("task_new", models.IntegerField()),
                ("created_by", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "training_on_job",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TrainingOnJobCmnts",
            fields=[
                ("uniq_id", models.AutoField(primary_key=True, serialize=False)),
                ("job_uniq", models.IntegerField()),
                ("category", models.CharField(blank=True, max_length=30, null=True)),
                ("comments", models.CharField(blank=True, max_length=300, null=True)),
                ("feedback", models.TextField(blank=True, null=True)),
                ("from_date", models.DateField()),
                ("to_date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "training_on_job_cmnts",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="TransationWelfare",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("particulars", models.IntegerField()),
                ("date_of_distri", models.DateField()),
                ("status", models.IntegerField()),
                ("comments", models.TextField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "transation_welfare",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UnitLevelEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "from_field",
                    models.CharField(
                        blank=True, db_column="from", max_length=11, null=True
                    ),
                ),
                ("to", models.CharField(blank=True, max_length=11, null=True)),
                ("reference", models.CharField(blank=True, max_length=11, null=True)),
                ("reference2", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "reference2num",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "ecrdata",
                    models.CharField(
                        blank=True, db_column="ecrData", max_length=11, null=True
                    ),
                ),
                ("subcategory", models.CharField(blank=True, max_length=11, null=True)),
                ("date", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                (
                    "product_code",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                ("subproject", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "partserialnumber",
                    models.CharField(
                        blank=True,
                        db_column="partSerialNumber",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "servicecompatability",
                    models.TextField(
                        blank=True, db_column="serviceCompatability", null=True
                    ),
                ),
                ("remarks", models.TextField(blank=True, null=True)),
                (
                    "new_or_exist_code",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                (
                    "materialcode1",
                    models.CharField(blank=True, max_length=11, null=True),
                ),
                ("request_date_cft", models.DateField()),
                ("request", models.CharField(blank=True, max_length=150, null=True)),
                ("shorttext", models.CharField(blank=True, max_length=250, null=True)),
                ("request_date_ffarm", models.DateField()),
                ("scope", models.CharField(blank=True, max_length=100, null=True)),
                ("revno", models.CharField(blank=True, max_length=10, null=True)),
                ("wf", models.CharField(blank=True, max_length=50, null=True)),
                ("details1", models.CharField(blank=True, max_length=100, null=True)),
                ("details", models.CharField(blank=True, max_length=100, null=True)),
                ("drg", models.CharField(blank=True, max_length=50, null=True)),
                ("mdesc", models.CharField(blank=True, max_length=500, null=True)),
                ("sop", models.CharField(max_length=50)),
                ("software", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "material_code",
                    models.CharField(blank=True, max_length=300, null=True),
                ),
                (
                    "detailsofchanges",
                    models.CharField(
                        blank=True,
                        db_column="detailsOfChanges",
                        max_length=252,
                        null=True,
                    ),
                ),
                ("requiredqty", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "attachment1",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "attachment2",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "attachment3",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("cpacomments", models.CharField(max_length=100)),
                ("timestap", models.DateTimeField()),
                ("moved_internet", models.IntegerField()),
            ],
            options={
                "db_table": "unit_level_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UnitTypeSubMaster",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("unit_slno", models.IntegerField()),
                ("unit_name", models.CharField(max_length=50)),
                ("unit_sub_name", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "unit_type_sub_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UplodedFiles",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("formname", models.CharField(max_length=50)),
                ("name", models.CharField(max_length=50)),
                ("ext", models.CharField(max_length=50)),
                ("data", models.TextField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "uploded_files",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserBloodGroupMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("group", models.IntegerField()),
                ("group_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_blood_group_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserCoffLapse",
            fields=[
                ("empcode", models.IntegerField()),
                ("days", models.FloatField()),
                ("upto", models.DateField(blank=True, null=True)),
                ("cate", models.CharField(blank=True, max_length=5, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("update_by", models.IntegerField()),
                (
                    "update_timestamp",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("delete1", models.IntegerField()),
                ("cid", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "user_coff_lapse",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserCoffMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("bukrs", models.IntegerField()),
                ("werks", models.CharField(max_length=4)),
                ("stdaz", models.FloatField()),
                ("uname", models.IntegerField()),
                ("aedtm", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("uname1", models.IntegerField()),
                ("aedtm1", models.DateField()),
                ("delete_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "user_coff_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserCountryMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("country", models.IntegerField()),
                ("country_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_country_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dept_code", models.CharField(max_length=50)),
                ("emp_code", models.IntegerField()),
                ("date", models.DateField()),
                ("worked_hrs", models.TimeField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("status", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "user_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserEmpData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dept_code", models.CharField(max_length=50)),
                ("emp_code", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "user_emp_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserEntryForm",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("dept_code", models.IntegerField()),
                ("date", models.DateField()),
                ("emp_code", models.IntegerField()),
                ("h1", models.TimeField()),
                ("pr1", models.CharField(max_length=100)),
                ("h2", models.TimeField()),
                ("pr2", models.CharField(max_length=50)),
                ("h3", models.TimeField()),
                ("pr3", models.CharField(max_length=50)),
                ("h4", models.TimeField()),
                ("pr4", models.CharField(max_length=50)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.IntegerField()),
            ],
            options={
                "db_table": "user_entry_form",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserExtnTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("extn", models.CharField(max_length=50)),
                ("shrt", models.CharField(max_length=50)),
                ("build_no", models.CharField(max_length=4)),
                ("room_no", models.CharField(max_length=3)),
                ("local_std_code", models.CharField(max_length=8)),
                ("sys_no", models.CharField(max_length=15)),
            ],
            options={
                "db_table": "user_extn_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserGndrMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("gndr", models.IntegerField()),
                ("gndr_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_gndr_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserGroupMaster",
            fields=[
                ("empgroup", models.CharField(max_length=10)),
                ("groupname", models.CharField(max_length=30)),
                ("empsubgroup", models.CharField(max_length=10)),
                ("subgroupname", models.CharField(max_length=30)),
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_group_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLanguMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("langu", models.IntegerField()),
                ("langu_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_langu_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveApply",
            fields=[
                ("empcode", models.IntegerField()),
                ("apply_date", models.DateField()),
                ("days", models.FloatField()),
                ("start_date", models.DateField(blank=True, null=True)),
                ("end_date", models.DateField(blank=True, null=True)),
                ("beguz", models.TimeField(blank=True, null=True)),
                ("enduz", models.TimeField(blank=True, null=True)),
                ("leave_type", models.CharField(blank=True, max_length=5, null=True)),
                ("day_type", models.CharField(blank=True, max_length=2, null=True)),
                ("reason", models.CharField(blank=True, max_length=300, null=True)),
                ("ack", models.IntegerField()),
                ("ack_inid", models.AutoField(primary_key=True, serialize=False)),
                ("qms_no", models.IntegerField()),
                ("sap_no", models.CharField(max_length=20)),
                ("approve_status", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.DateField(blank=True, null=True)),
                (
                    "delete_reason",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("moved_sap", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "user_leave_apply",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveApplyAck",
            fields=[
                ("ack", models.IntegerField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("apply_date", models.DateField(blank=True, null=True)),
                ("apply_time", models.CharField(blank=True, max_length=10, null=True)),
                ("days", models.FloatField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.DateField(blank=True, null=True)),
                (
                    "delete_reason",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("approved_by", models.IntegerField()),
                ("approve_date", models.DateField(blank=True, null=True)),
                ("approve_time", models.TimeField()),
                ("approve_status", models.IntegerField()),
                (
                    "auto_approve",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                (
                    "reject_reason",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("escalate_status", models.IntegerField()),
                ("escalate_by", models.IntegerField(blank=True, null=True)),
                (
                    "cancel_timestamp",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "cancel_reason",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "approve_cancel_timestamp",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "approve_cancel_reason",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                (
                    "resp_assign",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("disabled", models.IntegerField()),
            ],
            options={
                "db_table": "user_leave_apply_ack",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveApplyValid",
            fields=[
                ("valid_id", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("apply_date", models.DateField()),
                ("leave_date", models.DateField()),
                ("beguz", models.TimeField()),
                ("enduz", models.TimeField()),
                ("leave_type", models.CharField(blank=True, max_length=5, null=True)),
                ("day_type", models.CharField(blank=True, max_length=2, null=True)),
                ("reason", models.CharField(blank=True, max_length=300, null=True)),
                ("ack", models.IntegerField()),
                ("days", models.FloatField()),
                ("approve_status", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.DateField(blank=True, null=True)),
                (
                    "delete_reason",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("uniq_slno", models.IntegerField()),
                ("seq_slno", models.IntegerField()),
            ],
            options={
                "db_table": "user_leave_apply_valid",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveApplyValidTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("leave_date", models.DateField()),
                ("leave_type", models.CharField(blank=True, max_length=5, null=True)),
                ("day_type", models.CharField(blank=True, max_length=2, null=True)),
                ("reason", models.CharField(blank=True, max_length=300, null=True)),
                ("days", models.FloatField()),
                ("seq_slno", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "user_leave_apply_valid_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveBalance",
            fields=[
                ("empcode", models.IntegerField(primary_key=True, serialize=False)),
                ("el", models.FloatField()),
                ("cl", models.FloatField()),
                ("sl", models.FloatField()),
                ("coff", models.FloatField()),
                ("clnew", models.FloatField()),
                ("fl", models.FloatField()),
                ("flnew", models.FloatField()),
                ("sap_no", models.CharField(blank=True, max_length=20, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("del_date", models.DateField(blank=True, null=True)),
                (
                    "delete_reason",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
            ],
            options={
                "db_table": "user_leave_balance",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_id", models.IntegerField()),
                ("leave_type", models.CharField(max_length=5)),
                ("desc", models.CharField(max_length=150)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("delete_date", models.DateField()),
                ("delete_reason", models.CharField(max_length=250)),
            ],
            options={
                "db_table": "user_leave_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveOdPermissionHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ack", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("date", models.DateField(blank=True, null=True)),
                ("day_type", models.CharField(blank=True, max_length=3, null=True)),
                ("type", models.CharField(blank=True, max_length=15, null=True)),
                ("hours", models.IntegerField()),
                ("approve_status", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestampp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField(blank=True, null=True)),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
            ],
            options={
                "db_table": "user_leave_od_permission_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveOdPermissionNtry",
            fields=[
                ("ack", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("apply_date", models.DateField()),
                ("apply_time", models.CharField(blank=True, max_length=10, null=True)),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                ("start_time", models.CharField(blank=True, max_length=20, null=True)),
                ("end_time", models.CharField(blank=True, max_length=20, null=True)),
                ("day_type", models.CharField(blank=True, max_length=3, null=True)),
                ("type", models.CharField(blank=True, max_length=15, null=True)),
                ("hours", models.IntegerField()),
                ("tr_type", models.CharField(blank=True, max_length=2, null=True)),
                ("visit_place", models.CharField(blank=True, max_length=40, null=True)),
                ("purpose", models.CharField(blank=True, max_length=50, null=True)),
                ("approved_by", models.IntegerField()),
                ("approve_date", models.DateField(blank=True, null=True)),
                ("approve_time", models.TimeField()),
                ("approve_status", models.IntegerField()),
                (
                    "approve_cancel_timestamp",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                ("auto_approve", models.CharField(blank=True, max_length=5, null=True)),
                (
                    "reject_reason",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("created_by", models.IntegerField()),
                ("sap_no", models.CharField(max_length=30)),
                ("timestampp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField(blank=True, null=True)),
                ("del_reason", models.CharField(blank=True, max_length=150, null=True)),
                ("moved_sap", models.IntegerField()),
            ],
            options={
                "db_table": "user_leave_od_permission_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveOtNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("date", models.DateField()),
                ("hours", models.FloatField()),
                ("final_hours", models.FloatField()),
                ("approve_status", models.IntegerField()),
                ("remarks", models.CharField(max_length=500)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "user_leave_ot_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeavePermission",
            fields=[
                ("per_id", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.CharField(max_length=6)),
                ("ntry_date", models.DateField()),
                ("day_type", models.CharField(max_length=10)),
                ("reason", models.CharField(blank=True, max_length=50, null=True)),
                ("hod", models.IntegerField()),
                ("hr", models.IntegerField()),
                ("hod_sts", models.IntegerField()),
                ("hod_date", models.DateTimeField(blank=True, null=True)),
                ("cancel_sts", models.IntegerField()),
                ("sap_no", models.CharField(max_length=30)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_leave_permission",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveShiftMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("tprog", models.CharField(max_length=4)),
                ("begin_1", models.TimeField()),
                ("end_1", models.TimeField()),
                ("begin_2", models.TimeField()),
                ("end_2", models.TimeField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("delete_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "user_leave_shift_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveSplReq",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("leave_type", models.CharField(blank=True, max_length=4, null=True)),
                ("start_date", models.DateField()),
                ("relation", models.CharField(max_length=5)),
                ("ntry_date", models.DateField()),
                ("hr_sts", models.IntegerField()),
                ("hr", models.IntegerField()),
                ("hr_comm", models.CharField(blank=True, max_length=50, null=True)),
                ("hr_date", models.DateField()),
                ("sap_no", models.CharField(max_length=30)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_leave_spl_req",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveStatusMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("desc", models.CharField(max_length=100)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
            ],
            options={
                "db_table": "user_leave_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.CharField(max_length=6)),
                ("leave_type", models.CharField(max_length=5)),
                ("days", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("valid", models.CharField(max_length=15)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_leave_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveTimeAdminMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("loc", models.CharField(max_length=6)),
                ("type", models.CharField(max_length=15)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "user_leave_time_admin_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLeaveTimecard",
            fields=[
                ("tid", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("date_on", models.DateField()),
                ("mor_eve", models.CharField(blank=True, max_length=11, null=True)),
                ("timechan", models.CharField(max_length=9)),
                ("status", models.IntegerField()),
                ("ntry_date", models.DateField(blank=True, null=True)),
                ("hr", models.IntegerField()),
                ("hod", models.IntegerField()),
                ("hod_date", models.CharField(blank=True, max_length=20, null=True)),
                ("hod_comm", models.CharField(blank=True, max_length=50, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_leave_timecard",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLevelMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("payscale_level", models.CharField(max_length=15)),
                ("desc", models.CharField(max_length=150)),
                ("welfare_group", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("period_id", models.IntegerField()),
            ],
            options={
                "db_table": "user_level_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("loc", models.CharField(max_length=10)),
            ],
            options={
                "db_table": "user_location",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserLoginTime",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("login", models.TimeField()),
                ("logout", models.TimeField()),
                ("date", models.DateField()),
                ("on_off", models.IntegerField()),
                ("ip", models.CharField(max_length=20)),
                ("admn_warn", models.IntegerField()),
                ("admn_date", models.DateField()),
                ("usrcnfrm", models.IntegerField(db_column="usrCnfrm")),
                ("sess_id", models.CharField(max_length=100)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_login_time",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserMailMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("emp_code", models.IntegerField()),
                ("internal_mail_req", models.CharField(max_length=10)),
                (
                    "internal_mail_id",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("system_required", models.CharField(max_length=10)),
                ("external_mail_req", models.CharField(max_length=10)),
                (
                    "external_mail_id",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("comments", models.CharField(max_length=200)),
                ("status", models.IntegerField(blank=True, null=True)),
                ("config_id_mail", models.CharField(max_length=250)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("deleted_by", models.IntegerField(blank=True, null=True)),
                ("deleted_date", models.DateField(blank=True, null=True)),
                (
                    "delete_reason",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                ("executive_type", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "user_mail_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("empname", models.CharField(blank=True, max_length=90, null=True)),
                ("designation", models.CharField(blank=True, max_length=50, null=True)),
                ("department", models.CharField(blank=True, max_length=40, null=True)),
                ("password", models.CharField(blank=True, max_length=500, null=True)),
                ("rolename", models.CharField(blank=True, max_length=40, null=True)),
                ("createdby", models.CharField(blank=True, max_length=50, null=True)),
                ("jn_date", models.DateField(blank=True, null=True)),
                ("lv_date", models.DateField()),
                ("dob", models.DateField()),
                ("mail_id", models.CharField(max_length=100)),
                (
                    "external_mail",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "personal_mail",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("mail_indi", models.CharField(blank=True, max_length=3, null=True)),
                ("gndr", models.IntegerField()),
                ("qms", models.IntegerField(db_column="QMS")),
                ("sap", models.IntegerField(db_column="SAP")),
                ("crnt_sts", models.IntegerField()),
                ("mgr", models.IntegerField()),
                ("blood_group", models.CharField(blank=True, max_length=10, null=True)),
                ("phno", models.CharField(max_length=30)),
                ("loc", models.CharField(blank=True, max_length=20, null=True)),
                ("empgroup", models.CharField(blank=True, max_length=10, null=True)),
                ("empsubgroup", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "payscale_grade",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "payscale_level",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "payscale_sub_level",
                    models.CharField(blank=True, max_length=3, null=True),
                ),
                ("pay_range", models.CharField(blank=True, max_length=10, null=True)),
                ("adapt", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "emptype",
                    models.CharField(
                        blank=True, db_column="empType", max_length=50, null=True
                    ),
                ),
                ("extn", models.CharField(blank=True, max_length=50, null=True)),
                ("shrt", models.CharField(blank=True, max_length=50, null=True)),
                ("active_name", models.CharField(blank=True, max_length=1, null=True)),
                ("photo_sts", models.IntegerField()),
                ("build_no", models.CharField(blank=True, max_length=4, null=True)),
                ("room_no", models.CharField(blank=True, max_length=3, null=True)),
                (
                    "local_std_code",
                    models.CharField(blank=True, max_length=8, null=True),
                ),
                ("sys_no", models.CharField(blank=True, max_length=15, null=True)),
                ("loc_outstn", models.CharField(blank=True, max_length=50, null=True)),
                ("gl", models.CharField(blank=True, max_length=60, null=True)),
                ("tl", models.IntegerField()),
                ("level_1", models.IntegerField()),
                ("level_2", models.IntegerField()),
                ("company_id", models.IntegerField()),
                ("tprog", models.CharField(blank=True, max_length=15, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("marital_status", models.IntegerField()),
                ("tms_status", models.IntegerField()),
                ("ass_role", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "qualification",
                    models.CharField(blank=True, max_length=90, null=True),
                ),
                (
                    "empcode_md5",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("tr_facility", models.CharField(blank=True, max_length=1, null=True)),
                ("first_name", models.CharField(blank=True, max_length=40, null=True)),
                ("last_name", models.CharField(blank=True, max_length=40, null=True)),
                ("marriage_date", models.DateField(blank=True, null=True)),
                ("phone_permission", models.CharField(max_length=1)),
                ("bus_route", models.CharField(blank=True, max_length=10, null=True)),
                ("ext_status", models.CharField(max_length=20)),
                ("work_loc", models.CharField(blank=True, max_length=50, null=True)),
                ("audit_emp_sts", models.IntegerField()),
                ("auditor_qua_date", models.DateField()),
                ("auditor_disqua_date", models.DateField()),
                ("uan", models.CharField(blank=True, max_length=20, null=True)),
                ("pan", models.CharField(blank=True, max_length=30, null=True)),
                ("bank_indi", models.CharField(blank=True, max_length=500, null=True)),
                ("bank_acc", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "attendance_status",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("ess", models.CharField(blank=True, max_length=10, null=True)),
                ("alt_contact", models.CharField(blank=True, max_length=15, null=True)),
                ("ot_flag", models.CharField(blank=True, max_length=2, null=True)),
                ("shrt_name", models.CharField(blank=True, max_length=10, null=True)),
                ("fl_elg", models.IntegerField()),
                ("rsc", models.IntegerField()),
                ("emp_cat", models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                "db_table": "user_master_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UsermasterMailid",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("mail_id", models.CharField(max_length=200)),
            ],
            options={
                "db_table": "usermaster_mailid",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserMediclaimPolicy",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cardid", models.CharField(blank=True, max_length=23, null=True)),
                ("empcode", models.IntegerField(blank=True, null=True)),
                ("suminsured", models.IntegerField(blank=True, null=True)),
                ("policyno", models.CharField(blank=True, max_length=24, null=True)),
                (
                    "policy_holder",
                    models.CharField(blank=True, max_length=52, null=True),
                ),
                (
                    "insurance_name",
                    models.CharField(blank=True, max_length=52, null=True),
                ),
                (
                    "relationship",
                    models.CharField(blank=True, max_length=13, null=True),
                ),
                ("gender", models.CharField(blank=True, max_length=9, null=True)),
                ("indication", models.IntegerField(blank=True, null=True)),
                (
                    "date_of_birth",
                    models.CharField(blank=True, max_length=10, null=True),
                ),
                ("age", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("crnt_sts", models.IntegerField(blank=True, null=True)),
                ("dep_add", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timstamp", models.DateTimeField()),
                ("deletedby", models.IntegerField(blank=True, null=True)),
                ("deleteddate", models.CharField(blank=True, max_length=19, null=True)),
            ],
            options={
                "db_table": "user_mediclaim_policy",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserMediclaimPolicyHis",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("field", models.CharField(max_length=30)),
                ("before", models.CharField(max_length=200)),
                ("after", models.CharField(max_length=200)),
                ("date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "user_mediclaim_policy_his",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserNationMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nation", models.IntegerField()),
                ("nation_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_nation_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserPrivil",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.CharField(blank=True, max_length=6, null=True)),
                ("dept", models.IntegerField()),
                ("form_name", models.CharField(max_length=200)),
                ("save", models.IntegerField()),
                ("edit", models.IntegerField()),
                ("delete", models.IntegerField()),
                ("view", models.IntegerField()),
                ("disabled", models.IntegerField()),
                ("createdby", models.CharField(max_length=7)),
                ("category", models.CharField(max_length=5)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_privil",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserPrivileges",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.BigIntegerField()),
                ("formname", models.CharField(blank=True, max_length=50, null=True)),
                ("view", models.CharField(blank=True, max_length=1, null=True)),
                ("save", models.CharField(blank=True, max_length=1, null=True)),
                ("update1", models.CharField(blank=True, max_length=1, null=True)),
                ("delete1", models.CharField(blank=True, max_length=1, null=True)),
                ("createdby", models.CharField(max_length=50)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_privileges",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserPunchDailyStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.CharField(max_length=6)),
                ("yesterday_date", models.DateField()),
                ("today_date", models.DateField()),
                ("punch_out", models.CharField(max_length=8)),
                ("punch_in", models.CharField(max_length=8)),
                ("lateby", models.CharField(max_length=8)),
                ("shift", models.CharField(max_length=10)),
                ("leave", models.CharField(max_length=100)),
                ("end_date", models.DateField()),
                ("loc", models.CharField(max_length=4)),
                ("created_by", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
                ("last_update", models.CharField(max_length=20)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "user_punch_daily_status",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserPunchDailyStatusTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.CharField(max_length=6)),
                ("yesterday_date", models.DateField()),
                ("today_date", models.DateField()),
                ("punch_out", models.CharField(max_length=8)),
                ("punch_in", models.CharField(max_length=8)),
                ("lateby", models.CharField(max_length=8)),
                ("shift", models.CharField(max_length=10)),
                ("leave", models.CharField(max_length=100)),
                ("end_date", models.DateField()),
                ("created_by", models.CharField(max_length=10)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_punch_daily_status_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserPunchMaster",
            fields=[
                ("empcode", models.IntegerField()),
                ("date", models.DateField(blank=True, null=True)),
                ("day_status", models.CharField(blank=True, max_length=4, null=True)),
                ("in_field", models.TimeField(db_column="in")),
                ("out", models.TimeField()),
                ("total", models.CharField(blank=True, max_length=10, null=True)),
                ("reason", models.CharField(blank=True, max_length=40, null=True)),
                ("week", models.CharField(blank=True, max_length=3, null=True)),
                ("od_in", models.TimeField()),
                ("od_out", models.TimeField()),
                ("leave_in", models.TimeField()),
                ("leave_out", models.TimeField()),
                ("lateby", models.CharField(blank=True, max_length=5, null=True)),
                ("un_shift", models.CharField(blank=True, max_length=5, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("punch_id", models.AutoField(primary_key=True, serialize=False)),
                ("in_sap_no", models.CharField(blank=True, max_length=30, null=True)),
                ("out_sap_no", models.CharField(blank=True, max_length=30, null=True)),
                ("pr_sap_no", models.CharField(blank=True, max_length=30, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "user_punch_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserPunchMaster141023",
            fields=[
                ("empcode", models.IntegerField()),
                ("date", models.DateField(blank=True, null=True)),
                ("day_status", models.CharField(blank=True, max_length=4, null=True)),
                ("in_field", models.TimeField(db_column="in")),
                ("out", models.TimeField()),
                ("total", models.CharField(blank=True, max_length=10, null=True)),
                ("reason", models.CharField(blank=True, max_length=40, null=True)),
                ("week", models.CharField(blank=True, max_length=3, null=True)),
                ("od_in", models.TimeField()),
                ("od_out", models.TimeField()),
                ("leave_in", models.TimeField()),
                ("leave_out", models.TimeField()),
                ("lateby", models.CharField(blank=True, max_length=5, null=True)),
                ("un_shift", models.CharField(blank=True, max_length=5, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("punch_id", models.AutoField(primary_key=True, serialize=False)),
                ("in_sap_no", models.CharField(blank=True, max_length=30, null=True)),
                ("out_sap_no", models.CharField(blank=True, max_length=30, null=True)),
                ("pr_sap_no", models.CharField(blank=True, max_length=30, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "user_punch_master_14-10-23",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserRelignMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("relign", models.IntegerField()),
                ("relign_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_relign_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserSalutationMaster",
            fields=[
                ("sal_no", models.AutoField(primary_key=True, serialize=False)),
                ("sal_name", models.CharField(max_length=5)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_salutation_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserShiftHis",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("shift_id", models.IntegerField()),
                ("empcode", models.CharField(blank=True, max_length=6, null=True)),
                ("shift", models.CharField(blank=True, max_length=11, null=True)),
                ("shift_date", models.DateField(blank=True, null=True)),
                ("rsn", models.CharField(blank=True, max_length=200, null=True)),
                ("sap_upload", models.IntegerField()),
                ("moved_time", models.CharField(max_length=30)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_shift_his",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserShiftHisTesttable",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("shift_id", models.IntegerField()),
                ("empcode", models.CharField(blank=True, max_length=6, null=True)),
                ("shift", models.CharField(blank=True, max_length=11, null=True)),
                ("shift_date", models.DateField(blank=True, null=True)),
                ("rsn", models.CharField(blank=True, max_length=200, null=True)),
                ("sap_upload", models.IntegerField()),
                ("moved_time", models.CharField(max_length=30)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_shift_his_testtable",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserShiftMaster",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("shift", models.CharField(max_length=10)),
                ("sname", models.CharField(max_length=20)),
                ("timings", models.CharField(max_length=20)),
                ("createdby", models.CharField(max_length=6)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_shift_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserShiftMasterNew",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("shift", models.CharField(max_length=10)),
                ("sname", models.CharField(max_length=20)),
                ("timings", models.CharField(max_length=20)),
                ("fromtime", models.CharField(blank=True, max_length=12, null=True)),
                ("totime", models.CharField(blank=True, max_length=12, null=True)),
                ("createdby", models.CharField(max_length=6)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_shift_master_new",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserShiftNtry",
            fields=[
                ("shift_id", models.AutoField(primary_key=True, serialize=False)),
                ("ntry_by", models.CharField(blank=True, max_length=6, null=True)),
                ("ntry_date", models.DateField(blank=True, null=True)),
                ("empcode", models.CharField(blank=True, max_length=6, null=True)),
                ("from_date", models.DateField(blank=True, null=True)),
                ("to_date", models.DateField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_shift_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserShiftTime",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("shift", models.CharField(blank=True, max_length=6, null=True)),
                ("sname", models.CharField(max_length=20)),
                ("fromtime", models.TimeField(blank=True, null=True)),
                ("totime", models.CharField(blank=True, max_length=20, null=True)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "user_shift_time",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserSpclLeave",
            fields=[
                ("empcode", models.IntegerField()),
                ("days", models.FloatField()),
                ("start_date", models.DateField(blank=True, null=True)),
                ("upto", models.DateField(blank=True, null=True)),
                ("cate", models.CharField(blank=True, max_length=5, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("update_by", models.IntegerField()),
                (
                    "update_timestamp",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("delete1", models.IntegerField()),
                ("cid", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "user_spcl_leave",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserStateMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("state", models.IntegerField()),
                ("state_name", models.CharField(max_length=50)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "user_state_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserTransportNtry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("pick_point", models.CharField(blank=True, max_length=15, null=True)),
                ("drop_point", models.CharField(blank=True, max_length=150, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                ("time", models.CharField(blank=True, max_length=20, null=True)),
                ("time_other", models.CharField(blank=True, max_length=30, null=True)),
                ("snaks", models.CharField(blank=True, max_length=10, null=True)),
                ("tea", models.CharField(blank=True, max_length=1, null=True)),
                ("dinner", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "dinner_other",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "purp_staying",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField(blank=True, null=True)),
                ("del_reason", models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                "db_table": "user_transport_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="UserTransportNtry12",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("pick_point", models.CharField(blank=True, max_length=15, null=True)),
                ("drop_point", models.CharField(blank=True, max_length=150, null=True)),
                ("date", models.DateField(blank=True, null=True)),
                ("time", models.CharField(blank=True, max_length=20, null=True)),
                ("time_other", models.CharField(blank=True, max_length=30, null=True)),
                ("snaks", models.CharField(blank=True, max_length=10, null=True)),
                ("tea", models.CharField(blank=True, max_length=1, null=True)),
                ("dinner", models.CharField(blank=True, max_length=30, null=True)),
                (
                    "dinner_other",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "purp_staying",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField(blank=True, null=True)),
                ("del_reason", models.CharField(blank=True, max_length=300, null=True)),
            ],
            options={
                "db_table": "user_transport_ntry12",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Uservb",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("empcode", models.IntegerField()),
                ("senior", models.IntegerField()),
                ("super_senior", models.IntegerField()),
                ("senior_dept", models.IntegerField()),
                ("super_senior_dept", models.IntegerField()),
                ("date", models.DateField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "uservb",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VdssCategoryMaster",
            fields=[
                ("cat_id", models.AutoField(primary_key=True, serialize=False)),
                ("issue_category", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=7)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("delete_date", models.DateField()),
            ],
            options={
                "db_table": "vdss_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VdssDetails",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(max_length=7)),
                ("month", models.CharField(max_length=10)),
                ("issue_category", models.IntegerField()),
                ("project", models.IntegerField()),
                ("vendor", models.IntegerField()),
                (
                    "materialcode",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("qty", models.IntegerField()),
                ("remarks", models.TextField()),
                ("attachment", models.CharField(max_length=100)),
                ("status", models.IntegerField()),
                ("assignby", models.CharField(max_length=7)),
                ("assign_date", models.DateField()),
                ("assign_time", models.CharField(max_length=7)),
                ("action_points", models.TextField()),
                ("assign_to", models.CharField(max_length=7)),
                ("target_date", models.DateField()),
                ("vdss_remarks", models.TextField()),
                ("cmplt_date", models.DateField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vdss_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VdssDetailsHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("empcode", models.CharField(max_length=7)),
                ("assign_to", models.CharField(max_length=7)),
                ("ntry_date", models.DateField()),
                ("ntry_time", models.CharField(max_length=10)),
                ("target_date", models.DateField()),
                ("action_points", models.TextField()),
                ("vdds_remarks", models.TextField()),
                ("status", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "vdss_details_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VdssPrjctMaster",
            fields=[
                ("proj_id", models.AutoField(primary_key=True, serialize=False)),
                ("project", models.CharField(max_length=30)),
                ("createdby", models.CharField(max_length=7)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("deleted_date", models.DateField()),
            ],
            options={
                "db_table": "vdss_prjct_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VdssStatusMaster",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "vdss_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VdssTeam",
            fields=[
                ("empcode", models.IntegerField(primary_key=True, serialize=False)),
                ("createdby", models.CharField(max_length=7)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vdss_team",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VdssVendMastrer",
            fields=[
                (
                    "ven_id",
                    models.CharField(
                        max_length=1000, primary_key=True, serialize=False
                    ),
                ),
                ("vendor", models.CharField(max_length=100)),
                ("mailid", models.CharField(blank=True, max_length=100, null=True)),
                ("createdby", models.CharField(blank=True, max_length=7, null=True)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "vdss_vend_mastrer",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VdssVendMastrer28112022",
            fields=[
                (
                    "ven_id",
                    models.CharField(
                        max_length=1000, primary_key=True, serialize=False
                    ),
                ),
                ("vendor", models.CharField(max_length=100)),
                ("mailid", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=7)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "vdss_vend_mastrer_28_11_2022",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VdssVendMastrerDjango",
            fields=[
                (
                    "ven_id",
                    models.CharField(
                        max_length=1000, primary_key=True, serialize=False
                    ),
                ),
                ("vendor", models.CharField(max_length=100)),
                ("mailid", models.CharField(max_length=100)),
                ("createdby", models.CharField(max_length=7)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "vdss_vend_mastrer_django",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VendorDirEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("main_cat_id", models.IntegerField()),
                ("sub_data", models.CharField(max_length=250)),
                ("child_data", models.CharField(max_length=250)),
                ("file_name", models.CharField(max_length=250)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "vendor_dir_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VendorMainCatMaster",
            fields=[
                ("cat_id", models.AutoField(primary_key=True, serialize=False)),
                ("cat_name", models.CharField(max_length=200)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "vendor_main_cat_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VendorMaster",
            fields=[
                ("vendor_code", models.IntegerField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                ("cty", models.CharField(max_length=10)),
                ("street", models.CharField(max_length=30)),
                ("post_code", models.IntegerField()),
                ("city", models.CharField(max_length=20)),
                ("group", models.CharField(max_length=30)),
                ("notes", models.CharField(max_length=30)),
                ("building", models.CharField(max_length=20)),
                ("floor", models.CharField(max_length=20)),
                ("room", models.CharField(max_length=20)),
                ("telephone", models.CharField(max_length=12)),
                ("fax", models.CharField(max_length=15)),
                ("street2", models.CharField(max_length=30)),
                ("street3", models.CharField(max_length=30)),
                ("street4", models.CharField(max_length=30)),
                ("street5", models.CharField(max_length=30)),
                ("email", models.CharField(max_length=30)),
                ("crncy", models.CharField(max_length=10)),
                ("salesperson", models.CharField(max_length=30)),
                ("incot", models.CharField(max_length=10)),
                ("inco2", models.CharField(max_length=10)),
                ("gr", models.CharField(max_length=10)),
                ("ctr", models.CharField(max_length=10)),
                ("payment_term", models.CharField(max_length=10)),
                ("payment_method", models.CharField(max_length=10)),
                ("payment_method_desc", models.CharField(max_length=30)),
                ("po_org", models.CharField(max_length=30)),
                ("po_grp", models.CharField(max_length=20)),
                ("po_org_desc", models.CharField(max_length=30)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("b", models.IntegerField()),
                ("c", models.IntegerField()),
                ("d", models.IntegerField()),
                ("e", models.IntegerField()),
                ("f", models.IntegerField()),
                ("g", models.IntegerField()),
            ],
            options={
                "db_table": "vendor_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VendorPojectsMaster",
            fields=[
                ("prj_slno", models.AutoField(primary_key=True, serialize=False)),
                ("prj_desc", models.CharField(max_length=30)),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "vendor_pojects_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VendorRating2BMaster",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=50)),
                ("sub_name", models.CharField(max_length=1)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vendor_rating_2b_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VendorRatingNtry",
            fields=[
                (
                    "vendor_uniq_slno",
                    models.AutoField(primary_key=True, serialize=False),
                ),
                ("vendor_code", models.IntegerField()),
                ("po", models.IntegerField()),
                ("po_date", models.DateField()),
                ("dc", models.CharField(max_length=20)),
                ("dc_date", models.DateField()),
                ("inv", models.IntegerField()),
                ("inv_date", models.DateField()),
                ("desc", models.CharField(max_length=500)),
                ("drg", models.CharField(max_length=50)),
                ("prj_slno", models.IntegerField()),
                ("r", models.IntegerField()),
                ("d", models.IntegerField()),
                ("q", models.IntegerField()),
                ("cfd", models.IntegerField()),
                ("cfj", models.IntegerField()),
                ("vendor_rate", models.FloatField()),
                ("check_no", models.CharField(max_length=30)),
                ("check_date", models.DateField()),
                ("check_amt", models.FloatField()),
                ("entry_by", models.IntegerField()),
                ("entry_date", models.DateField()),
                ("entry_sts", models.IntegerField()),
                ("checked_by", models.IntegerField()),
                ("checked_date", models.DateField()),
                ("checked_sts", models.IntegerField()),
                ("approved_by", models.IntegerField()),
                ("approved_date", models.DateField()),
                ("approved_sts", models.IntegerField()),
                ("inv_without_tax", models.FloatField()),
                ("inv_with_tax", models.FloatField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vendor_rating_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VnvEntry",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("title", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "product_code",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "specification_no",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("mod_name", models.CharField(blank=True, max_length=500, null=True)),
                ("version", models.CharField(blank=True, max_length=250, null=True)),
                ("file_size", models.IntegerField()),
                ("file_type", models.CharField(blank=True, max_length=50, null=True)),
                ("file_name", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "file_created_timestamp1",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("file_size2", models.CharField(blank=True, max_length=10, null=True)),
                ("file_type2", models.CharField(blank=True, max_length=10, null=True)),
                ("file_name2", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "file_created_timestamp2",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("file_size3", models.CharField(blank=True, max_length=10, null=True)),
                ("file_type3", models.CharField(blank=True, max_length=10, null=True)),
                ("file_name3", models.CharField(blank=True, max_length=150, null=True)),
                (
                    "file_created_timestamp3",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("std_path", models.CharField(blank=True, max_length=500, null=True)),
                ("alt_path", models.CharField(blank=True, max_length=200, null=True)),
                ("rel_type", models.IntegerField()),
                ("rel_note", models.CharField(blank=True, max_length=4000, null=True)),
                ("rel_date", models.CharField(blank=True, max_length=50, null=True)),
                ("rel_by", models.IntegerField()),
                ("circu_list", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "circu_list_me",
                    models.CharField(blank=True, max_length=2000, null=True),
                ),
                ("ntry_sts", models.IntegerField()),
                ("ntry_by", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("pl_remarks", models.CharField(blank=True, max_length=250, null=True)),
                ("pl_by", models.IntegerField()),
                ("pl_date", models.DateField()),
                ("pl_sts", models.IntegerField()),
                (
                    "vnv_remarks",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("vnv_by", models.IntegerField()),
                ("vnv_date", models.DateField()),
                ("vnv_sts", models.IntegerField()),
                ("approve_sts", models.IntegerField()),
                ("release_sts", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "released_status",
                    models.CharField(blank=True, max_length=500, null=True),
                ),
                ("auto_remind", models.CharField(blank=True, max_length=10, null=True)),
                ("release_date", models.DateField()),
                (
                    "release_recipients_list",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("me_release_ntry_by", models.IntegerField()),
                ("me_release_ntry_date", models.DateField()),
                ("ecr_no", models.CharField(blank=True, max_length=25, null=True)),
                ("type", models.CharField(blank=True, max_length=4, null=True)),
                ("product_ic", models.IntegerField()),
                ("product_ic_sts", models.IntegerField()),
                ("product_ic_date", models.DateField()),
                (
                    "product_ic_time",
                    models.CharField(blank=True, max_length=250, null=True),
                ),
                ("sub_type", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "whom_2release",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("sr_no", models.CharField(blank=True, max_length=12, null=True)),
                ("me_status", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("nns_slno", models.IntegerField()),
                ("checksum", models.CharField(blank=True, max_length=40, null=True)),
                ("card_name", models.CharField(blank=True, max_length=50, null=True)),
                ("ic_name", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "prog_interface",
                    models.CharField(blank=True, max_length=1000, null=True),
                ),
                (
                    "prog_tool",
                    models.CharField(
                        blank=True,
                        db_collation="utf8_general_ci",
                        max_length=1000,
                        null=True,
                    ),
                ),
                ("clr_buffer", models.CharField(blank=True, max_length=50, null=True)),
                ("eff_from", models.CharField(blank=True, max_length=50, null=True)),
                ("type_loco", models.CharField(blank=True, max_length=1000, null=True)),
                ("under_second", models.IntegerField()),
                ("hod_code", models.IntegerField()),
                ("hod_date", models.DateField()),
                ("hod_status", models.IntegerField()),
                ("track_status", models.IntegerField()),
                ("title_ntry", models.CharField(blank=True, max_length=500, null=True)),
                ("rev_no", models.CharField(blank=True, max_length=200, null=True)),
                ("checked_by", models.CharField(blank=True, max_length=200, null=True)),
                (
                    "approved_by",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("doc_no", models.CharField(blank=True, max_length=200, null=True)),
                ("pdf_note", models.CharField(blank=True, max_length=2000, null=True)),
                ("req_soft", models.CharField(blank=True, max_length=500, null=True)),
                ("start_menu", models.CharField(blank=True, max_length=500, null=True)),
                ("def_desti", models.CharField(blank=True, max_length=500, null=True)),
                ("icon_name", models.CharField(blank=True, max_length=500, null=True)),
                ("sf_cat", models.IntegerField()),
                ("sd_re_date", models.DateField()),
                ("zip_name_time", models.TextField(blank=True, null=True)),
                ("zip_size", models.TextField(blank=True, null=True)),
                ("zipfname", models.TextField(blank=True, null=True)),
                ("groupid", models.CharField(blank=True, max_length=250, null=True)),
                ("product_sec_ic", models.IntegerField()),
                ("main_hod", models.IntegerField()),
                ("rev_date", models.TextField(blank=True, null=True)),
                ("nnspath", models.TextField(blank=True, null=True)),
                (
                    "pdf_ent_date",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("delete1", models.IntegerField()),
                (
                    "ecrno_updation",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("servreq", models.CharField(blank=True, max_length=15, null=True)),
            ],
            options={
                "db_table": "vnv_entry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VnvFileSavng",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("filename", models.TextField()),
                ("foldername", models.CharField(max_length=20)),
                ("file_type", models.CharField(max_length=200)),
                ("file_size", models.IntegerField()),
                ("file_ext", models.CharField(max_length=200)),
                ("timestamp", models.DateTimeField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "vnv_file_savng",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VnvHistory",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("id", models.IntegerField()),
                ("field", models.CharField(max_length=30)),
                ("before", models.CharField(max_length=200)),
                ("after", models.CharField(max_length=200)),
                ("date", models.DateField()),
                ("timestamp", models.DateTimeField()),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "vnv_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VnvPdfData",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("prd_by", models.CharField(max_length=50)),
                ("rev_sof_hist", models.TextField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "vnv_pdf_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VnvProgMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("matcode", models.TextField()),
                ("prog_int", models.CharField(max_length=500)),
                ("prog_toll", models.CharField(max_length=500)),
                ("filetype", models.CharField(max_length=200)),
                ("ref_code", models.CharField(max_length=200)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "vnv_prog_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VnvSub",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("uniq_slno", models.IntegerField()),
                ("remarks", models.TextField()),
                ("createdby", models.IntegerField()),
                ("date", models.DateField()),
                ("status", models.IntegerField()),
                ("to_mail", models.CharField(max_length=500)),
                ("cc_mail", models.CharField(max_length=2000)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vnv_sub",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VnvTrackStatusMaster",
            fields=[
                ("status", models.SmallAutoField(primary_key=True, serialize=False)),
                ("status_name", models.CharField(max_length=30)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "vnv_track_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VocherAllowanceMaster",
            fields=[
                ("aid", models.AutoField(primary_key=True, serialize=False)),
                ("cid", models.IntegerField(blank=True, null=True)),
                ("fromdate", models.CharField(blank=True, max_length=10, null=True)),
                ("todate", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "amount",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=4, null=True
                    ),
                ),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vocher_allowance_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VocherAttachments",
            fields=[
                ("aid", models.AutoField(primary_key=True, serialize=False)),
                ("vid", models.IntegerField()),
                ("name", models.CharField(blank=True, max_length=100, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vocher_attachments",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VocherCategoryMaster",
            fields=[
                ("cid", models.AutoField(primary_key=True, serialize=False)),
                ("glaccount", models.IntegerField()),
                ("cat_name", models.CharField(blank=True, max_length=31, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vocher_category_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VocherHistory",
            fields=[
                ("hid", models.AutoField(primary_key=True, serialize=False)),
                ("vid", models.IntegerField()),
                ("status", models.IntegerField()),
                ("comments", models.TextField(blank=True, null=True)),
                ("empcode", models.CharField(blank=True, max_length=10, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vocher_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VocherLimitMaster",
            fields=[
                ("mid", models.AutoField(primary_key=True, serialize=False)),
                ("loc", models.CharField(blank=True, max_length=4, null=True)),
                ("deptcode", models.IntegerField(blank=True, null=True)),
                ("head1", models.IntegerField(blank=True, null=True)),
                ("limit1", models.IntegerField(blank=True, null=True)),
                ("head2", models.IntegerField(blank=True, null=True)),
                ("limit2", models.IntegerField(blank=True, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vocher_limit_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VocherNtry",
            fields=[
                ("vid", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("ntry_date", models.DateField()),
                ("status", models.IntegerField()),
                ("totalamount", models.CharField(max_length=11)),
                ("head1", models.IntegerField()),
                ("head1_sts", models.IntegerField()),
                ("head2", models.IntegerField()),
                ("head2_sts", models.IntegerField()),
                ("pay_type", models.CharField(blank=True, max_length=2, null=True)),
                ("acc_doc", models.CharField(blank=True, max_length=20, null=True)),
                ("pay_doc", models.CharField(blank=True, max_length=12, null=True)),
                ("chequeno", models.CharField(blank=True, max_length=15, null=True)),
                ("clearing_date", models.DateField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vocher_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VocherStatusMaster",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("status", models.IntegerField()),
                ("sname", models.CharField(max_length=20)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vocher_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VocherSubCategory",
            fields=[
                ("sid", models.AutoField(primary_key=True, serialize=False)),
                ("cid", models.IntegerField(blank=True, null=True)),
                ("sname", models.CharField(blank=True, max_length=81, null=True)),
                ("delete1", models.IntegerField(blank=True, null=True)),
                ("createdby", models.IntegerField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "vocher_sub_category",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VocherTransaction",
            fields=[
                ("tid", models.AutoField(primary_key=True, serialize=False)),
                ("vid", models.IntegerField()),
                ("billno", models.CharField(blank=True, max_length=18, null=True)),
                ("billdate", models.DateField()),
                ("category", models.IntegerField()),
                ("subcat", models.IntegerField()),
                ("amount", models.CharField(max_length=10)),
                ("remarks", models.TextField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("startdate", models.DateField()),
                ("enddate", models.DateField()),
                ("pay_type", models.CharField(blank=True, max_length=2, null=True)),
                ("acc_doc", models.CharField(blank=True, max_length=20, null=True)),
                ("pay_doc", models.CharField(blank=True, max_length=12, null=True)),
                ("chequeno", models.CharField(blank=True, max_length=15, null=True)),
                ("clearing_date", models.DateField()),
                ("indexno", models.IntegerField()),
                ("vocher_project", models.IntegerField()),
            ],
            options={
                "db_table": "vocher_transaction",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="VoucherEntrys",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("voucher_no", models.IntegerField()),
                ("transporter", models.CharField(blank=True, max_length=3, null=True)),
                ("movement", models.DateField()),
                (
                    "from_field",
                    models.CharField(
                        blank=True, db_column="from", max_length=100, null=True
                    ),
                ),
                ("to", models.CharField(blank=True, max_length=100, null=True)),
                ("lr_no", models.CharField(blank=True, max_length=20, null=True)),
                ("docs_no", models.CharField(blank=True, max_length=20, null=True)),
                ("amt", models.DecimalField(decimal_places=2, max_digits=10)),
                ("scancopy", models.CharField(blank=True, max_length=100, null=True)),
                ("empcode", models.CharField(blank=True, max_length=8, null=True)),
                ("dept", models.CharField(blank=True, max_length=5, null=True)),
                ("status", models.CharField(max_length=1)),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.CharField(max_length=1)),
            ],
            options={
                "db_table": "voucher_entrys",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Warranty",
            fields=[
                (
                    "materialcode",
                    models.CharField(max_length=20, primary_key=True, serialize=False),
                ),
                ("noofmonths", models.IntegerField()),
                ("createdby", models.BigIntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "warranty",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WelfareAdapt",
            fields=[
                ("slno", models.IntegerField(primary_key=True, serialize=False)),
                ("comp_code", models.IntegerField()),
                ("loc", models.CharField(max_length=50)),
                ("dept", models.IntegerField()),
                ("empcode", models.IntegerField()),
                ("uniq_slno_matnr", models.CharField(max_length=250)),
                ("qty", models.IntegerField()),
                ("months", models.IntegerField()),
                ("issue_qty", models.IntegerField()),
                ("issue_date", models.DateField()),
                ("issue_by", models.IntegerField()),
                ("type", models.IntegerField()),
                ("reason", models.TextField()),
                ("size", models.CharField(max_length=25)),
                ("delete1", models.IntegerField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "welfare_adapt",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WelfareCal",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "particulars",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("date", models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                "db_table": "welfare_cal",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WelfareCalender",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("particulars", models.TextField()),
                ("period", models.IntegerField(blank=True, null=True)),
                ("period_unit", models.IntegerField()),
                ("tenure", models.IntegerField()),
                ("tenure_unit", models.IntegerField(db_column="tenure_Unit")),
                ("alert", models.IntegerField(blank=True, null=True)),
                ("alert_unit", models.IntegerField(db_column="alert_Unit")),
                ("visibility", models.IntegerField()),
                ("responsibility", models.IntegerField()),
                ("authorization", models.IntegerField()),
                ("timsetamp", models.DateTimeField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "welfare_calender",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WelfareCalenderDump",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("particulars", models.TextField()),
                ("period", models.CharField(blank=True, max_length=3, null=True)),
                ("period_unit", models.IntegerField()),
                ("tenure", models.IntegerField()),
                ("tenure_unit", models.IntegerField(db_column="tenure_Unit")),
                ("alert", models.CharField(blank=True, max_length=3, null=True)),
                ("alert_unit", models.IntegerField(db_column="alert_Unit")),
                ("visibility", models.IntegerField()),
                ("responsibility", models.IntegerField()),
                ("authorization", models.IntegerField()),
                ("timsetamp", models.DateTimeField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "welfare_calender_dump",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WelfareInventoryMaster2",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("matcode", models.CharField(max_length=25)),
                ("group", models.CharField(max_length=11)),
                ("subgroup", models.CharField(max_length=25)),
                ("category", models.CharField(max_length=250)),
                ("uom", models.CharField(max_length=150)),
                ("size", models.CharField(max_length=150)),
                ("color", models.CharField(max_length=150)),
                ("due_date", models.CharField(max_length=150)),
                ("tobe_issued", models.CharField(max_length=10)),
                ("min_qty", models.CharField(max_length=25)),
                ("act_qty", models.IntegerField()),
                ("rec_qty", models.IntegerField()),
                ("indent_slno", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "welfare_inventory_master2",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WelfareMcat2",
            fields=[
                ("main", models.AutoField(primary_key=True, serialize=False)),
                ("company_code", models.IntegerField()),
                ("matcode", models.CharField(max_length=250)),
                ("category", models.CharField(max_length=100)),
                ("group", models.CharField(max_length=11)),
                ("subgroup", models.CharField(max_length=100)),
                ("createdby", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "welfare_mcat2",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WelfarePoDetails",
            fields=[
                ("slno", models.IntegerField(primary_key=True, serialize=False)),
                ("matcode", models.CharField(max_length=150)),
                ("stack_entry_date", models.DateField()),
                ("entry_qty", models.IntegerField()),
                ("ind_no", models.CharField(max_length=150)),
                ("ind_date", models.DateField()),
                ("ven_name", models.CharField(max_length=150)),
                ("po_num", models.CharField(max_length=150)),
                ("po_date", models.DateField()),
                ("ven_addr", models.TextField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "welfare_po_details",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WelfareValidationData",
            fields=[
                ("slno", models.AutoField(primary_key=True, serialize=False)),
                ("valid_main_id", models.IntegerField()),
                ("type_id", models.IntegerField()),
                ("subtype_id", models.IntegerField()),
                ("qty", models.IntegerField()),
                ("due_date", models.DateField()),
                ("eff_from", models.DateField()),
                ("eff_to", models.DateField()),
                ("active", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "welfare_validation_data",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WorkshopLpoNtry",
            fields=[
                ("uniq_slno", models.AutoField(primary_key=True, serialize=False)),
                ("empcode", models.IntegerField()),
                ("deptcode", models.IntegerField()),
                ("matnr", models.CharField(blank=True, max_length=20, null=True)),
                ("purpose_id", models.IntegerField()),
                ("qty", models.FloatField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("actuval_req_date", models.DateField(blank=True, null=True)),
                ("hod_code", models.IntegerField()),
                ("hod_status", models.IntegerField()),
                ("hod_timestamp", models.CharField(max_length=18)),
                ("hod_remarks", models.CharField(max_length=500)),
                ("request_date", models.DateField(blank=True, null=True)),
                ("completedby", models.CharField(max_length=50)),
                ("status", models.SmallIntegerField()),
                ("pqty", models.IntegerField()),
                (
                    "actuval_proposed_start_date",
                    models.DateField(blank=True, null=True),
                ),
                ("actuval_proposed_end_date", models.DateField(blank=True, null=True)),
                (
                    "actuval_proposed_start_time",
                    models.TimeField(blank=True, null=True),
                ),
                ("actuval_proposed_end_time", models.TimeField(blank=True, null=True)),
                ("proposed_start_date", models.DateField(blank=True, null=True)),
                ("proposed_end_date", models.DateField(blank=True, null=True)),
                ("proposed_start_time", models.TimeField(blank=True, null=True)),
                ("proposed_end_time", models.TimeField(blank=True, null=True)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateField(blank=True, null=True)),
                ("del_by", models.CharField(max_length=6)),
            ],
            options={
                "db_table": "workshop_lpo_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WorkShopMaster",
            fields=[
                ("crtn_date", models.DateField()),
                ("order_no", models.IntegerField()),
                ("mat_code", models.CharField(max_length=20)),
                ("mat_desc", models.CharField(max_length=50)),
                ("tot_qty", models.IntegerField()),
                ("prdcd_qty", models.IntegerField()),
                ("status", models.IntegerField()),
                ("rej_qty", models.IntegerField()),
                ("acc_qty", models.IntegerField()),
                ("rej_per", models.FloatField()),
                ("remarks", models.CharField(max_length=250)),
                ("filled_date", models.DateField()),
                ("createdby", models.BigIntegerField()),
                ("slno", models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                "db_table": "work_shop_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WorkShopNtry",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("slno", models.IntegerField()),
                ("prdcd_from_date", models.DateField()),
                ("prdcd_to_date", models.DateField()),
                ("prdcd_qty", models.IntegerField()),
                ("rej_qty", models.IntegerField()),
                ("acc_qty", models.IntegerField()),
                ("per_qty", models.FloatField()),
                ("ntry_date", models.DateField()),
                ("createdby", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "work_shop_ntry",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WorkshopPurposeMasterLpo",
            fields=[
                ("purpose_id", models.AutoField(primary_key=True, serialize=False)),
                ("purpose_name", models.CharField(max_length=50)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=150)),
            ],
            options={
                "db_table": "workshop_purpose_master_lpo",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WorkShopRejReson",
            fields=[
                ("sno", models.AutoField(primary_key=True, serialize=False)),
                ("rej_reson", models.CharField(max_length=100)),
                ("date", models.DateField()),
                ("rmrks", models.CharField(max_length=250)),
                ("createdby", models.IntegerField()),
                ("slno", models.IntegerField()),
            ],
            options={
                "db_table": "work_shop_rej_reson",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WorkshopStatusMaster",
            fields=[
                ("status", models.SmallAutoField(primary_key=True, serialize=False)),
                ("status_name", models.CharField(max_length=30)),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField(blank=True, null=True)),
                ("delete1", models.IntegerField()),
                ("del_by", models.IntegerField()),
                ("del_date", models.DateField()),
                ("del_reason", models.CharField(max_length=50)),
            ],
            options={
                "db_table": "workshop_status_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WorshopLpoAttachment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uniq_slno", models.IntegerField()),
                ("file_name", models.CharField(max_length=50)),
                ("file_type", models.CharField(max_length=50)),
                ("file_path", models.CharField(max_length=50)),
                ("full_path", models.CharField(max_length=50)),
                ("raw_name", models.CharField(max_length=50)),
                ("orig_name", models.CharField(max_length=50)),
                ("client_name", models.CharField(max_length=50)),
                ("file_ext", models.CharField(max_length=50)),
                ("file_size", models.CharField(max_length=50)),
                ("is_image", models.CharField(max_length=50)),
                ("image_width", models.CharField(max_length=50)),
                ("image_height", models.CharField(max_length=50)),
                ("image_type", models.CharField(max_length=50)),
                ("image_size_str", models.CharField(max_length=50)),
                ("type", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
                ("del_date", models.DateTimeField()),
                ("del_by", models.IntegerField()),
                ("del_reason", models.CharField(max_length=20)),
            ],
            options={
                "db_table": "worshop_lpo_attachment",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="WorshopTrackHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("slno", models.IntegerField()),
                ("comments", models.TextField()),
                ("date", models.DateField()),
                ("status", models.IntegerField()),
                ("remarks", models.TextField()),
                ("pqty", models.IntegerField()),
                ("created_by", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "worshop_track_history",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="YearMasterNew",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("year", models.IntegerField()),
                ("day", models.CharField(max_length=2)),
                ("dws", models.CharField(max_length=4)),
                ("hci", models.IntegerField()),
                ("dt", models.IntegerField()),
                ("loc", models.CharField(max_length=4)),
                ("created", models.IntegerField()),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "year_master_new",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="YeasrMaster",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("year", models.IntegerField()),
                ("day", models.CharField(blank=True, max_length=2, null=True)),
                ("dws", models.CharField(blank=True, max_length=4, null=True)),
                ("hci", models.IntegerField()),
                ("dt", models.IntegerField()),
                ("loc", models.CharField(max_length=4)),
                ("created", models.IntegerField()),
                ("delete1", models.IntegerField()),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "yeasr_master",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="YeasrMasterTemp",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date", models.DateField()),
                ("day", models.CharField(max_length=2)),
                ("dws", models.CharField(max_length=4)),
                ("hci", models.IntegerField()),
                ("dt", models.IntegerField()),
                ("loc", models.CharField(max_length=2)),
            ],
            options={
                "db_table": "yeasr_master_temp",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="ZoneShed",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("zone_name", models.CharField(blank=True, max_length=40, null=True)),
                ("shed_name", models.CharField(blank=True, max_length=40, null=True)),
                ("zone_short_name", models.CharField(max_length=10)),
                ("shed_short_name", models.CharField(max_length=10)),
                ("delete1", models.IntegerField()),
            ],
            options={
                "db_table": "zone_shed",
                "managed": False,
            },
        ),
    ]
